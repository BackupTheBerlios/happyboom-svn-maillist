From haypo at berlios.de  Mon Oct  3 14:45:33 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Mon, 3 Oct 2005 14:45:33 +0200
Subject: [Happyboom-svn] r221 - / haypo trouphp
Message-ID: <200510031245.j93CjXjV016945@sheep.berlios.de>

Author: haypo
Date: 2005-10-03 14:45:32 +0200 (Mon, 03 Oct 2005)
New Revision: 221

Added:
   trouphp/
   trouphp/check_fct.sh
   trouphp/file.regex
   trouphp/include.regex
   trouphp/mysql.regex
   trouphp/session.regex
Modified:
   haypo/apache_log.py
Log:
Ajoute le script trouphp et met a jour apache_log.py


Modified: haypo/apache_log.py
===================================================================
--- haypo/apache_log.py	2005-09-28 00:18:34 UTC (rev 220)
+++ haypo/apache_log.py	2005-10-03 12:45:32 UTC (rev 221)
@@ -26,14 +26,14 @@
         self._regex = re.compile(regex)
         self.handler = self.processLine
 
-    def processLine(self, line_number, line, info):
+    def processLine(self, filename, line_number, line, info):
         print "Line %u: %s %s" % (line_number, info["method"], info["url"])
 
-    def parseLine(self, line_number, line):
+    def parseLine(self, filename, line_number, line):
         try:
             m = self._regex.search(line)
             if m == None:
-                print "Can't parse line %u:\n%s" % (line_number, line)
+                print "Can't parse %s:%u:\n%s" % (filename, line_number, line)
                 return
             origin, host, user, date, method, url, code, size, referrer, browser = m.groups()
             kw = { \
@@ -47,7 +47,7 @@
                 "size": size,
                 "referrer": referrer,
                 "browser": browser}
-            self.handler(line_number, line, kw)
+            self.handler(filename, line_number, line, kw)
         except KeyboardInterrupt:
             print "Interrupt line: %s" % line
             raise
@@ -69,7 +69,7 @@
 #                    t = time.time()
 #                    progress = int( (line_number-1)*100/nb_lines )
 #                    print "Progress: %s%%" % (progress)
-                self.parseLine(line_number, line)
+                self.parseLine(filename, line_number, line)
                 line_number += 1
             print "File loaded."
         except KeyboardInterrupt:
@@ -95,11 +95,11 @@
         else:
             attr[key] = 1
 
-    def processLine(self, line_number, line, info):
+    def processLine(self, filename, line_number, line, info):
         url = info["url"]
         code = info["code"]
         referrer = info["referrer"]
-        
+
         # Clean url (remove hostname)
         m = self.regex_host.match(url)
         if m != None:
@@ -164,11 +164,23 @@
 def googleHosts():        
     return ["216\.239\.59\.104", \
         "66\.249\.93\.104", "66.102.9.104", \
-        "216.109.124.98", "(images|www)\.google\.(fr|com)"]
+        "216.109.124.98", "(images|www)\.google\.[a-z]{2,3}"]
 
+def msnHosts():
+    return ["search.msn.[a-z]{2,3}"]
+
 def yahooHosts():
     return ["[a-z]+.search.yahoo.com"]
 
+def altavistaHosts():
+    return ["www.altavista.com"]
+
+def faiSearchHosts():
+    return ["search[0-9]-[0-9].free.fr", "search.ke.voila.fr"]
+
+def searchEngineHosts():        
+    return googleHosts() + yahooHosts() + msnHosts() + altavistaHosts() + faiSearchHosts()
+
 def printTopReferrer(r, max):
     print "=== Top referrer ==="
     pages = r.getTopReferrer(max)
@@ -178,10 +190,9 @@
 class HaypoCALC:
     def __init__(self):
         # Ignore referrer regex
-        hosts = ["(www\.)?haypocalc\.com"] # Haypocalc
-        hosts.append ("exoscin\.free\.fr") # Exoscin.free.fr
-        hosts += googleHosts()
-        hosts += yahooHosts()
+        hosts = ["(www\.)?haypocalc\.com"] # Ignore Haypocalc
+        hosts.append ("exoscin\.free\.fr") # Ignore exoscin.free.fr
+        hosts += searchEngineHosts()       # Ignore search engines
         self.ignore_referrer = [ re.compile(r"^http://("+"|".join(hosts)+")")  ]
 
         # Ignore url regex
@@ -215,9 +226,14 @@
         filename = sys.argv[1]
         r=ApacheLogParser_Stat("haypocalc.com")
         r.ignore_handler = h.ignoreHandler
+
         r.parseFile(filename)
-        printTopPage(r, 10)
-        printTopReferrer(r, 10)
+#        for month in range(1,31):
+#            filename = "/mnt/media/log-haypocalc/logs-08-2005/haypocalc.com-%02u-08-2005.log" % month
+#            r.parseFile(filename)
+        
+        printTopPage(r, 20)
+        printTopReferrer(r, 20)
     except KeyboardInterrupt:
         print "Program interrupted (CTRL+C)."
         

Added: trouphp/check_fct.sh
===================================================================
--- trouphp/check_fct.sh	2005-09-28 00:18:34 UTC (rev 220)
+++ trouphp/check_fct.sh	2005-10-03 12:45:32 UTC (rev 221)
@@ -0,0 +1,32 @@
+#!/bin/sh
+
+DIR=$(dirname $0)
+
+# Check source file
+if [ $# -lt 2 ]; then
+  echo "$(basename $0) file.php check1 check2 ... : List all functions with match with given regex"
+  echo
+  echo "Available checks :"
+  for i in $(cd $DIR; ls *.regex); do
+     echo "? $i"
+  done
+  exit 1
+fi
+SRC=$1
+shift
+
+if [ ! -e $SRC ]; then
+	echo "PHP source file \"$SRC\" doesn't exist";
+fi
+
+GREP_OPT="-H -n"
+
+for i in $*; do
+  FILE="$DIR/$i.regex"
+  if [ -e $FILE ]; then
+    REGEX_FUNC=$(cat $FILE);
+    egrep $GREP_OPT "$REGEX_FUNC" $SRC;
+  else
+    echo "File $FILE doesn't exist";
+  fi
+done


Property changes on: trouphp/check_fct.sh
___________________________________________________________________
Name: svn:executable
   + *

Added: trouphp/file.regex
===================================================================
--- trouphp/file.regex	2005-09-28 00:18:34 UTC (rev 220)
+++ trouphp/file.regex	2005-10-03 12:45:32 UTC (rev 221)
@@ -0,0 +1 @@
+\<(chgrp|chmod|chown|copy|delete|file_exists|file_get_contents|file_put_contents|file|fileatime|filectime|filegroup|fileinode|filemtime|fileowner|fileperms|filesize|filetype|flock|fopen|fpassthru|fstat|glob|is_dir|is_executable|is_file|is_link|is_readable|is_uploaded_file|is_writable|is_writeable|link|linkinfo|lstat|mkdir|move_uploaded_file|pathinfo|popen|readfile|readlink|realpath|rename|rmdir|stat|symlink|tempnam|tmpfile|touch|umask|unlink)\> *\(

Added: trouphp/include.regex
===================================================================
--- trouphp/include.regex	2005-09-28 00:18:34 UTC (rev 220)
+++ trouphp/include.regex	2005-10-03 12:45:32 UTC (rev 221)
@@ -0,0 +1 @@
+(include|include_once|require|require_once) *[\("]

Added: trouphp/mysql.regex
===================================================================
--- trouphp/mysql.regex	2005-09-28 00:18:34 UTC (rev 220)
+++ trouphp/mysql.regex	2005-10-03 12:45:32 UTC (rev 221)
@@ -0,0 +1 @@
+(mysql_change_user|mysql_client_encoding|mysql_connect|mysql_create_db|mysql_data_seek|mysql_drop_db|mysql_get_client_info|mysql_get_host_info|mysql_get_proto_info|mysql_get_server_info|mysql_info|mysql_insert_id|mysql_list_dbs|mysql_list_fields|mysql_list_processes|mysql_list_tables|mysql_pconnect|mysql_ping|mysql_query|mysql_select_db|mysql_stat|mysql_tablename|mysql_thread_id|mysql_unbuffered_query) *\(

Added: trouphp/session.regex
===================================================================
--- trouphp/session.regex	2005-09-28 00:18:34 UTC (rev 220)
+++ trouphp/session.regex	2005-10-03 12:45:32 UTC (rev 221)
@@ -0,0 +1 @@
+(session_cache_expire|session_cache_limiter|session_commit|session_decode|session_encode|session_get_cookie_params|session_id|session_is_registered|session_module_name|session_name|session_regenerate_id|session_register|session_save_path|session_set_cookie_params|session_set_save_handler|session_start|session_unregister|session_write_close) *\(



From haypo at berlios.de  Fri Oct 28 00:32:05 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Fri, 28 Oct 2005 00:32:05 +0200
Subject: [Happyboom-svn] r223 - haypo/hachoir/plugins
Message-ID: <200510272232.j9RMW59G017906@sheep.berlios.de>

Author: haypo
Date: 2005-10-28 00:32:04 +0200 (Fri, 28 Oct 2005)
New Revision: 223

Added:
   haypo/hachoir/plugins/__init__.py
Log:
Add forgotten __init__.py


Added: haypo/hachoir/plugins/__init__.py
===================================================================



From haypo at berlios.de  Fri Oct 28 00:30:33 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Fri, 28 Oct 2005 00:30:33 +0200
Subject: [Happyboom-svn] r222 - / haypo haypo/hachoir haypo/hachoir/plugins
Message-ID: <200510272230.j9RMUXbj014902@sheep.berlios.de>

Author: haypo
Date: 2005-10-28 00:30:32 +0200 (Fri, 28 Oct 2005)
New Revision: 222

Added:
   haypo/hachoir/
   haypo/hachoir/Makefile
   haypo/hachoir/filter.py
   haypo/hachoir/hachoir.py
   haypo/hachoir/plugin.py
   haypo/hachoir/plugins/
   haypo/hachoir/plugins/exe.py
   haypo/hachoir/plugins/gif.py
   haypo/hachoir/plugins/ncftp.py
   haypo/hachoir/plugins/png.py
   haypo/hachoir/plugins/zip.py
   haypo/hachoir/stream.py
   haypo/lamer/
Removed:
   lamer/
Log:
Add hachoir project, move lamer into haypo subdir.


Added: haypo/hachoir/Makefile
===================================================================
--- haypo/hachoir/Makefile	2005-10-03 12:45:32 UTC (rev 221)
+++ haypo/hachoir/Makefile	2005-10-27 22:30:32 UTC (rev 222)
@@ -0,0 +1,2 @@
+clean:
+	rm -f *.pyc plugins/*.pyc

Added: haypo/hachoir/filter.py
===================================================================
--- haypo/hachoir/filter.py	2005-10-03 12:45:32 UTC (rev 221)
+++ haypo/hachoir/filter.py	2005-10-27 22:30:32 UTC (rev 222)
@@ -0,0 +1,119 @@
+"""
+Base class for all splitter filters.
+"""
+
+import struct
+import re
+import sys
+import types
+import string
+
+class Filter:
+    def __init__(self, stream, parent=None):
+        self._sub_struct = {}
+        self.stream = stream
+        self.parent = parent
+        if self.parent:
+            self.depth = parent.depth + 1
+        else:
+            self.depth = 1
+        self.indent = " " * ((self.depth-1)*2)
+        self.child_indent = " " * (self.depth*2)
+
+    def __replaceFieldFormat(self, match):
+        return str(getattr(self, match.group(1)))
+
+    def openChild(self):
+        self.__child_stream_pos = self.stream.tell()
+
+    def closeChild(self, text):
+        if display_filter_actions != self.depth: return
+        size = self.stream.tell() - self.__child_stream_pos
+        sys.stdout.write("%s<%s (%u bytes)>\n" % (self.indent, text, size))
+
+    def newChild(self, text):
+        if display_filter_actions < self.depth+1: return
+        sys.stdout.write("%s[ %s ]\n" % (self.child_indent, text))
+
+    def __isStrPrintable(self, str):
+        """
+        Can a string be printed on the screen?
+        """
+        for c in str:
+            if c not in string.printable: return False
+        return True
+
+    def readField(self, id, description, delimiter):
+        lg = self.stream.searchLength(delimiter, False)
+        if lg == -1:
+            raise Exception("Delimiter \"%s\" not found for %s (%s)!" % (delimiter, id, description))
+        self.read(id, "!%us" % lg, description) 
+        self.read(None, "!%us" % len(delimiter), "Delimiter of %s" % id) 
+
+    def searchEol(self, eol):
+        lg = self.stream.searchLength(eol, True)
+        if lg == -1:
+            return self.stream.getLastPos() - self.stream.tell()
+        else:
+            return lg
+
+    def readLine(self, id, description, eol="\n", fails_if_not_found=False, can_truncate=False):
+        lg = self.searchEol(eol)
+        self.read(id, "!%us" % lg, description, can_truncate)
+        line = getattr(self, id)
+        setattr(self, id, line[:-len(eol)])
+        
+    def read(self, id, format, description, can_truncate=True):
+        format = re.sub(r'\[([^]]+)\]', self.__replaceFieldFormat, format)
+        size = struct.calcsize(format)
+        max = 80 
+        if size<max or format[-1] != "s" or not can_truncate:
+            rawdata = self.stream.getN(size)
+            assert len(rawdata) == size
+            data = struct.unpack(format, rawdata)
+            data = data[0]
+        else:
+            rawdata = self.stream.getN(max)
+            assert len(rawdata) == max
+            data = rawdata + "(...)"
+            self.stream.seek( self.stream.tell() + size - max )
+        # Display content ?
+        if self.depth <= display_filter_actions and 0<size:
+            # Write indentation
+            sys.stdout.write(self.indent)
+
+            # Write first 4 bytes in hexadecimal
+            i = 0
+            for byte in rawdata:
+                # If there are more than 4 bytes, write "..."
+                if 4 <= i:
+                    sys.stdout.write(".. ")
+                    i = i + 1
+                    break
+                sys.stdout.write("%02X " % ord(byte))
+                i = i + 1
+
+            # Align text to 4 bytes
+            sys.stdout.write("   " * (5-i))
+
+            # Write description
+            sys.stdout.write("%s (%u bytes)" % (description, size))
+
+            # Write content like id=value?
+            if id != None:
+                t = type(data)
+                if t==types.IntType or t==types.LongType:
+                    # Display integers
+                    sys.stdout.write(", %s = %u" % (id, data))
+                elif type(data)==types.StringType and len(data)<max:
+                    # Display string (replace ASCII < 32 by \xCC)
+                    display = re.sub("([\x00-\x1F])", lambda m: "\\x%02X" % ord(m.group(1)), data)
+                    if self.__isStrPrintable(display):
+                        sys.stdout.write(", %s=\"%s\"" % (id, display))
+            sys.stdout.write("\n")
+
+        # Save result in the object
+        if id != None:
+            setattr(self, id, data)
+
+display_filter_actions = 1

Added: haypo/hachoir/hachoir.py
===================================================================
--- haypo/hachoir/hachoir.py	2005-10-03 12:45:32 UTC (rev 221)
+++ haypo/hachoir/hachoir.py	2005-10-27 22:30:32 UTC (rev 222)
@@ -0,0 +1,131 @@
+#!/usr/bin/python
+"""
+Splitter: tool to split a binary file into human readable data.
+Because it's written in Python, it would be easy to write new plugins
+(supports new file format).
+
+Author: Victor Stinner
+"""
+
+PROGRAM="Hachoir"
+VERSION="2005-10-27"
+
+import sys, os, re, traceback
+from stream import FileStream
+import filter
+from plugin import getPlugin
+
+def usage(defval):
+    print "%s version %s" % (PROGRAM, VERSION)
+    print ""
+    print "Usage: %s [options] file" % (sys.argv[0])
+    print ""
+    print "Options:"
+    print "\t--help            : Show this help"
+    print "\t--version         : Show the program version"
+    print "\t--verbose         : Activate verbose mode"
+    print "\t--depth NB        : Detail depth (default %u)" % (defval["depth"])
+    print "\t--no-display      : Hide result"
+
+def parseArgs(val):
+    import getopt
+    def_val = val.copy()
+    
+    try:
+        short = ""
+        long = ["no-display", "verbose", "help", "version", "depth="]
+        opts, args = getopt.getopt(sys.argv[1:], short, long)
+    except getopt.GetoptError:
+        usage(def_val)
+        sys.exit(2)
+   
+    if len(args) != 1:
+        usage(def_val)
+        sys.exit(2)
+        
+    for o, a in opts:
+        if o == "--help":
+            usage(def_val)
+            sys.exit()
+        if o == "--version":
+            print "%s version %s" % (PROGRAM, VERSION)
+            sys.exit()
+        if o == "--no-display":
+            val["display"] = False
+        if o == "--depth":
+            val["depth"] = int(a)
+        if o == "--verbose":
+            val["verbose"] = True
+    return (val, args[0],)
+
+class Hachoir:
+    def __init__(self):
+        self.verbose = False
+        self.display = True
+        self.depth = 5
+
+    def run(self, filename):
+        # Look for a plugin
+        plugin = getPlugin(filename)
+        if plugin != None:
+            regex, plugin_name, split_func, display_func = plugin
+            if self.verbose:
+                print "Split file \"%s\": %s." % (filename, plugin_name)
+            
+            # Create stream
+            stream = FileStream(filename)
+
+            # Split 
+            filter.display_filter_actions = self.depth
+            if 0 < self.depth:
+                print "=== Split file %s ===" % filename
+            split = split_func(stream)
+            if 0 < self.depth:
+                print ""
+
+            # Display
+            if self.display:
+                print "=== File %s data ===" % filename
+                display_func(split)
+        else:
+            print "No suitable plugin for \"%s\"." % (filename)
+            sys.exit(1)
+
+def main():
+    try:        
+        import imp
+        plugins_dir = os.path.join(os.path.dirname(__file__), "plugins")
+        plugins_files = os.listdir(plugins_dir)
+        file_py = re.compile("^([a-z0-9_]+)\.py$")
+        modules = []
+        for file in plugins_files:
+            m = file_py.match(file)
+            if m != None:
+                module = "plugins."+m.group(1)
+                __import__(module)
+                modules.append(m.group(1))
+        print "Loaded: %u plugings (%s)" % (len(modules), ", ".join(modules))
+
+        opt = {
+            "depth": 2,
+            "verbose": False,
+            "display": True
+        }
+        if len(sys.argv) < 2:
+            usage(opt)
+            sys.exit(1)
+
+        opt, filename = parseArgs(opt)
+
+        hachoir = Hachoir()
+        for key in opt:
+            setattr(hachoir, key, opt[key])
+        hachoir.run(filename)
+    except SystemExit:
+        pass
+    except Exception, err:
+        print "Exception:\n%s" % (err)
+        print "".join(traceback.format_exception( \
+            sys.exc_type, sys.exc_value, sys.exc_traceback))
+
+if __name__=="__main__": main()    


Property changes on: haypo/hachoir/hachoir.py
___________________________________________________________________
Name: svn:executable
   + *

Added: haypo/hachoir/plugin.py
===================================================================
--- haypo/hachoir/plugin.py	2005-10-03 12:45:32 UTC (rev 221)
+++ haypo/hachoir/plugin.py	2005-10-27 22:30:32 UTC (rev 222)
@@ -0,0 +1,14 @@
+import re
+
+def getPlugin(filename):
+    global hachoir_plugins
+    for plugin in hachoir_plugins:
+        if plugin[0].match(filename) != None: return plugin
+    return None
+    
+def registerPlugin(regex, name, splitFunc, displayFunc):
+    global hachoir_plugins
+    regex = re.compile(regex)
+    hachoir_plugins.append( (regex, name, splitFunc, displayFunc,) )
+
+hachoir_plugins = [] 

Added: haypo/hachoir/plugins/exe.py
===================================================================
--- haypo/hachoir/plugins/exe.py	2005-10-03 12:45:32 UTC (rev 221)
+++ haypo/hachoir/plugins/exe.py	2005-10-27 22:30:32 UTC (rev 222)
@@ -0,0 +1,233 @@
+"""
+EXE filter.
+
+Status: alpha 
+Author: Victor Stinner
+"""
+
+from filter import Filter
+from plugin import registerPlugin
+
+def displayPE(pe):
+    print "[ PE HEADER ]"
+    print "Architecture: %s" % pe.getCpuType()
+            
+def displayPE_Section(section):
+    print "-> Section %- 8s: size=%u, rva=%08X" % \
+        (section.name, section.size, section.rva)
+
+def displayPE_Resource(res):
+    print "Resource: id=%u" % \
+        (res.id)
+        
+def displayPE_ResourceDirectory(res):
+    print "Resources: nb_entries = %u + %s" % \
+        (res.named_entries, res.indexed_entries)
+    for item in res.items:
+        displayPE_Resource(item)
+
+def displayExe(exe):
+    print "[ MS-DOS HEADER ]"
+    print "Init. SS:SP: %04X:%04X" % \
+        (exe.init_ss_sp & 0xFFFF,
+         exe.init_ss_sp >> 16 & 0xFFFF)
+    if exe.pe:
+#        displayPE(exe.pe)
+        for section in exe.pe_sections:
+            displayPE_Section(section)
+        for res in exe.pe_resources:
+            displayPE_ResourceDirectory(res)
+            
+class PE_ResourceData(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("offset", "<L", "Offset")
+        self.read("size", "<L", "Size")
+        self.read("page_code", "<L", "Page code (language)")
+        self.read("language", "<l", "Page code (language)")
+        self.language = -self.language
+        self.read(None, "!L", "Reserverd")
+
+        oldpos = stream.tell()
+        
+        #stream.seek(XXX + self.offset - self.offset_res_section)
+        stream.seek(self.offset)
+        stream.seek(oldpos)
+
+class PE_ResourceEntry(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("id", "<L", "ID or name")
+        self.read("offset", "<L", "Offset")
+        
+class PE_ResourceDirectory(Filter):
+    def __init__(self, stream, parent, offset_res_section):
+        Filter.__init__(self, stream, parent)
+        self.offset_res_section = offset_res_section
+        self.read("option", "<L", "Options")
+        self.read("creation_date", "<L", "Creation date")
+        self.read("maj_ver", "<H", "Major version")
+        self.read("named_entries", "<H", "Named entries")
+        self.read("indexed_entries", "<H", "Indexed entries")
+        nb_entries = self.named_entries + self.indexed_entries
+        self.openChild()
+
+        stream.seek( stream.tell() + 0x10)
+        self.items = []
+        for i in range(nb_entries):
+            self.newChild("Resource")
+            self.items.append( PE_ResourceEntry(stream,self) )
+        self.closeChild("Resources")
+
+class PE_Section(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("name", "8s", "Name")
+        self.name = self.name.strip("\0")
+        self.read("rva", "<L", "RVA")
+        self.read("size", "<L", "Size")
+        self.read("file_size", "<L", "File size")
+        self.read("file_offset", "<L", "File offset")
+        self.read("reloc_ptr", "<L", "Relocation pointer")
+        self.read("lines_ptr", "<L", "File line numbers pointer")
+        self.read("nb_reloc", "<H", "Number of relocations")
+        self.read("nb_lines", "<H", "Number of file line")
+        self.read("options", "<L", "Options")
+
+class PE_Directory(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("size", "<L", "Size")
+        self.read("rva", "<L", "RVA")
+
+class PE_OptionnalHeader(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("header", "<H", "Header")
+        assert self.header == 0x010B
+        self.read("linker_maj_ver", "B", "Linker major version")
+        self.read("linker_min_ver", "B", "Linker minor version")
+        self.read("code_size", "<L", "Code size (bytes)")
+        self.read("data_size", "<L", "Data size (bytes)")
+        self.read("heap_size", "<L", "Heap size (bytes)")
+        self.read("entry_point_rva", "<L", "Entry point offset (RVA)")
+        self.read("code_rva", "<L", "Code offset (RVA)")
+        self.read("data_rva", "<L", "Data offset (RVA)")
+        self.read("base_image_rva", "<L", "Base image offset (RVA)")
+        self.read("memory_alignment", "<L", "Memory alignment")
+        self.read("file_alignment", "<L", "File alignment")
+        self.read("os_maj_ver", "<H", "OS major version")
+        self.read("os_min_ver", "<H", "OS minor version")
+        self.read("prog_maj_ver", "<H", "Program major version")
+        self.read("prog_min_ver", "<H", "Program minor version")
+        self.read("api_maj_ver", "<H", "API major version?!")
+        self.read("api_min_ver", "<H", "API minor version?!")
+        self.read("windows_ver", "<L", "Windows version?!")
+        self.read("image_size", "<L", "Image size")
+        self.read("headers_size", "<L", "Headers size")
+        self.read("checksum", "<L", "Checkum")
+        self.read("neeed_api", "<H", "Needed API?!")
+        self.read("dll_options", "<H", "DLL options (only for DLL)")
+        self.read("reserved_stack_size", "<L", "Reserved stack size")
+        self.read("common_stack_size", "<L", "Common stack size")
+        self.read("reserved_heap_size", "<L", "Reserved heap size")
+        self.read("common_heap_size", "<L", "Common heap size")
+        self.read("loader_options", "<L", "Loader options")
+        self.read("nb_directories", "<L", "Number of directories (16)")
+        assert self.nb_directories == 16
+        self.directories = []
+        self.openChild()
+        for i in range(self.nb_directories):
+            self.newChild("PE directory")            
+            self.directories.append( PE_Directory(stream, self) )
+        self.closeChild("PE directories")            
+
+class PE_Filter(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("header", "4s", "File header")
+        assert self.header == "PE\0\0"
+        self.read("cpu_type", "<H", "CPU type")
+        self.read("nb_sections", "<H", "Number of sections")
+        self.read("creation_date", "<L", "Creation date")
+        self.read("ptr_to_symbols", "<L", "Pointer to symbol table")
+        self.read("nb_symbols", "<L", "Number of symbols")
+        self.read("opt_header_size", "<H", "Optionnal header size")
+        self.read("options", "<H", "Options")
+
+    def getCpuType(self):
+        cpu_name = {
+            0x014C: "Intel 80386 or greater",
+            0x014D: "Intel 80486 or greater",
+            0x014E: "Intel Pentium or greader", 
+            0x0160: "R3000 (MIPS), big endian",
+            0x0162: "R3000 (MIPS), little endian",
+            0x0166: "R4000 (MIPS), little endian",
+            0x0168: "R10000 (MIPS), little endian",
+            0x0184: "DEC Alpha AXP",
+            0x01F0: "IBM Power PC, little endian"}
+        return cpu_name.get(self.cpu_type, "unknow")
+
+class ExeFilter(Filter):
+    def __init__(self, stream):
+        Filter.__init__(self, stream)
+        self.read("header", "2s", "File header")
+        assert self.header == "MZ"
+        self.read("filesize_mod_512", ">H", "Filesize mod 512")
+        self.read("filesize_div_512", ">H", "Filesize div 512")
+        self.filesize = self.filesize_div_512 * 512 + self.filesize_mod_512
+        self.read("reloc_entries", ">H", "Number of relocation entries")
+        self.read("code_offset", "<H", "Offset to the code in the file (div 16)")
+        self.code_offset = self.code_offset * 16
+        self.read("needed_memory", ">H", "Memory needed to run (div 16)")
+        self.needed_memory = self.needed_memory * 16
+        self.read("max_memory", ">H", "Maximum memory needed to run (div 16)")
+        self.max_memory = self.max_memory * 16
+        self.read("init_ss_sp", ">L", "Initial value of SP:SS registers.")
+        self.read("checksum", ">H", "Checksum")
+        self.read("init_cs_ip", ">L", "Initial value of CS:IP registers.")
+        self.read("reloc_offset", "<H", "Offset in file to relocation table.")
+        self.read("overlay_number", ">H", "Overlay number")
+        self.read(None, ">4H", "Reserverd")
+        self.read("oem_id", ">H", "OEM id")
+        self.read("oem_info", ">H", "OEM info")
+        self.read(None, "!10H", "Reserved")
+        self.read("pe_offset", "<L", "Offset to PE header")
+
+        if self.reloc_offset == 0x40:
+            self.openChild()
+            self.newChild("PE header")
+            self.stream.seek(self.pe_offset)
+            self.pe = PE_Filter(stream, self)
+            self.closeChild("PE header")
+
+            self.openChild()
+            self.newChild("PE optionnal header")            
+            self.pe_optionnal_header = PE_OptionnalHeader(stream, self)
+            self.closeChild("PE optionnal header")            
+
+            self.openChild()
+            self.pe_sections = []
+            for i in range(self.pe.nb_sections):
+                self.newChild("PE section")            
+                self.pe_sections.append( PE_Section(stream, self) )
+            self.closeChild("PE sections")     
+
+            # Look for resource section
+            self.pe_resources = []
+            offset_res_section = None
+            for section in self.pe_sections:
+                if section.name == ".rsrc":
+                    offset_res_section = section.file_offset
+                    self.stream.seek( offset_res_section )
+                    break
+            if offset_res_section != None:
+                self.openChild()
+                for i in range(1): #range(self.pe.nb_sections):
+                    self.newChild("PE resource header")            
+                    self.pe_resources.append( PE_ResourceDirectory(stream, self, offset_res_section) )
+                self.closeChild("PE resources header")            
+        else:
+            self.pe = None
+
+registerPlugin("^.*\.(exe|EXE)$", "MS-Dos / Windows filter", ExeFilter, displayExe)

Added: haypo/hachoir/plugins/gif.py
===================================================================
--- haypo/hachoir/plugins/gif.py	2005-10-03 12:45:32 UTC (rev 221)
+++ haypo/hachoir/plugins/gif.py	2005-10-27 22:30:32 UTC (rev 222)
@@ -0,0 +1,132 @@
+"""
+GIF splitter.
+
+Status: only loads header, and is buggy ...
+Author: Victor Stinner
+"""
+
+from filter import Filter
+from plugin import registerPlugin
+
+def displayGif(gif):
+    print "Format: %s" % (gif.header)
+    print "Size: %ux%u" % (gif.screen.width, gif.screen.height)
+    print "Colormap: %s" % (gif.color_map)
+    for image in gif.images:
+        print image
+
+class GifColor(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("red", "!B", "Red")
+        self.read("green", "!B", "Green")
+        self.read("blue", "!B", "Blue")
+
+class GifImage(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("left", "!H", "Left")
+        self.read("top", "!H", "Top")
+        self.read("width", "!H", "Width")
+        self.read("height", "!H", "Height")
+
+        # TODO: Fix this ...
+        self.read("flags", "!H", "Flags")
+        self.global_map = ((self.flags & 0x80) == 0x80)
+        self.interlaced = ((self.flags & 0x40) == 0x40)
+        self.bits_per_pixel = 1 + (self.flags & 0x07)
+        if not self.global_map:
+            self.local_map = GifColorMap(stream, 1 << self.bits_per_pixel, self)
+        else:
+            self.local_map = None
+        # -- End of TODO
+
+    def __str__(self):
+        return "Gif image <position=(%u,%u), size=%ux%u, bits/pixel=%u>" % \
+            (self.left, self.top,
+             self.width, self.height,
+             self.bits_per_pixel)
+     
+class GifColorMap(Filter):
+    def __init__(self, stream, nb_colors, parent):
+        Filter.__init__(self, stream, parent)
+        self.map = []
+        self.openChild()
+        for i in range(0, nb_colors):
+            self.newChild("Color")
+            self.map.append( GifColor(stream, self) )
+        self.closeChild("Colors")
+
+    def __str__(self):
+        return "Gif colormap <colors=%u>" % (len(self.map))
+        
+class GifExtensionChunk(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("size", "!B", "Size (in bytes)")
+        self.read("content", "![size]s", "Content")
+
+class GifExtension(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("func", "!B", "Function")
+        self.chunks = []
+        self.openChild()
+        while True:
+            self.newChild("Extension chunk")
+            chunk = GifExtensionChunk(stream, self)
+            self.chunks.append( chunk )
+            if chunk.size == 0: break 
+        self.closeChild("Extension chunk")
+        
+class GifScreenDescriptor(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("width", "!H", "Width")
+        self.read("height", "!H", "Height")
+
+        # TODO: Fix this
+        self.read("flags", "!B", "Flags")
+        self.global_map = ((self.flags & 0x80) == 0x80) # ok
+        self.color_res = 1 + ((self.flags >> 4) & 0x7) # ??
+        self.bits_per_pixel = 1 + (self.flags & 0x7) # ok
+        # -- End of TODO
+        
+        self.background = stream.get8()
+        zero = stream.get8()
+        
+class GifFilter(Filter):
+    def __init__(self, stream):
+        Filter.__init__(self, stream)
+        # Header
+        self.read("header", "6s", "File header")
+        assert (self.header == "GIF87a") or (self.header == "GIF89a")
+        self.newChild("Screen descriptor")
+        self.screen = GifScreenDescriptor(stream, self)
+        if self.screen.global_map:
+            self.newChild("Color map")
+            self.color_map = GifColorMap(stream, 1 << self.screen.bits_per_pixel, self)
+        else:
+            self.color_map = None
+        self.images = []
+        self.extensions = []
+        while True:
+            self.read("code", "c", "Separator code")
+            if self.code == "!":
+                self.openChild()
+                self.newChild("New extension")
+                self.extensions.append( GifExtension(stream, self) )
+                self.closeChild("Extension")
+            elif self.code == ",":
+                self.openChild()
+                self.newChild("New image")
+                self.images.append( GifImage(stream, self) )
+                self.closeChild("Image")
+                return
+            elif self.code == ";":
+                # GIF Terminator
+                return
+            else:
+                raise Exception("Wrong GIF image separator: ASCII %02X." % ord(self.code))
+
+registerPlugin("^.*\.(gif|GIF)$", "GIF picture", GifFilter, displayGif)

Added: haypo/hachoir/plugins/ncftp.py
===================================================================
--- haypo/hachoir/plugins/ncftp.py	2005-10-03 12:45:32 UTC (rev 221)
+++ haypo/hachoir/plugins/ncftp.py	2005-10-27 22:30:32 UTC (rev 222)
@@ -0,0 +1,52 @@
+"""
+Ncftp bookmarks filter.
+
+Status: Read most import fields.
+Author: Victor Stinner
+"""
+
+import re, base64
+from filter import Filter
+from plugin import registerPlugin
+from stream import LimitedFileStream
+
+def displayNcftp(data):
+    print "Ncftp saved bookmarks:"
+    for b in data.bookmarks:
+        print "o %s (port %s): u=%s, p=\"%s\"" % \
+            (b.server, b.port, b.username, b.password)
+
+class NcftpBookmark(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.readField("name", "Bookmark name", ",")
+        self.readField("server", "Server name/ip", ",")
+        self.readField("username", "Username", ",")
+        self.readField("password", "Password", ",")
+        self.readField("notused1", "Not used (1)", ",")
+        self.readField("last_dir", "Last directory", ",")
+        self.readField("notused3", "Not used (3)", ",")
+        self.readField("port", "Server port", ",")
+        self.readLine("eol", "End of line", "\n")
+        self.password = self.crackPass(self.password)
+        
+    def crackPass(self, password):
+        m = re.compile("^\*encoded\*(.*)$").match(password)
+        if m == None: return password
+        password = base64.decodestring(m.group(1))
+        return password.strip("\0")
+
+class NcftpFilter(Filter):
+    def __init__(self, stream):
+        Filter.__init__(self, stream)
+        self.readLine("header", "Header (first line")
+        self.readLine("nb_bookmark", "Number of bookmarks")
+
+        self.openChild()
+        self.bookmarks = []
+        while not self.stream.eof():
+            self.newChild("Bookmark")
+            self.bookmarks.append( NcftpBookmark(stream,self) )
+        self.closeChild("Bookmarks")
+        
+registerPlugin("^.*bookmarks$", "NcFTP bookmarks", NcftpFilter, displayNcftp)

Added: haypo/hachoir/plugins/png.py
===================================================================
--- haypo/hachoir/plugins/png.py	2005-10-03 12:45:32 UTC (rev 221)
+++ haypo/hachoir/plugins/png.py	2005-10-27 22:30:32 UTC (rev 222)
@@ -0,0 +1,136 @@
+"""
+PNG splitter.
+
+Status: split into chunks, can only resplit tIME chunk.
+Author: Victor Stinner
+"""
+
+from stream import StringStream, LimitedFileStream
+from filter import Filter
+from plugin import registerPlugin
+
+def displayPng(png):
+    for chunk in png.chunks:
+        if issubclass(chunk.data.__class__, Filter):
+            print chunk.data
+        else:
+            print "(unknow chunk type \"%s\")" % chunk.type
+
+class PngHeader(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("width", "!L", "Width (pixels)")
+        self.read("height", "!L", "Height (pixels)")
+        self.read("bit_depth", "!B", "Bit depth")
+        self.read("color_type", "!B", "Color type")
+        self.read("compression_method", "!B", "Compression method")
+        self.read("filter_method", "!B", "Filter method")
+        self.read("interlace_method", "!B", "Interlace method")
+
+    def __str__(self):
+        return "PNG header <size=%ux%u, depth=%u bits/pixel>" % \
+            (self.width, self.height,
+             self.bit_depth)
+
+class PngPhysical(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("pixel_per_unit_x", "!L", "Pixel per unit, X axis")
+        self.read("pixel_per_unit_y", "!L", "Pixel per unit, Y axis")
+        self.read("unit_type", "!B", "Unit type")
+
+    def __str__(self):
+        if self.unit_type=="0":
+            unit = "unknow"
+        else:
+            unit = "meter"
+        return "PNG physical chunk <pixel per unit=(%u,%u), unit=%s>" % \
+            (self.pixel_per_unit_x, self.pixel_per_unit_y, unit)
+
+class PngGamma(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("gamma", "!L", "Gamma (divided by 10,000)")
+        self.gamma = float(self.gamma)
+        self.gamma = self.gamma / 10000
+
+    def __str__(self):
+        return "PNG gamma <gamma=%0.2f>" % (self.gamma)
+
+class PngText(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        old = self.stream.tell()
+        pos = self.stream.search("\0", 14)
+        if pos == -1:
+            raise Exception("Fails to find end of text")
+        self.read("keyword", "!%us" % (pos-old), "Keyword")
+        self.read("separator", "!B", "Null byte used to separe strings")
+        lg = self.stream.getEnd()-self.stream.tell()
+        self.read("text", "!%us" % lg, "Text")
+
+    def __str__(self):
+        return "PNG text <keyword=\"%s\", text=\"%s\">" % \
+            (self.keyword, self.text)
+
+class PngTime(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("year", "!H", "Year")
+        self.read("month", "!B", "Month")
+        self.read("day", "!B", "Day")
+        self.read("hour", "!B", "Hour")
+        self.read("minute", "!B", "Minute")
+        self.read("second", "!B", "Second")
+
+    def __str__(self):
+        return "PNG time chunk <%04u-%02u-%02u %02u:%02u:%02u>" % \
+            (self.year, self.month, self.day,
+             self.hour, self.minute, self.second)
+
+class PngFilter(Filter):
+    """
+    Split a PNG file into chunks.
+    """
+
+    def __init__(self, stream):
+        Filter.__init__(self, stream)
+        self.read("header", "8s", "File header")
+        assert self.header == "\x89\x50\x4E\x47\x0D\x0A\x1A\x0A"
+        self.chunks = []
+        self.openChild()
+        while not self.stream.eof():
+            self.newChild("New chunk")
+            chunk = PngChunk(stream, parent=self)
+            self.chunks.append( chunk )
+
+        self.closeChild("Chunks")
+        
+class PngChunk(Filter):
+    def __init__(self, stream, parent=None):
+        Filter.__init__(self, stream, parent)
+        self.read("size", "!L", "Chunk size")
+        self.read("type", "!4s", "Chunk type")
+        self.chunk_splitter = {
+            "tIME": PngTime,
+            "pHYs": PngPhysical,
+            "IHDR": PngHeader,
+            "gAMA": PngGamma,
+            "tEXt": PngText
+        }
+        if self.type in self.chunk_splitter:
+            self.openChild()
+            self.newChild("Decode chunk data (type %s)" % self.type)
+            func = self.chunk_splitter[self.type]
+            new_stream = LimitedFileStream( self.stream.filename, self.stream.tell(), self.size )
+            self.data = func(new_stream, self)            
+            self.stream.seek(self.stream.tell() + self.size)
+            self.closeChild("Chunk data")
+        else:
+            self.read("data", "![size]s", "Chunk data")
+        self.read("crc32", "!L", "Chunk CRC32")
+
+    def __str__(self):
+        return "PngChunk <size=%u, type=%s>" % (self.size, self.type)
+
+registerPlugin("^.*\.(PNG|png)$", "PNG picture", PngFilter, displayPng)

Added: haypo/hachoir/plugins/zip.py
===================================================================
--- haypo/hachoir/plugins/zip.py	2005-10-03 12:45:32 UTC (rev 221)
+++ haypo/hachoir/plugins/zip.py	2005-10-27 22:30:32 UTC (rev 222)
@@ -0,0 +1,126 @@
+"""
+Zip splitter.
+
+Status: can read most important headers
+Author: Victor Stinner
+"""
+
+from filter import Filter
+from plugin import registerPlugin
+import sys
+
+def splitZip(stream):
+    return ZipFilter(stream)
+
+def displayZip(zip):    
+    print "[ Zip archive ]"
+    for file in zip.files:
+        sys.stdout.write ("* File %s (size=%0.1f KB" %
+            (file.filename, file.uncompressed_size / 1024))
+        if file.uncompressed_size != 0:
+            sys.stdout.write (" - %0.1f%%" % \
+                (100 - file.compressed_size * 100 / file.uncompressed_size))
+        sys.stdout.write (")\n")
+    print "[ End of the zip archive ]"
+
+class ZipCentralDirectory(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("version_made_by", "<H", "Version made by")
+        self.read("version_needed", "<H", "Version neede")
+        self.read("flags", "<H", "General purpose flag")
+        self.read("compression_method", "<H", "Compression method")
+        self.read("last_mod_file_time", "<H", "Last moditication file time")
+        self.read("last_mod_file_date", "<H", "Last moditication file date")
+        self.read("crc32", "<L", "CRC-32")
+        self.read("compressed_size", "<L", "Compressed size")
+        self.read("uncompressed_size", "<L", "Uncompressed size")
+        self.read("filename_length", "<H", "Filename length")
+        self.read("extra_length", "<H", "Extra fields length")
+        self.read("file_comment_length", "<H", "File comment length")
+        self.read("disk_number_start", "<H", "Disk number start")
+        self.read("internal_attr", "<H", "Internal file attributes")
+        self.read("external_attr", "<L", "External file attributes")
+        self.read("offset_header", "<L", "Relative offset of local header")
+        self.read("filename", "<[filename_length]s", "Filename")
+        self.read("extra", "<[extra_length]s", "Extra fields")
+        self.read("file_comment", "<[file_comment_length]s", "File comment")
+
+class ZipEndCentralDirectory(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("number_disk", "<H", "Number of this disk")
+        self.read("number_disk2", "<H", "Number of this disk2")
+        self.read("total_number_disk", "<H", "Total number of entries")
+        self.read("total_number_disk2", "<H", "Total number of entries2")
+        self.read("size", "<L", "Size of the central directory")
+        self.read("offset", "<L", "Offset of start of central directory")
+        self.read("comment_length", "<H", "ZIP comment length")
+        self.read("comment", "<[comment_length]s", "ZIP comment")
+
+#class ZipZip64(Filter):
+#    def __init__(self, stream, parent):
+#        Filter.__init__(self, stream, parent)
+#        self.read("size", "<Q", "Directory size")
+#        self.read("version_made_by", "<H", "Version made by")
+#        self.read("version_needed", "<H", "Version neede")
+#        self.read("disk_index", "<L", "Disk index")
+#        self.read("disk_index2", "<L", "Disk index2")
+#        self.read("disk_number", "<Q", "Disk number")
+#        self.read("disk_number2", "<Q", "Disk number2")
+#        self.read("size2", "<Q", "Directory size2")
+#        self.read("offset", "<Q", "Offset")
+        
+class ZipFile(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("version", "<H", "Version")
+        self.read("flags", "<H", "Flags")
+        self.read("compression_method", "<H", "Compression method")
+        self.read("last_mod_time", "<H", "Last modification time")
+        self.read("last_mod_date", "<H", "Last modification date")
+        self.read("crc32", "<L", "Checksum (CRC32)")
+        self.read("compressed_size", "<L", "Compressed size (bytes)")
+        self.read("uncompressed_size", "<L", "Uncompressed size (bytes)")
+        self.read("filename_length", "<H", "Filename length")
+        self.read("extra_length", "<H", "Extra length")
+        self.read("filename", "<[filename_length]s", "Filename")
+        self.read("extra", "<[extra_length]s", "Extra")
+        self.read("compressed_data", "<[compressed_size]s", "Compressed data")
+        if (self.flags & 4) == 4:
+            self.read("file_crc32", "<L", "Checksum (CRC32)")
+            self.read("file_compressed_size", "<L", "Compressed size (bytes)")
+            self.read("file_uncompressed_size", "<L", "Uncompressed size (bytes)")
+        
+class ZipFilter(Filter):
+    def __init__(self, stream):
+        Filter.__init__(self, stream)
+        # File data
+        self.signature = None
+        self.central_directory = []
+        self.end_central_directory = None
+        self.files = []
+        while not stream.eof():
+            self.read("header", "<L", "Header")
+            if self.header == 0x04034B50:
+                self.newChild("File entry")
+                self.openChild()
+                self.files.append( ZipFile(stream, self) )
+                self.closeChild("File entry")
+            elif self.header == 0x02014b50:
+                self.newChild("Central directory")
+                self.openChild()
+                self.central_directory.append( ZipCentralDirectory(stream,self) )
+                self.closeChild("Central directory")
+            elif self.header == 0x06054b50:
+                self.newChild("End of central directory")
+                self.openChild()
+                self.end_central_directory = ZipEndCentralDirectory(stream,self)
+                self.closeChild("End of central directory")
+            elif self.header == 0x05054b50:
+                self.read("signature_length", "!H", "Signature length")
+                self.read("signature", "![signature_length]s", "Signature")
+            else:
+                raise Exception("Error, unknow ZIP header (0x%08X)." % self.header)
+        
+registerPlugin("^.*\.(zip|ZIP)$", "ZIP (compressed archive)", splitZip, displayZip)

Added: haypo/hachoir/stream.py
===================================================================
--- haypo/hachoir/stream.py	2005-10-03 12:45:32 UTC (rev 221)
+++ haypo/hachoir/stream.py	2005-10-27 22:30:32 UTC (rev 222)
@@ -0,0 +1,173 @@
+import struct
+from StringIO import StringIO
+
+class Stream:
+    def __init__(self):
+        pass
+
+    def get16(self):
+        return None
+
+    def eof(self):
+        return self.getLastPos() <= self.tell() 
+
+    def tell(self):
+        return 0
+
+    def searchLength(self, str, include_str, size_max=None):        
+        pos = self.search(str, size_max)
+        if pos == -1: return -1
+        lg = pos - self.tell()
+        if include_str: lg = lg + len(str)
+        return lg
+    
+    def search(self, str, size_max=None):
+        return -1
+
+def StringStream(data, endian="!"):
+    file = StringIO(data)
+    return FileStream(file, endian)
+
+class LimitedFileStream(Stream):
+    def __init__(self, filename, start=0, size=0, endian="<"):
+        self.__stream = FileStream(filename)
+        if start<0: start = 0
+        if self.__stream.getSize() < start+size: size = self.__stream.getSize()-start
+        self.__start = start
+        self.__size = size
+        self.__end = self.__start + self.__size
+        self.__stream.seek(self.__start)
+
+    def search(self, str, size_max=None):
+        if self.__end == 0: return -1
+        if size_max == None or self.__end-self.tell() < size_max:
+            size_max = self.__end-self.tell()
+        assert 0<=size_max  and size_max<=self.__size
+        return self.__stream.search(str, size_max)
+
+    def getN(self, size):
+        if self.__start+self.__size<self.__stream.tell()+size:
+            raise Exception("Can't read outsize the stream.")
+        return self.__stream.getN(size)
+
+    def tell(self):
+        return self.__stream.tell()
+
+    def seek(self, pos, where=0):
+        return self.__stream.seek(pos, where)
+        
+    def getSize(self):
+        return self.__size
+    
+    def getLastPos(self):
+        return self.__end
+    
+class FileStream(Stream):
+    def __init__(self, filename, endian="<"):
+        """
+        Endian: See setEndian function. 
+        """
+
+        Stream.__init__(self)
+        self.__file = open(filename, 'r')
+        self.filename = filename
+        self.__file.seek(0,2) # Seek to end
+        self.__size = self.__file.tell()
+        self.__file.seek(0,0) # Seel to beginning
+        self.setEndian(endian)
+
+    def seek(self, pos, where=0):
+        """ Read file seek document to understand where. """
+        return self.__file.seek(pos, where)
+
+    def tell(self):
+        return self.__file.tell()
+
+    def __doSearch(self, binary_string, pos_max):
+        """
+        pos_max: Position of last tested byte
+        """
+        # TODO: Use max ...
+        if 2048<=len(binary_string):
+            raise Exception("Search string too big.")
+        size = 2048 
+        doublesize = size * 2
+        oldpos = self.tell()
+        if pos_max-oldpos+1<doublesize:
+            doublesize = pos_max-oldpos
+            size = 0 
+        buffer = self.__file.read(doublesize)
+        newpos = oldpos + size
+        while len(buffer) != 0:
+            pos = buffer.find(binary_string)
+            if pos != -1: return oldpos + pos
+            oldpos = newpos
+            if pos_max < oldpos + size:
+                size = pos_max - oldpos
+            if size == 0:
+                break
+            buffer = buffer[size:] + self.__file.read(size)
+            newpos = oldpos + size 
+        return -1 
+  
+    def search(self, binary_string, size_max=None):
+        if self.__size == 0: return -1
+        if size_max != None:
+            pos_max = self.tell()+size_max
+            if self.__size <= pos_max:
+                pos_max = sel.__size-1
+        else:
+            pos_max = self.__size-1
+        assert 0<=pos_max  and pos_max<self.__size
+        oldpos = self.tell()
+        pos = self.__doSearch(binary_string, pos_max)
+        self.seek(oldpos)
+        return pos
+
+    def setEndian(self, endian):
+        """
+        Endian: "<" for little endian, ">" for big endian, "!" for network endian.
+        """
+
+        self.__endian = endian
+        self.__unpack8u = "B"
+        self.__unpack16u = "%sH" % self.__endian
+        self.__unpack32u = "%sI" % self.__endian
+
+    def get8(self):
+        data = self.__file.read(1)
+        data = struct.unpack(self.__unpack8u, data)
+        return data[0]
+
+    def get16(self):
+        data = self.__file.read(2)
+        data = struct.unpack(self.__unpack16u, data)
+        return data[0]
+
+    def get32(self):
+        data = self.__file.read(4)
+        data = struct.unpack(self.__unpack32u, data)
+        return data[0]
+
+    def getN(self, size):
+        data = self.__file.read(size)
+        # Do endian things
+        return data
+
+    def getEnd(self):
+        """
+        Read everything until the end.
+        """
+        
+        data = self.__file.read()
+        # Do endian things
+        return data
+
+    def destroy(self):
+        self.__file.close()
+
+    def getSize(self):
+        return self.__size
+
+    def getLastPos(self):
+        return self.__size-1

Copied: haypo/lamer (from rev 205, lamer)



From haypo at berlios.de  Sat Oct 29 02:43:08 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Sat, 29 Oct 2005 02:43:08 +0200
Subject: [Happyboom-svn] r224 - haypo/hachoir/plugins
Message-ID: <200510290043.j9T0h88n023902@sheep.berlios.de>

Author: haypo
Date: 2005-10-29 02:43:03 +0200 (Sat, 29 Oct 2005)
New Revision: 224

Modified:
   haypo/hachoir/plugins/png.py
Log:
Fix getEnd() => getLastPos()


Modified: haypo/hachoir/plugins/png.py
===================================================================
--- haypo/hachoir/plugins/png.py	2005-10-27 22:32:04 UTC (rev 223)
+++ haypo/hachoir/plugins/png.py	2005-10-29 00:43:03 UTC (rev 224)
@@ -66,7 +66,7 @@
             raise Exception("Fails to find end of text")
         self.read("keyword", "!%us" % (pos-old), "Keyword")
         self.read("separator", "!B", "Null byte used to separe strings")
-        lg = self.stream.getEnd()-self.stream.tell()
+        lg = self.stream.getLastPos()-self.stream.tell()
         self.read("text", "!%us" % lg, "Text")
 
     def __str__(self):



From haypo at berlios.de  Sat Oct 29 04:51:45 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Sat, 29 Oct 2005 04:51:45 +0200
Subject: [Happyboom-svn] r225 - in haypo/hachoir: . plugins
Message-ID: <200510290251.j9T2pjLv016024@sheep.berlios.de>

Author: haypo
Date: 2005-10-29 04:51:43 +0200 (Sat, 29 Oct 2005)
New Revision: 225

Added:
   haypo/hachoir/hachoir.glade
Modified:
   haypo/hachoir/filter.py
   haypo/hachoir/hachoir.py
   haypo/hachoir/plugins/png.py
Log:
Use GTK+ interface (using Glade).


Modified: haypo/hachoir/filter.py
===================================================================
--- haypo/hachoir/filter.py	2005-10-29 00:43:03 UTC (rev 224)
+++ haypo/hachoir/filter.py	2005-10-29 02:51:43 UTC (rev 225)
@@ -7,6 +7,7 @@
 import sys
 import types
 import string
+import hmi
 
 class Filter:
     def __init__(self, stream, parent=None):
@@ -15,25 +16,43 @@
         self.parent = parent
         if self.parent:
             self.depth = parent.depth + 1
+            self.table_parent = parent.table_item
         else:
             self.depth = 1
+            self.table_item = None
+            self.table_parent = None 
         self.indent = " " * ((self.depth-1)*2)
         self.child_indent = " " * (self.depth*2)
+        self.table_item = None
 
     def __replaceFieldFormat(self, match):
         return str(getattr(self, match.group(1)))
 
     def openChild(self):
         self.__child_stream_pos = self.stream.tell()
+        self.__last_child_stream_pos = None 
 
     def closeChild(self, text):
+        self.__updateChild(self.__child_stream_pos, self.table_item)
+        self.__updateChild(self.__last_child_stream_pos, self.table_parent)
         if display_filter_actions != self.depth: return
         size = self.stream.tell() - self.__child_stream_pos
         sys.stdout.write("%s<%s (%u bytes)>\n" % (self.indent, text, size))
+        self.table_item = None
+        self.__last_child_stream_pos = None
 
+    def __updateChild(self, pos, table):
+        if pos == None or table == None: return
+        size = self.stream.tell() - pos
+        hmi.hmi.set_table_value(table, 1, size) 
+
     def newChild(self, text):
+        file_pos = self.stream.tell()
+        self.__updateChild(self.__last_child_stream_pos, self.table_item)
+        self.table_item = hmi.hmi.add_table_child(self.table_parent, file_pos, 0, None, text)
         if display_filter_actions < self.depth+1: return
         sys.stdout.write("%s[ %s ]\n" % (self.child_indent, text))
+        self.__last_child_stream_pos = file_pos 
 
     def __isStrPrintable(self, str):
         """
@@ -66,7 +85,7 @@
     def read(self, id, format, description, can_truncate=True):
         format = re.sub(r'\[([^]]+)\]', self.__replaceFieldFormat, format)
         size = struct.calcsize(format)
-        max = 80 
+        max = 60 
         if size<max or format[-1] != "s" or not can_truncate:
             rawdata = self.stream.getN(size)
             assert len(rawdata) == size
@@ -79,20 +98,23 @@
             self.stream.seek( self.stream.tell() + size - max )
         # Display content ?
         if self.depth <= display_filter_actions and 0<size:
-            # Write indentation
-            sys.stdout.write(self.indent)
+            file_pos = self.stream.tell() - size
 
-            # Write first 4 bytes in hexadecimal
+            # Convert data into hexadecimal
             i = 0
+            hex_data = ""
             for byte in rawdata:
                 # If there are more than 4 bytes, write "..."
                 if 4 <= i:
-                    sys.stdout.write(".. ")
+                    hex_data = hex_data + ".. "
                     i = i + 1
                     break
-                sys.stdout.write("%02X " % ord(byte))
+                hex_data = hex_data + "%02X " % ord(byte)
                 i = i + 1
 
+            # Write "<addr>: <indent><hex data>"
+            sys.stdout.write("%08X: %s%s" % (file_pos, self.indent, hex_data))
+
             # Align text to 4 bytes
             sys.stdout.write("   " * (5-i))
 
@@ -100,17 +122,31 @@
             sys.stdout.write("%s (%u bytes)" % (description, size))
 
             # Write content like id=value?
+            comment = ""
             if id != None:
                 t = type(data)
                 if t==types.IntType or t==types.LongType:
                     # Display integers
-                    sys.stdout.write(", %s = %u" % (id, data))
+                    comment = "%s = %u" % (id, data)
                 elif type(data)==types.StringType and len(data)<max:
                     # Display string (replace ASCII < 32 by \xCC)
-                    display = re.sub("([\x00-\x1F])", lambda m: "\\x%02X" % ord(m.group(1)), data)
-                    if self.__isStrPrintable(display):
-                        sys.stdout.write(", %s=\"%s\"" % (id, display))
+                    display = ""
+                    for c in data:
+                        if ord(c)<32:
+                            know = {"\n": "\\n", "\r": "\\r"}
+                            if c in know:
+                                display = display + know[c]
+                            else:
+                                display = display + "\\x%02X" % ord(c)
+                        elif c in string.printable:
+                            display = display + c
+                        else:
+                            display = display + "."
+                    comment = "%s=\"%s\"" % (id, display)
+            if comment != "":
+                sys.stdout.write(comment)
             sys.stdout.write("\n")
+            hmi.hmi.add_table(self.table_parent, file_pos, size, hex_data, id, description, comment)
 
         # Save result in the object
         if id != None:

Added: haypo/hachoir/hachoir.glade
===================================================================
--- haypo/hachoir/hachoir.glade	2005-10-29 00:43:03 UTC (rev 224)
+++ haypo/hachoir/hachoir.glade	2005-10-29 02:51:43 UTC (rev 225)
@@ -0,0 +1,47 @@
+<?xml version="1.0" standalone="no"?> <!--*- mode: xml -*-->
+<!DOCTYPE glade-interface SYSTEM "http://glade.gnome.org/glade-2.0.dtd">
+
+<glade-interface>
+
+<widget class="GtkWindow" id="window">
+  <property name="visible">True</property>
+  <property name="title" translatable="yes">Hachoir</property>
+  <property name="type">GTK_WINDOW_TOPLEVEL</property>
+  <property name="window_position">GTK_WIN_POS_NONE</property>
+  <property name="modal">False</property>
+  <property name="resizable">True</property>
+  <property name="destroy_with_parent">False</property>
+  <property name="decorated">True</property>
+  <property name="skip_taskbar_hint">False</property>
+  <property name="skip_pager_hint">False</property>
+  <property name="type_hint">GDK_WINDOW_TYPE_HINT_NORMAL</property>
+  <property name="gravity">GDK_GRAVITY_NORTH_WEST</property>
+  <property name="focus_on_map">True</property>
+
+  <child>
+    <widget class="GtkScrolledWindow" id="scrolledwindow1">
+      <property name="visible">True</property>
+      <property name="can_focus">True</property>
+      <property name="hscrollbar_policy">GTK_POLICY_ALWAYS</property>
+      <property name="vscrollbar_policy">GTK_POLICY_ALWAYS</property>
+      <property name="shadow_type">GTK_SHADOW_IN</property>
+      <property name="window_placement">GTK_CORNER_TOP_LEFT</property>
+
+      <child>
+	<widget class="GtkTreeView" id="table">
+	  <property name="visible">True</property>
+	  <property name="can_focus">True</property>
+	  <property name="headers_visible">True</property>
+	  <property name="rules_hint">False</property>
+	  <property name="reorderable">False</property>
+	  <property name="enable_search">True</property>
+	  <property name="fixed_height_mode">False</property>
+	  <property name="hover_selection">False</property>
+	  <property name="hover_expand">False</property>
+	</widget>
+      </child>
+    </widget>
+  </child>
+</widget>
+
+</glade-interface>

Modified: haypo/hachoir/hachoir.py
===================================================================
--- haypo/hachoir/hachoir.py	2005-10-29 00:43:03 UTC (rev 224)
+++ haypo/hachoir/hachoir.py	2005-10-29 02:51:43 UTC (rev 225)
@@ -12,7 +12,6 @@
 
 import sys, os, re, traceback
 from stream import FileStream
-import filter
 from plugin import getPlugin
 
 def usage(defval):
@@ -65,6 +64,7 @@
         self.depth = 5
 
     def run(self, filename):
+        import filter
         # Look for a plugin
         plugin = getPlugin(filename)
         if plugin != None:
@@ -120,7 +120,18 @@
         hachoir = Hachoir()
         for key in opt:
             setattr(hachoir, key, opt[key])
+
+        try:
+            import hmi
+        except ImportError, err:
+            print """Error: a Python module is missing:\n%s\n
+You can find PyGTK at: http://www.pygtk.org/
+and PyGlade at: http://glade.gnome.org/""" % (err)
+            sys.exit(1)
+        hmi.loadInterface()
         hachoir.run(filename)
+        hmi.hmi.run()
+
     except SystemExit:
         pass
     except Exception, err:

Modified: haypo/hachoir/plugins/png.py
===================================================================
--- haypo/hachoir/plugins/png.py	2005-10-29 00:43:03 UTC (rev 224)
+++ haypo/hachoir/plugins/png.py	2005-10-29 02:51:43 UTC (rev 225)
@@ -120,12 +120,12 @@
         }
         if self.type in self.chunk_splitter:
             self.openChild()
-            self.newChild("Decode chunk data (type %s)" % self.type)
+            self.newChild("Chunk data (type %s)" % self.type)
             func = self.chunk_splitter[self.type]
             new_stream = LimitedFileStream( self.stream.filename, self.stream.tell(), self.size )
             self.data = func(new_stream, self)            
             self.stream.seek(self.stream.tell() + self.size)
-            self.closeChild("Chunk data")
+            self.closeChild("Chunk data (type %s)" % self.type)
         else:
             self.read("data", "![size]s", "Chunk data")
         self.read("crc32", "!L", "Chunk CRC32")



From haypo at berlios.de  Sat Oct 29 04:59:54 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Sat, 29 Oct 2005 04:59:54 +0200
Subject: [Happyboom-svn] r226 - haypo/hachoir
Message-ID: <200510290259.j9T2xsiW017811@sheep.berlios.de>

Author: haypo
Date: 2005-10-29 04:59:34 +0200 (Sat, 29 Oct 2005)
New Revision: 226

Modified:
   haypo/hachoir/filter.py
   haypo/hachoir/hachoir.glade
Log:
Fix HMI (quit when close window) and fix filter (missing assign to None).


Modified: haypo/hachoir/filter.py
===================================================================
--- haypo/hachoir/filter.py	2005-10-29 02:51:43 UTC (rev 225)
+++ haypo/hachoir/filter.py	2005-10-29 02:59:34 UTC (rev 226)
@@ -24,6 +24,7 @@
         self.indent = " " * ((self.depth-1)*2)
         self.child_indent = " " * (self.depth*2)
         self.table_item = None
+        self.__last_child_stream_pos = None 
 
     def __replaceFieldFormat(self, match):
         return str(getattr(self, match.group(1)))

Modified: haypo/hachoir/hachoir.glade
===================================================================
--- haypo/hachoir/hachoir.glade	2005-10-29 02:51:43 UTC (rev 225)
+++ haypo/hachoir/hachoir.glade	2005-10-29 02:59:34 UTC (rev 226)
@@ -17,6 +17,7 @@
   <property name="type_hint">GDK_WINDOW_TYPE_HINT_NORMAL</property>
   <property name="gravity">GDK_GRAVITY_NORTH_WEST</property>
   <property name="focus_on_map">True</property>
+  <signal name="destroy" handler="on_window_destroy" last_modification_time="Sat, 29 Oct 2005 02:58:52 GMT"/>
 
   <child>
     <widget class="GtkScrolledWindow" id="scrolledwindow1">



From haypo at berlios.de  Sat Oct 29 05:12:09 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Sat, 29 Oct 2005 05:12:09 +0200
Subject: [Happyboom-svn] r227 - in haypo/hachoir: . plugins
Message-ID: <200510290312.j9T3C9Gv019694@sheep.berlios.de>

Author: haypo
Date: 2005-10-29 05:12:01 +0200 (Sat, 29 Oct 2005)
New Revision: 227

Modified:
   haypo/hachoir/filter.py
   haypo/hachoir/plugins/gif.py
   haypo/hachoir/plugins/png.py
Log:
Fix child size in filter, can update child name, fix gif endian.


Modified: haypo/hachoir/filter.py
===================================================================
--- haypo/hachoir/filter.py	2005-10-29 02:59:34 UTC (rev 226)
+++ haypo/hachoir/filter.py	2005-10-29 03:12:01 UTC (rev 227)
@@ -34,8 +34,8 @@
         self.__last_child_stream_pos = None 
 
     def closeChild(self, text):
-        self.__updateChild(self.__child_stream_pos, self.table_item)
-        self.__updateChild(self.__last_child_stream_pos, self.table_parent)
+        self.__updateChild(self.__last_child_stream_pos, self.table_item)
+        self.__updateChild(self.__child_stream_pos, self.table_parent)
         if display_filter_actions != self.depth: return
         size = self.stream.tell() - self.__child_stream_pos
         sys.stdout.write("%s<%s (%u bytes)>\n" % (self.indent, text, size))
@@ -47,13 +47,16 @@
         size = self.stream.tell() - pos
         hmi.hmi.set_table_value(table, 1, size) 
 
+    def updateChildTitle(self, text):
+        hmi.hmi.set_table_value(self.table_item, 4, text) 
+
     def newChild(self, text):
         file_pos = self.stream.tell()
         self.__updateChild(self.__last_child_stream_pos, self.table_item)
         self.table_item = hmi.hmi.add_table_child(self.table_parent, file_pos, 0, None, text)
+        self.__last_child_stream_pos = file_pos 
         if display_filter_actions < self.depth+1: return
         sys.stdout.write("%s[ %s ]\n" % (self.child_indent, text))
-        self.__last_child_stream_pos = file_pos 
 
     def __isStrPrintable(self, str):
         """

Modified: haypo/hachoir/plugins/gif.py
===================================================================
--- haypo/hachoir/plugins/gif.py	2005-10-29 02:59:34 UTC (rev 226)
+++ haypo/hachoir/plugins/gif.py	2005-10-29 03:12:01 UTC (rev 227)
@@ -18,20 +18,20 @@
 class GifColor(Filter):
     def __init__(self, stream, parent):
         Filter.__init__(self, stream, parent)
-        self.read("red", "!B", "Red")
-        self.read("green", "!B", "Green")
-        self.read("blue", "!B", "Blue")
+        self.read("red", "<B", "Red")
+        self.read("green", "<B", "Green")
+        self.read("blue", "<B", "Blue")
 
 class GifImage(Filter):
     def __init__(self, stream, parent):
         Filter.__init__(self, stream, parent)
-        self.read("left", "!H", "Left")
-        self.read("top", "!H", "Top")
-        self.read("width", "!H", "Width")
-        self.read("height", "!H", "Height")
+        self.read("left", "<H", "Left")
+        self.read("top", "<H", "Top")
+        self.read("width", "<H", "Width")
+        self.read("height", "<H", "Height")
 
         # TODO: Fix this ...
-        self.read("flags", "!H", "Flags")
+        self.read("flags", "<H", "Flags")
         self.global_map = ((self.flags & 0x80) == 0x80)
         self.interlaced = ((self.flags & 0x40) == 0x40)
         self.bits_per_pixel = 1 + (self.flags & 0x07)
@@ -63,13 +63,13 @@
 class GifExtensionChunk(Filter):
     def __init__(self, stream, parent):
         Filter.__init__(self, stream, parent)
-        self.read("size", "!B", "Size (in bytes)")
-        self.read("content", "![size]s", "Content")
+        self.read("size", "<B", "Size (in bytes)")
+        self.read("content", "<[size]s", "Content")
 
 class GifExtension(Filter):
     def __init__(self, stream, parent):
         Filter.__init__(self, stream, parent)
-        self.read("func", "!B", "Function")
+        self.read("func", "<B", "Function")
         self.chunks = []
         self.openChild()
         while True:
@@ -82,11 +82,11 @@
 class GifScreenDescriptor(Filter):
     def __init__(self, stream, parent):
         Filter.__init__(self, stream, parent)
-        self.read("width", "!H", "Width")
-        self.read("height", "!H", "Height")
+        self.read("width", "<H", "Width")
+        self.read("height", "<H", "Height")
 
         # TODO: Fix this
-        self.read("flags", "!B", "Flags")
+        self.read("flags", "<B", "Flags")
         self.global_map = ((self.flags & 0x80) == 0x80) # ok
         self.color_res = 1 + ((self.flags >> 4) & 0x7) # ??
         self.bits_per_pixel = 1 + (self.flags & 0x7) # ok

Modified: haypo/hachoir/plugins/png.py
===================================================================
--- haypo/hachoir/plugins/png.py	2005-10-29 02:59:34 UTC (rev 226)
+++ haypo/hachoir/plugins/png.py	2005-10-29 03:12:01 UTC (rev 227)
@@ -50,7 +50,7 @@
 class PngGamma(Filter):
     def __init__(self, stream, parent):
         Filter.__init__(self, stream, parent)
-        self.read("gamma", "!L", "Gamma (divided by 10,000)")
+        self.read("gamma", "!L", "Gamma (x10,000)")
         self.gamma = float(self.gamma)
         self.gamma = self.gamma / 10000
 
@@ -103,7 +103,7 @@
             self.newChild("New chunk")
             chunk = PngChunk(stream, parent=self)
             self.chunks.append( chunk )
-
+            self.updateChildTitle("Chunk (type %s)" % chunk.type)
         self.closeChild("Chunks")
         
 class PngChunk(Filter):



From haypo at berlios.de  Sat Oct 29 05:17:12 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Sat, 29 Oct 2005 05:17:12 +0200
Subject: [Happyboom-svn] r228 - haypo/hachoir
Message-ID: <200510290317.j9T3HChA021826@sheep.berlios.de>

Author: haypo
Date: 2005-10-29 05:17:09 +0200 (Sat, 29 Oct 2005)
New Revision: 228

Modified:
   haypo/hachoir/filter.py
Log:
Last (?) fix to children size.


Modified: haypo/hachoir/filter.py
===================================================================
--- haypo/hachoir/filter.py	2005-10-29 03:12:01 UTC (rev 227)
+++ haypo/hachoir/filter.py	2005-10-29 03:17:09 UTC (rev 228)
@@ -34,8 +34,7 @@
         self.__last_child_stream_pos = None 
 
     def closeChild(self, text):
-        self.__updateChild(self.__last_child_stream_pos, self.table_item)
-        self.__updateChild(self.__child_stream_pos, self.table_parent)
+        self.__updateChild(self.__child_stream_pos, self.table_item)
         if display_filter_actions != self.depth: return
         size = self.stream.tell() - self.__child_stream_pos
         sys.stdout.write("%s<%s (%u bytes)>\n" % (self.indent, text, size))
@@ -43,9 +42,10 @@
         self.__last_child_stream_pos = None
 
     def __updateChild(self, pos, table):
-        if pos == None or table == None: return
+        if pos == None or table == None: return False
         size = self.stream.tell() - pos
         hmi.hmi.set_table_value(table, 1, size) 
+        return True
 
     def updateChildTitle(self, text):
         hmi.hmi.set_table_value(self.table_item, 4, text) 



From haypo at berlios.de  Sat Oct 29 05:31:53 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Sat, 29 Oct 2005 05:31:53 +0200
Subject: [Happyboom-svn] r229 - in haypo/hachoir: . plugins
Message-ID: <200510290331.j9T3VrbL025639@sheep.berlios.de>

Author: haypo
Date: 2005-10-29 05:31:49 +0200 (Sat, 29 Oct 2005)
New Revision: 229

Modified:
   haypo/hachoir/filter.py
   haypo/hachoir/plugins/exe.py
Log:
Fix again child size (re: last?) and improve exe output (put MS-Dos into child).


Modified: haypo/hachoir/filter.py
===================================================================
--- haypo/hachoir/filter.py	2005-10-29 03:17:09 UTC (rev 228)
+++ haypo/hachoir/filter.py	2005-10-29 03:31:49 UTC (rev 229)
@@ -34,12 +34,14 @@
         self.__last_child_stream_pos = None 
 
     def closeChild(self, text):
-        self.__updateChild(self.__child_stream_pos, self.table_item)
+        self.__updateChild(self.__last_child_stream_pos, self.table_item)
+        if self.table_parent != None:
+            self.__updateChild(self.__child_stream_pos, self.table_parent)
+        self.table_item = None
+        self.__last_child_stream_pos = None
         if display_filter_actions != self.depth: return
         size = self.stream.tell() - self.__child_stream_pos
         sys.stdout.write("%s<%s (%u bytes)>\n" % (self.indent, text, size))
-        self.table_item = None
-        self.__last_child_stream_pos = None
 
     def __updateChild(self, pos, table):
         if pos == None or table == None: return False

Modified: haypo/hachoir/plugins/exe.py
===================================================================
--- haypo/hachoir/plugins/exe.py	2005-10-29 03:17:09 UTC (rev 228)
+++ haypo/hachoir/plugins/exe.py	2005-10-29 03:31:49 UTC (rev 229)
@@ -26,11 +26,14 @@
     for item in res.items:
         displayPE_Resource(item)
 
-def displayExe(exe):
+def displayMS_Dos(exe):        
     print "[ MS-DOS HEADER ]"
     print "Init. SS:SP: %04X:%04X" % \
         (exe.init_ss_sp & 0xFFFF,
          exe.init_ss_sp >> 16 & 0xFFFF)
+
+def displayExe(exe):
+    displayMS_Dos(exe.ms_dos)
     if exe.pe:
 #        displayPE(exe.pe)
         for section in exe.pe_sections:
@@ -168,9 +171,9 @@
             0x01F0: "IBM Power PC, little endian"}
         return cpu_name.get(self.cpu_type, "unknow")
 
-class ExeFilter(Filter):
-    def __init__(self, stream):
-        Filter.__init__(self, stream)
+class MS_Dos(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
         self.read("header", "2s", "File header")
         assert self.header == "MZ"
         self.read("filesize_mod_512", ">H", "Filesize mod 512")
@@ -194,10 +197,19 @@
         self.read(None, "!10H", "Reserved")
         self.read("pe_offset", "<L", "Offset to PE header")
 
-        if self.reloc_offset == 0x40:
+class ExeFilter(Filter):
+    def __init__(self, stream):
+        Filter.__init__(self, stream)
+
+        self.openChild()
+        self.newChild("MS-Dos header")
+        self.ms_dos = MS_Dos(stream, self)
+        self.closeChild("MS-Dos header")
+
+        if self.ms_dos.reloc_offset == 0x40:
+            self.stream.seek(self.ms_dos.pe_offset)
             self.openChild()
             self.newChild("PE header")
-            self.stream.seek(self.pe_offset)
             self.pe = PE_Filter(stream, self)
             self.closeChild("PE header")
 



From haypo at berlios.de  Sat Oct 29 08:04:44 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Sat, 29 Oct 2005 08:04:44 +0200
Subject: [Happyboom-svn] r230 - in haypo/hachoir: . plugins
Message-ID: <200510290604.j9T64imn023785@sheep.berlios.de>

Author: haypo
Date: 2005-10-29 08:03:52 +0200 (Sat, 29 Oct 2005)
New Revision: 230

Added:
   haypo/hachoir/hmi.py
   haypo/hachoir/plugins/tar.py
Modified:
   haypo/hachoir/filter.py
   haypo/hachoir/stream.py
Log:
Add missing hmi.py :-( Add TAR file format. Fix FileStream seek function.


Modified: haypo/hachoir/filter.py
===================================================================
--- haypo/hachoir/filter.py	2005-10-29 03:31:49 UTC (rev 229)
+++ haypo/hachoir/filter.py	2005-10-29 06:03:52 UTC (rev 230)
@@ -52,6 +52,9 @@
     def updateChildTitle(self, text):
         hmi.hmi.set_table_value(self.table_item, 4, text) 
 
+    def updateChildComment(self, comment):
+        hmi.hmi.set_table_value(self.table_item, 5, comment) 
+
     def newChild(self, text):
         file_pos = self.stream.tell()
         self.__updateChild(self.__last_child_stream_pos, self.table_item)
@@ -139,7 +142,7 @@
                     display = ""
                     for c in data:
                         if ord(c)<32:
-                            know = {"\n": "\\n", "\r": "\\r"}
+                            know = {"\n": "\\n", "\r": "\\r", "\0": "\\0"}
                             if c in know:
                                 display = display + know[c]
                             else:
@@ -150,7 +153,7 @@
                             display = display + "."
                     comment = "%s=\"%s\"" % (id, display)
             if comment != "":
-                sys.stdout.write(comment)
+                sys.stdout.write(", %s" % comment)
             sys.stdout.write("\n")
             hmi.hmi.add_table(self.table_parent, file_pos, size, hex_data, id, description, comment)
 

Added: haypo/hachoir/hmi.py
===================================================================
--- haypo/hachoir/hmi.py	2005-10-29 03:31:49 UTC (rev 229)
+++ haypo/hachoir/hmi.py	2005-10-29 06:03:52 UTC (rev 230)
@@ -0,0 +1,69 @@
+import os
+import pygtk
+pygtk.require ('2.0')
+import gtk
+import gtk.glade
+
+def loadInterface():
+    global hmi
+    glade = os.path.join(os.path.dirname(__file__), 'hachoir.glade')
+    hmi = GladeInterface(glade)
+
+class GladeInterface:
+    def __init__(self, filename):
+        self.xml = gtk.glade.XML(filename)
+        self.xml.signal_autoconnect(self)
+        self.window = self.xml.get_widget('window')
+        self.table = self.xml.get_widget('table')
+        self.table_store = None
+        self.build_him()
+
+    def run(self):
+        try:
+            gtk.main()
+        except KeyboardInterrupt:
+            print "Interrupted (CTRL+C)."
+
+    def set_table_value(self, iter, column, value):
+        row = self.table_store[iter]
+        row[column] = value
+       
+    def add_table_child(self, parent, addr, size, id, description):
+        return self.table_store.append(parent, ("%08X" % addr, size, None, id, description, None,))
+       
+    def add_table(self, parent, addr, size, name, id, description, comment):
+        self.table_store.append(parent, ("%08X" % addr, size, name, id, description, comment,))
+       
+    def build_him(self):
+        self.window.set_size_request(600,400)
+        self.build_table()
+
+    def build_table(self):
+        self.table_store = gtk.TreeStore(str, str, str, str, str, str)
+        self.table.set_model(self.table_store)
+        self.treeview_add_column(self.table, "Address", 0)
+        self.treeview_add_column(self.table, "Size", 1)
+        self.treeview_add_column(self.table, "Data", 2)
+        self.treeview_add_column(self.table, "Name", 3)
+        self.treeview_add_column(self.table, "Description", 4)
+        self.treeview_add_column(self.table, "Comment", 5)
+        self.table.set_reorderable(True)
+        self.treeselection = self.table.get_selection()
+
+    def treeview_add_column(self, treeview, name, num):
+        col = gtk.TreeViewColumn(name)
+        treeview.append_column(col)
+        cell = gtk.CellRendererText()
+        col.pack_start(cell, True)
+        col.add_attribute(cell, 'text', num)
+        treeview.set_search_column(num)
+        col.set_sort_column_id(num)
+ 
+    def on_window_destroy(self, widget, data=None):
+        self.quit()
+
+    def quit(self):
+        print "Quit."
+        gtk.main_quit()
+
+hmi = None

Added: haypo/hachoir/plugins/tar.py
===================================================================
--- haypo/hachoir/plugins/tar.py	2005-10-29 03:31:49 UTC (rev 229)
+++ haypo/hachoir/plugins/tar.py	2005-10-29 06:03:52 UTC (rev 230)
@@ -0,0 +1,124 @@
+"""
+Ncftp bookmarks filter.
+
+Status: Alpha 
+Author: Victor Stinner
+"""
+
+from datetime import datetime
+from filter import Filter
+from plugin import registerPlugin
+
+def displayModeItem(mode):
+    if mode & 4 == 4: r="r"
+    else: r="-"
+    if mode & 2 == 2: w="w"
+    else: w="-"
+    if mode & 1 == 1: x="x"
+    else: x="-"
+    return "%c%c%c" % (r, w, x)
+
+def displayMode(mode):
+    owner = displayModeItem(mode >> 6 & 7)
+    group = displayModeItem(mode >> 3 & 7)
+    other = displayModeItem(mode & 7)
+    print "Mode = %04o (%s%s%s)" % (mode, owner, group, other)
+    
+def displayFile(tar):
+    print "name = \"%s\"" % (tar.name)
+    displayMode(tar.mode)
+    print "User = \"%s\" (id %s)" % (tar.uname, tar.uid)
+    print "Group = \"%s\" (id %s)" % (tar.gname, tar.gid)
+    print "Size = %s bytes" % (tar.size)
+    print "Modification time = %s" % (tar.mtime)
+    print "Magic = %s" % (tar.magic)
+    print "Type = %s" % (tar.getType())
+    
+def displayTar(tar):
+    for file in tar.files:
+        print "[ File %s ]" % file.name
+        displayFile(file)
+
+class TarFile(Filter):
+    def __init__(self, stream, parent):
+        Filter.__init__(self, stream, parent)
+        self.read("name", "!100s", "Name", False)
+        self.name = self.name.strip("\0")
+        self.read("mode", "!8s", "Mode")
+        self.mode = self.octal2int(self.mode)
+        self.read("uid", "!8s", "User ID")
+        self.uid = self.octal2int(self.uid)
+        self.read("gid", "!8s", "Group ID")
+        self.gid = self.octal2int(self.gid)
+        self.read("size", "!12s", "Size")
+        self.size = self.octal2int(self.size)
+        self.read("mtime", "!12s", "Modification time")
+        self.mtime = self.octal2int(self.mtime) 
+        self.mtime = datetime.fromtimestamp(self.mtime)
+        self.read("check_sum", "!8s", "Check sum")
+        self.read("type", "!c", "Type")
+        self.read("lname", "!100s", "Link name", False)
+        self.read("magic", "!8s", "Magic")
+        self.magic = self.magic.strip(" \0")
+        self.read("uname", "!32s", "User name")
+        self.uname = self.uname.strip("\0")
+        self.read("gname", "!32s", "Group name")
+        self.gname = self.gname.strip("\0")
+        self.read("devmajor", "!8s", "Dev major")
+        self.read("devminor", "!8s", "Dev minor")
+        #self.read(None, "!167s", "Padding (zero)")
+        self.read(None, "!167s", "Padding (zero)")
+        if self.type in ("\0", "0"):
+            self.read("filedata", "![size]s", "File data")
+        if stream.tell() % 512 != 0:
+            padding = 512 - stream.tell() % 512
+            self.read(None, "!%ss" % padding, "Padding (512 align)")
+
+    def isEmpty(self):
+        return self.name == ""
+
+    def octal2int(self, str):
+        str = str.strip("\0")
+        try:
+            return int(str.strip("\0"),8)
+        except:
+            return 0
+
+    def getType(self):
+        name = { \
+            "\0": "Normal disk file (old format), Unix compatible",
+            "0": "Normal disk file",
+            "1": "Link to previously dumped file",
+            "2": "Symbolic link",
+            "3": "Character special file",
+            "4": "Block special file",
+            "5": "Directory",
+            "6": "FIFO special file",
+            "7": "Contiguous file"
+        }
+        if self.type not in name: return "Unknow type (%02X)" % ord(self.type)
+        return name[self.type]
+
+class TarFilter(Filter):
+    def __init__(self, stream):
+        Filter.__init__(self, stream)
+
+        self.files = []
+        self.openChild()
+        while not self.stream.eof():
+            self.newChild("File")
+            file = TarFile(stream, self) 
+            if file.isEmpty():
+                self.updateChildTitle("Terminator (empty header)")
+                break 
+            self.files.append(file)
+            self.updateChildTitle("File (%s)" % file.getType())
+            self.updateChildComment("Filename = %s" % file.name)
+        self.closeChild("Files")
+        
+        padding = 4096 - self.stream.tell() % 4096
+        self.read(None, "!%ss" % padding, "Padding (4096 align)")
+
+        assert self.stream.eof()
+        
+registerPlugin("^.*\.tar$", "Tar archive", TarFilter, displayTar)

Modified: haypo/hachoir/stream.py
===================================================================
--- haypo/hachoir/stream.py	2005-10-29 03:31:49 UTC (rev 229)
+++ haypo/hachoir/stream.py	2005-10-29 06:03:52 UTC (rev 230)
@@ -54,7 +54,7 @@
         return self.__stream.tell()
 
     def seek(self, pos, where=0):
-        return self.__stream.seek(pos, where)
+        self.__stream.seek(pos, where)
         
     def getSize(self):
         return self.__size
@@ -78,7 +78,8 @@
 
     def seek(self, pos, where=0):
         """ Read file seek document to understand where. """
-        return self.__file.seek(pos, where)
+        self.__file.seek(pos, where)
+        assert self.tell() <= self.__size
 
     def tell(self):
         return self.__file.tell()



From haypo at berlios.de  Sat Oct 29 08:46:14 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Sat, 29 Oct 2005 08:46:14 +0200
Subject: [Happyboom-svn] r231 - in haypo/hachoir: . plugins
Message-ID: <200510290646.j9T6kE9f010653@sheep.berlios.de>

Author: haypo
Date: 2005-10-29 08:45:35 +0200 (Sat, 29 Oct 2005)
New Revision: 231

Modified:
   haypo/hachoir/hmi.py
   haypo/hachoir/plugins/png.py
Log:
PNG don't use LimitedFileStream and interface use int type for column size


Modified: haypo/hachoir/hmi.py
===================================================================
--- haypo/hachoir/hmi.py	2005-10-29 06:03:52 UTC (rev 230)
+++ haypo/hachoir/hmi.py	2005-10-29 06:45:35 UTC (rev 231)
@@ -39,7 +39,7 @@
         self.build_table()
 
     def build_table(self):
-        self.table_store = gtk.TreeStore(str, str, str, str, str, str)
+        self.table_store = gtk.TreeStore(str, int, str, str, str, str)
         self.table.set_model(self.table_store)
         self.treeview_add_column(self.table, "Address", 0)
         self.treeview_add_column(self.table, "Size", 1)

Modified: haypo/hachoir/plugins/png.py
===================================================================
--- haypo/hachoir/plugins/png.py	2005-10-29 06:03:52 UTC (rev 230)
+++ haypo/hachoir/plugins/png.py	2005-10-29 06:45:35 UTC (rev 231)
@@ -64,9 +64,10 @@
         pos = self.stream.search("\0", 14)
         if pos == -1:
             raise Exception("Fails to find end of text")
-        self.read("keyword", "!%us" % (pos-old), "Keyword")
+        lg = (pos-old)
+        self.read("keyword", "!%us" % lg, "Keyword")
         self.read("separator", "!B", "Null byte used to separe strings")
-        lg = self.stream.getLastPos()-self.stream.tell()
+        lg = (self.parent.size-lg-1)
         self.read("text", "!%us" % lg, "Text")
 
     def __str__(self):
@@ -119,13 +120,13 @@
             "tEXt": PngText
         }
         if self.type in self.chunk_splitter:
+            oldpos = self.stream.tell()
             self.openChild()
             self.newChild("Chunk data (type %s)" % self.type)
             func = self.chunk_splitter[self.type]
-            new_stream = LimitedFileStream( self.stream.filename, self.stream.tell(), self.size )
-            self.data = func(new_stream, self)            
-            self.stream.seek(self.stream.tell() + self.size)
+            self.data = func(stream, self)            
             self.closeChild("Chunk data (type %s)" % self.type)
+            assert oldpos + self.size == self.stream.tell()
         else:
             self.read("data", "![size]s", "Chunk data")
         self.read("crc32", "!L", "Chunk CRC32")



From haypo at berlios.de  Sun Oct 30 02:42:22 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Sun, 30 Oct 2005 02:42:22 +0100
Subject: [Happyboom-svn] r232 - in haypo/hachoir: . plugins
Message-ID: <200510300142.j9U1gMgT028376@sheep.berlios.de>

Author: haypo
Date: 2005-10-30 02:42:18 +0100 (Sun, 30 Oct 2005)
New Revision: 232

Modified:
   haypo/hachoir/filter.py
   haypo/hachoir/hachoir.glade
   haypo/hachoir/hachoir.py
   haypo/hachoir/hmi.py
   haypo/hachoir/plugins/png.py
   haypo/hachoir/stream.py
Log:
Use chunk to store data, and improve filters:
- Filter have id and description
- Everything is stored into chunks
- Now the user interface only display one level of the file,
  and it's possible to go into a sublevel by double-click on a row. Go
  back to parent with escappe key or "Parent" button (in toolbar)
- User interface get it's menubar, toolbar and statusbar. Thanks Glade ;-)
- Simplify array / sub-filter reading with new filter functions:
  readArray() and readChild()


Modified: haypo/hachoir/filter.py
===================================================================
--- haypo/hachoir/filter.py	2005-10-29 06:45:35 UTC (rev 231)
+++ haypo/hachoir/filter.py	2005-10-30 01:42:18 UTC (rev 232)
@@ -8,15 +8,18 @@
 import types
 import string
 import hmi
-
+from chunk import Chunk, FormatChunk, ArrayChunk, FilterChunk
+    
 class Filter:
-    def __init__(self, stream, parent=None):
+    def __init__(self, id, description, stream, parent=None):
+        self.id = id
+        self.description = description
         self._sub_struct = {}
-        self.stream = stream
-        self.parent = parent
-        if self.parent:
-            self.depth = parent.depth + 1
-            self.table_parent = parent.table_item
+        self._stream = stream
+        self._parent = parent
+        if self._parent:
+            self.depth = self._parent.depth + 1
+            self.table_parent = self._parent.table_item
         else:
             self.depth = 1
             self.table_item = None
@@ -25,38 +28,75 @@
         self.child_indent = " " * (self.depth*2)
         self.table_item = None
         self.__last_child_stream_pos = None 
+        self._chunks = []
+        self._chunks_dict = {}
 
+    def getChunk(self, chunk_id):
+        return self._chunks_dict.get(chunk_id, None)
+
+    def displayChunk(self, chunk):
+        type = chunk.__class__
+        if issubclass(type, FormatChunk):
+            type = chunk.getFormat()
+        elif issubclass(type, FilterChunk):
+            type = chunk.getFilter().id
+            #type = "(sub)"
+        hmi.hmi.add_table(self.table_parent, chunk.addr, chunk.size, type, "HEX", chunk.id, chunk.description, "")
+
+    def display(self):
+        hmi.hmi.enableParentButton(self.getParent() != None)
+        text = ""
+        current = self
+        while current != None:
+            if text != "": text = " > " + text
+            text = current.id + text
+            current = current.getParent()
+        hmi.hmi.updateStatusBar(text)
+            
+        hmi.hmi.clear_table()
+        for chunk in self._chunks:
+            if issubclass(chunk.__class__, ArrayChunk):
+                for subchunk in chunk:
+                    self.displayChunk(subchunk)
+            else:
+                self.displayChunk(chunk)
+
     def __replaceFieldFormat(self, match):
         return str(getattr(self, match.group(1)))
 
     def openChild(self):
-        self.__child_stream_pos = self.stream.tell()
+        return
+        self.__child_stream_pos = self._stream.tell()
         self.__last_child_stream_pos = None 
 
     def closeChild(self, text):
+        return
         self.__updateChild(self.__last_child_stream_pos, self.table_item)
         if self.table_parent != None:
             self.__updateChild(self.__child_stream_pos, self.table_parent)
         self.table_item = None
         self.__last_child_stream_pos = None
         if display_filter_actions != self.depth: return
-        size = self.stream.tell() - self.__child_stream_pos
+        size = self._stream.tell() - self.__child_stream_pos
         sys.stdout.write("%s<%s (%u bytes)>\n" % (self.indent, text, size))
 
     def __updateChild(self, pos, table):
         if pos == None or table == None: return False
-        size = self.stream.tell() - pos
+        size = self._stream.tell() - pos
         hmi.hmi.set_table_value(table, 1, size) 
         return True
 
     def updateChildTitle(self, text):
+        return
         hmi.hmi.set_table_value(self.table_item, 4, text) 
 
     def updateChildComment(self, comment):
+        return
         hmi.hmi.set_table_value(self.table_item, 5, comment) 
 
     def newChild(self, text):
-        file_pos = self.stream.tell()
+        return
+        file_pos = self._stream.tell()
         self.__updateChild(self.__last_child_stream_pos, self.table_item)
         self.table_item = hmi.hmi.add_table_child(self.table_parent, file_pos, 0, None, text)
         self.__last_child_stream_pos = file_pos 
@@ -72,16 +112,16 @@
         return True
 
     def readField(self, id, description, delimiter):
-        lg = self.stream.searchLength(delimiter, False)
+        lg = self._stream.searchLength(delimiter, False)
         if lg == -1:
             raise Exception("Delimiter \"%s\" not found for %s (%s)!" % (delimiter, id, description))
         self.read(id, "!%us" % lg, description) 
         self.read(None, "!%us" % len(delimiter), "Delimiter of %s" % id) 
 
     def searchEol(self, eol):
-        lg = self.stream.searchLength(eol, True)
+        lg = self._stream.searchLength(eol, True)
         if lg == -1:
-            return self.stream.getLastPos() - self.stream.tell()
+            return self._stream.getLastPos() - self._stream.tell()
         else:
             return lg
 
@@ -90,75 +130,59 @@
         self.read(id, "!%us" % lg, description, can_truncate)
         line = getattr(self, id)
         setattr(self, id, line[:-len(eol)])
-        
-    def read(self, id, format, description, can_truncate=True):
-        format = re.sub(r'\[([^]]+)\]', self.__replaceFieldFormat, format)
-        size = struct.calcsize(format)
-        max = 60 
-        if size<max or format[-1] != "s" or not can_truncate:
-            rawdata = self.stream.getN(size)
-            assert len(rawdata) == size
-            data = struct.unpack(format, rawdata)
-            data = data[0]
-        else:
-            rawdata = self.stream.getN(max)
-            assert len(rawdata) == max
-            data = rawdata + "(...)"
-            self.stream.seek( self.stream.tell() + size - max )
-        # Display content ?
-        if self.depth <= display_filter_actions and 0<size:
-            file_pos = self.stream.tell() - size
 
-            # Convert data into hexadecimal
-            i = 0
-            hex_data = ""
-            for byte in rawdata:
-                # If there are more than 4 bytes, write "..."
-                if 4 <= i:
-                    hex_data = hex_data + ".. "
-                    i = i + 1
-                    break
-                hex_data = hex_data + "%02X " % ord(byte)
-                i = i + 1
+    def _appendChunk(self, chunk):
+        self._chunks.append(chunk)
+        id = chunk.id
+        if id != None:
+            if hasattr(self, id):
+                raise Exception("Chunk identifier %s already exist!" % id)
+            setattr(self, id, chunk.getData())
+            self._chunks_dict[id] = chunk
+        print "%sNew chunk: %s, addr=%s, size=%s (file pos=%s)" % (self.indent, chunk.id, chunk.addr, chunk.size, self._stream.tell())
 
-            # Write "<addr>: <indent><hex data>"
-            sys.stdout.write("%08X: %s%s" % (file_pos, self.indent, hex_data))
+    def readChild(self, id, filter_class, description): 
+        self.openChild()
+        oldpos = self._stream.tell()
+        self.newChild(description)
+        filter = filter_class(self._stream, self)
+        chunk = FilterChunk(id, filter.description, self._stream, oldpos, self._stream.tell() - oldpos, filter)
+        self.closeChild(description)
+        print "%s : %s = %s" % (chunk.__class__, chunk.id, chunk.getData())
+        self._appendChunk(chunk)
+        print "New child chunk"
 
-            # Align text to 4 bytes
-            sys.stdout.write("   " * (5-i))
+    def readArray(self, id, filter_class, description, end_func): 
+        array = []
+        self.openChild()
+        addr = self._stream.tell()
+        nb = 0
+        while not end_func(self._stream):
+            oldpos = self._stream.tell()
+            self.newChild("New chunk")
+            filter = filter_class(self._stream, self)
+            chunk_id = "%s[%u]" % (id, nb)
+            nb = nb + 1
+            chunk = FilterChunk(chunk_id, filter.description, self._stream, oldpos, self._stream.tell() - oldpos, filter)
+            array.append( chunk )
+        self.closeChild("Chunks")
 
-            # Write description
-            sys.stdout.write("%s (%u bytes)" % (description, size))
+        chunk = ArrayChunk(id, description, self._stream, addr, self._stream.tell() - addr, array)
+        self._appendChunk(chunk)
+        print "New chunk array"
+    
+    def read(self, id, format, description, can_truncate=True):
+        format = re.sub(r'\[([^]]+)\]', self.__replaceFieldFormat, format)
+#        if self.depth <= display_filter_actions and 0<size:
+#            chunk_data.output(self.indent)
+#        if can_truncate:
+#            data = chunk_data.getData(60)
+#        else:
+#            data = chunk_data.getData(None)
+        chunk = FormatChunk(id, description, self._stream, self._stream.tell(), format)
+        self._stream.seek(chunk.size, 1)
+        self._appendChunk(chunk)
 
-            # Write content like id=value?
-            comment = ""
-            if id != None:
-                t = type(data)
-                if t==types.IntType or t==types.LongType:
-                    # Display integers
-                    comment = "%s = %u" % (id, data)
-                elif type(data)==types.StringType and len(data)<max:
-                    # Display string (replace ASCII < 32 by \xCC)
-                    display = ""
-                    for c in data:
-                        if ord(c)<32:
-                            know = {"\n": "\\n", "\r": "\\r", "\0": "\\0"}
-                            if c in know:
-                                display = display + know[c]
-                            else:
-                                display = display + "\\x%02X" % ord(c)
-                        elif c in string.printable:
-                            display = display + c
-                        else:
-                            display = display + "."
-                    comment = "%s=\"%s\"" % (id, display)
-            if comment != "":
-                sys.stdout.write(", %s" % comment)
-            sys.stdout.write("\n")
-            hmi.hmi.add_table(self.table_parent, file_pos, size, hex_data, id, description, comment)
+    def getParent(self): return self._parent
 
-        # Save result in the object
-        if id != None:
-            setattr(self, id, data)
-
 display_filter_actions = 1

Modified: haypo/hachoir/hachoir.glade
===================================================================
--- haypo/hachoir/hachoir.glade	2005-10-29 06:45:35 UTC (rev 231)
+++ haypo/hachoir/hachoir.glade	2005-10-30 01:42:18 UTC (rev 232)
@@ -20,29 +20,347 @@
   <signal name="destroy" handler="on_window_destroy" last_modification_time="Sat, 29 Oct 2005 02:58:52 GMT"/>
 
   <child>
-    <widget class="GtkScrolledWindow" id="scrolledwindow1">
+    <widget class="GtkVBox" id="vbox2">
       <property name="visible">True</property>
-      <property name="can_focus">True</property>
-      <property name="hscrollbar_policy">GTK_POLICY_ALWAYS</property>
-      <property name="vscrollbar_policy">GTK_POLICY_ALWAYS</property>
-      <property name="shadow_type">GTK_SHADOW_IN</property>
-      <property name="window_placement">GTK_CORNER_TOP_LEFT</property>
+      <property name="homogeneous">False</property>
+      <property name="spacing">0</property>
 
       <child>
-	<widget class="GtkTreeView" id="table">
+	<widget class="GtkMenuBar" id="menubar">
 	  <property name="visible">True</property>
+
+	  <child>
+	    <widget class="GtkMenuItem" id="file">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">_File</property>
+	      <property name="use_underline">True</property>
+
+	      <child>
+		<widget class="GtkMenu" id="file_menu">
+
+		  <child>
+		    <widget class="GtkImageMenuItem" id="open">
+		      <property name="visible">True</property>
+		      <property name="label">gtk-open</property>
+		      <property name="use_stock">True</property>
+		      <signal name="activate" handler="on_open_activate" last_modification_time="Sun, 30 Oct 2005 02:16:42 GMT"/>
+		    </widget>
+		  </child>
+
+		  <child>
+		    <widget class="GtkImageMenuItem" id="quit">
+		      <property name="visible">True</property>
+		      <property name="label">gtk-quit</property>
+		      <property name="use_stock">True</property>
+		      <signal name="activate" handler="on_quit_activate" last_modification_time="Sun, 30 Oct 2005 02:19:54 GMT"/>
+		    </widget>
+		  </child>
+		</widget>
+	      </child>
+	    </widget>
+	  </child>
+
+	  <child>
+	    <widget class="GtkImageMenuItem" id="help">
+	      <property name="visible">True</property>
+	      <property name="label">gtk-help</property>
+	      <property name="use_stock">True</property>
+
+	      <child>
+		<widget class="GtkMenu" id="help_menu">
+
+		  <child>
+		    <widget class="GtkImageMenuItem" id="about">
+		      <property name="visible">True</property>
+		      <property name="label">gtk-about</property>
+		      <property name="use_stock">True</property>
+		      <signal name="activate" handler="on_about_activate" last_modification_time="Sun, 30 Oct 2005 02:18:35 GMT"/>
+		    </widget>
+		  </child>
+		</widget>
+	      </child>
+	    </widget>
+	  </child>
+	</widget>
+	<packing>
+	  <property name="padding">0</property>
+	  <property name="expand">False</property>
+	  <property name="fill">False</property>
+	</packing>
+      </child>
+
+      <child>
+	<widget class="GtkToolbar" id="toolbar">
+	  <property name="visible">True</property>
+	  <property name="orientation">GTK_ORIENTATION_HORIZONTAL</property>
+	  <property name="toolbar_style">GTK_TOOLBAR_BOTH</property>
+	  <property name="tooltips">True</property>
+	  <property name="show_arrow">True</property>
+
+	  <child>
+	    <widget class="GtkToolButton" id="toolbutton_parent">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">Parent</property>
+	      <property name="use_underline">True</property>
+	      <property name="stock_id">gtk-go-up</property>
+	      <property name="visible_horizontal">True</property>
+	      <property name="visible_vertical">True</property>
+	      <property name="is_important">False</property>
+	      <signal name="clicked" handler="on_toolbutton_parent" last_modification_time="Sun, 30 Oct 2005 01:50:12 GMT"/>
+	    </widget>
+	    <packing>
+	      <property name="expand">False</property>
+	      <property name="homogeneous">True</property>
+	    </packing>
+	  </child>
+	</widget>
+	<packing>
+	  <property name="padding">0</property>
+	  <property name="expand">False</property>
+	  <property name="fill">False</property>
+	</packing>
+      </child>
+
+      <child>
+	<widget class="GtkScrolledWindow" id="scrolledwindow1">
+	  <property name="visible">True</property>
 	  <property name="can_focus">True</property>
-	  <property name="headers_visible">True</property>
-	  <property name="rules_hint">False</property>
-	  <property name="reorderable">False</property>
-	  <property name="enable_search">True</property>
-	  <property name="fixed_height_mode">False</property>
-	  <property name="hover_selection">False</property>
-	  <property name="hover_expand">False</property>
+	  <property name="hscrollbar_policy">GTK_POLICY_ALWAYS</property>
+	  <property name="vscrollbar_policy">GTK_POLICY_ALWAYS</property>
+	  <property name="shadow_type">GTK_SHADOW_IN</property>
+	  <property name="window_placement">GTK_CORNER_TOP_LEFT</property>
+
+	  <child>
+	    <widget class="GtkTreeView" id="table">
+	      <property name="visible">True</property>
+	      <property name="can_focus">True</property>
+	      <property name="headers_visible">True</property>
+	      <property name="rules_hint">False</property>
+	      <property name="reorderable">False</property>
+	      <property name="enable_search">True</property>
+	      <property name="fixed_height_mode">False</property>
+	      <property name="hover_selection">False</property>
+	      <property name="hover_expand">False</property>
+	    </widget>
+	  </child>
 	</widget>
+	<packing>
+	  <property name="padding">0</property>
+	  <property name="expand">True</property>
+	  <property name="fill">True</property>
+	</packing>
       </child>
+
+      <child>
+	<widget class="GtkStatusbar" id="statusbar">
+	  <property name="visible">True</property>
+	  <property name="has_resize_grip">True</property>
+	</widget>
+	<packing>
+	  <property name="padding">0</property>
+	  <property name="expand">False</property>
+	  <property name="fill">False</property>
+	</packing>
+      </child>
     </widget>
   </child>
 </widget>
 
+<widget class="GtkWindow" id="about_window">
+  <property name="title" translatable="yes">About Hachoir</property>
+  <property name="type">GTK_WINDOW_TOPLEVEL</property>
+  <property name="window_position">GTK_WIN_POS_NONE</property>
+  <property name="modal">True</property>
+  <property name="resizable">True</property>
+  <property name="destroy_with_parent">False</property>
+  <property name="decorated">True</property>
+  <property name="skip_taskbar_hint">False</property>
+  <property name="skip_pager_hint">False</property>
+  <property name="type_hint">GDK_WINDOW_TYPE_HINT_NORMAL</property>
+  <property name="gravity">GDK_GRAVITY_NORTH_WEST</property>
+  <property name="focus_on_map">True</property>
+
+  <child>
+    <widget class="GtkVBox" id="vbox3">
+      <property name="visible">True</property>
+      <property name="homogeneous">False</property>
+      <property name="spacing">0</property>
+
+      <child>
+	<widget class="GtkNotebook" id="notebook1">
+	  <property name="visible">True</property>
+	  <property name="can_focus">True</property>
+	  <property name="show_tabs">True</property>
+	  <property name="show_border">True</property>
+	  <property name="tab_pos">GTK_POS_TOP</property>
+	  <property name="scrollable">False</property>
+	  <property name="enable_popup">False</property>
+
+	  <child>
+	    <widget class="GtkLabel" id="label4">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">Hachoir is a program of Victor Stinner, aka haypo.</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">False</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">False</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0.5</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">10</property>
+	      <property name="ypad">10</property>
+	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	      <property name="width_chars">-1</property>
+	      <property name="single_line_mode">False</property>
+	      <property name="angle">0</property>
+	    </widget>
+	    <packing>
+	      <property name="tab_expand">False</property>
+	      <property name="tab_fill">True</property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkLabel" id="notebook_label1">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">About</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">False</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">False</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0.5</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">0</property>
+	      <property name="ypad">0</property>
+	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	      <property name="width_chars">-1</property>
+	      <property name="single_line_mode">False</property>
+	      <property name="angle">0</property>
+	    </widget>
+	    <packing>
+	      <property name="type">tab</property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkLabel" id="label7">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">This program is licenced under GNU GPL licence.</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">False</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">False</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0.5</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">10</property>
+	      <property name="ypad">10</property>
+	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	      <property name="width_chars">-1</property>
+	      <property name="single_line_mode">False</property>
+	      <property name="angle">0</property>
+	    </widget>
+	    <packing>
+	      <property name="tab_expand">False</property>
+	      <property name="tab_fill">True</property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkLabel" id="notebook_label2">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">Licence</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">False</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">False</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0.5</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">0</property>
+	      <property name="ypad">0</property>
+	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	      <property name="width_chars">-1</property>
+	      <property name="single_line_mode">False</property>
+	      <property name="angle">0</property>
+	    </widget>
+	    <packing>
+	      <property name="type">tab</property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkLabel" id="label6">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">October 27, 2005: Creation of the program.</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">False</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">False</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0.5</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">10</property>
+	      <property name="ypad">10</property>
+	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	      <property name="width_chars">-1</property>
+	      <property name="single_line_mode">False</property>
+	      <property name="angle">0</property>
+	    </widget>
+	    <packing>
+	      <property name="tab_expand">False</property>
+	      <property name="tab_fill">True</property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkLabel" id="label3">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">History</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">False</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">False</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0.5</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">0</property>
+	      <property name="ypad">0</property>
+	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	      <property name="width_chars">-1</property>
+	      <property name="single_line_mode">False</property>
+	      <property name="angle">0</property>
+	    </widget>
+	    <packing>
+	      <property name="type">tab</property>
+	    </packing>
+	  </child>
+	</widget>
+	<packing>
+	  <property name="padding">0</property>
+	  <property name="expand">True</property>
+	  <property name="fill">True</property>
+	</packing>
+      </child>
+
+      <child>
+	<widget class="GtkButton" id="button_close">
+	  <property name="visible">True</property>
+	  <property name="can_focus">True</property>
+	  <property name="label" translatable="yes">Close</property>
+	  <property name="use_underline">True</property>
+	  <property name="relief">GTK_RELIEF_NORMAL</property>
+	  <property name="focus_on_click">True</property>
+	</widget>
+	<packing>
+	  <property name="padding">0</property>
+	  <property name="expand">False</property>
+	  <property name="fill">False</property>
+	</packing>
+      </child>
+    </widget>
+  </child>
+</widget>
+
 </glade-interface>

Modified: haypo/hachoir/hachoir.py
===================================================================
--- haypo/hachoir/hachoir.py	2005-10-29 06:45:35 UTC (rev 231)
+++ haypo/hachoir/hachoir.py	2005-10-30 01:42:18 UTC (rev 232)
@@ -13,6 +13,7 @@
 import sys, os, re, traceback
 from stream import FileStream
 from plugin import getPlugin
+from chunk import FilterChunk
 
 def usage(defval):
     print "%s version %s" % (PROGRAM, VERSION)
@@ -63,6 +64,24 @@
         self.display = True
         self.depth = 5
 
+    def onGoParent(self):
+        print "Go parent:", self.filter
+        if self.filter.getParent() == None: return
+        self.filter = self.filter.getParent()
+        self.filter.display()
+        
+    def onRowClick(self, chunk_id):
+        if chunk_id == None: return
+        m = re.compile(r"^([^[]+)\[([0-9]+)\]$").match(chunk_id)
+        if m != None:
+            array = self.filter.getChunk(m.group(1))
+            chunk = array[int(m.group(2))]
+        else:
+            chunk = self.filter.getChunk(chunk_id)
+        if issubclass(chunk.__class__, FilterChunk):
+            self.filter = chunk.getFilter()
+            self.filter.display()
+
     def run(self, filename):
         import filter
         # Look for a plugin
@@ -79,14 +98,15 @@
             filter.display_filter_actions = self.depth
             if 0 < self.depth:
                 print "=== Split file %s ===" % filename
-            split = split_func(stream)
+            self.filter = split_func(stream)
             if 0 < self.depth:
                 print ""
+            self.filter.display()
 
             # Display
             if self.display:
                 print "=== File %s data ===" % filename
-                display_func(split)
+                display_func(self.filter)
         else:
             print "No suitable plugin for \"%s\"." % (filename)
             sys.exit(1)
@@ -129,6 +149,8 @@
 and PyGlade at: http://glade.gnome.org/""" % (err)
             sys.exit(1)
         hmi.loadInterface()
+        hmi.hmi.on_row_click = hachoir.onRowClick
+        hmi.hmi.on_go_parent = hachoir.onGoParent
         hachoir.run(filename)
         hmi.hmi.run()
 

Modified: haypo/hachoir/hmi.py
===================================================================
--- haypo/hachoir/hmi.py	2005-10-29 06:45:35 UTC (rev 231)
+++ haypo/hachoir/hmi.py	2005-10-30 01:42:18 UTC (rev 232)
@@ -11,9 +11,17 @@
 
 class GladeInterface:
     def __init__(self, filename):
+        self.on_row_click = None # event(chunk_id)
+        self.on_go_parent = None # event(chunk_id)
         self.xml = gtk.glade.XML(filename)
         self.xml.signal_autoconnect(self)
         self.window = self.xml.get_widget('window')
+        self.about_window = self.xml.get_widget('about_window')
+        self.statusbar = self.xml.get_widget('statusbar')
+        self.toolbar = self.xml.get_widget('toolbar')
+        self.toolbutton_parent = self.xml.get_widget('toolbutton_parent')
+        self.statusbar_state = self.statusbar.get_context_id("State")
+        self.window.connect("key-press-event", self.onKeyUp)
         self.table = self.xml.get_widget('table')
         self.table_store = None
         self.build_him()
@@ -24,29 +32,50 @@
         except KeyboardInterrupt:
             print "Interrupted (CTRL+C)."
 
+    def updateStatusBar(self, text):
+        self.statusbar.push(self.statusbar_state, text)
+        print "Status %s" % text
+        
+    def enableParentButton(self, enable):
+        print "Enable = ", enable
+        self.toolbutton_parent.set_sensitive(enable)
+
+    def clear_table(self):
+        self.table_store.clear()
+
     def set_table_value(self, iter, column, value):
         row = self.table_store[iter]
         row[column] = value
        
-    def add_table_child(self, parent, addr, size, id, description):
-        return self.table_store.append(parent, ("%08X" % addr, size, None, id, description, None,))
+    def add_table_child(self, parent, addr, size, type, id, description):
+        return self.table_store.append(parent, ("%08X" % addr, size, type, None, id, description, None,))
        
-    def add_table(self, parent, addr, size, name, id, description, comment):
-        self.table_store.append(parent, ("%08X" % addr, size, name, id, description, comment,))
+    def add_table(self, parent, addr, size, type, name, id, description, comment):
+        self.table_store.append(parent, ("%08X" % addr, size, type, name, id, description, comment,))
        
     def build_him(self):
         self.window.set_size_request(600,400)
         self.build_table()
 
+    def onKeyUp(self, widget, key, data=None):
+        if key.keyval == gtk.keysyms.Escape:
+            self.on_go_parent()
+        
+    def onTableClicked(self, widget, iter, data=None):
+        row = self.table_store[iter]
+        self.on_row_click(row[4])
+
     def build_table(self):
-        self.table_store = gtk.TreeStore(str, int, str, str, str, str)
+        self.table_store = gtk.TreeStore(str, int, str, str, str, str, str)
         self.table.set_model(self.table_store)
+        self.table.connect("row-activated", self.onTableClicked)
         self.treeview_add_column(self.table, "Address", 0)
         self.treeview_add_column(self.table, "Size", 1)
-        self.treeview_add_column(self.table, "Data", 2)
-        self.treeview_add_column(self.table, "Name", 3)
-        self.treeview_add_column(self.table, "Description", 4)
-        self.treeview_add_column(self.table, "Comment", 5)
+        self.treeview_add_column(self.table, "Type", 2)
+        self.treeview_add_column(self.table, "Data", 3)
+        self.treeview_add_column(self.table, "Name", 4)
+        self.treeview_add_column(self.table, "Description", 5)
+        self.treeview_add_column(self.table, "Comment", 6)
         self.table.set_reorderable(True)
         self.treeselection = self.table.get_selection()
 
@@ -59,6 +88,20 @@
         treeview.set_search_column(num)
         col.set_sort_column_id(num)
  
+    def on_toolbutton_parent(self, widget, data=None):
+        print "Pouet"
+        self.on_go_parent()
+
+    def on_open_activate(self, widget):
+        print "Open (do nothing yet)"
+
+    def on_about_activate(self, widget):
+        print "About (do nothing yet)"
+        self.about_window.show()
+
+    def on_quit_activate(self, widget):
+        self.quit()
+
     def on_window_destroy(self, widget, data=None):
         self.quit()
 

Modified: haypo/hachoir/plugins/png.py
===================================================================
--- haypo/hachoir/plugins/png.py	2005-10-29 06:45:35 UTC (rev 231)
+++ haypo/hachoir/plugins/png.py	2005-10-30 01:42:18 UTC (rev 232)
@@ -11,14 +11,15 @@
 
 def displayPng(png):
     for chunk in png.chunks:
-        if issubclass(chunk.data.__class__, Filter):
-            print chunk.data
+        chunk = chunk.getFilter()
+        if hasattr(chunk, "chunk_data"):
+            print chunk.chunk_data
         else:
             print "(unknow chunk type \"%s\")" % chunk.type
 
 class PngHeader(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "png_header", "PNG header", stream, parent)
         self.read("width", "!L", "Width (pixels)")
         self.read("height", "!L", "Height (pixels)")
         self.read("bit_depth", "!B", "Bit depth")
@@ -34,7 +35,7 @@
 
 class PngPhysical(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "png_physical", "PNG physical", stream, parent)
         self.read("pixel_per_unit_x", "!L", "Pixel per unit, X axis")
         self.read("pixel_per_unit_y", "!L", "Pixel per unit, Y axis")
         self.read("unit_type", "!B", "Unit type")
@@ -49,7 +50,7 @@
 
 class PngGamma(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "png_gamma", "PNG gamma", stream, parent)
         self.read("gamma", "!L", "Gamma (x10,000)")
         self.gamma = float(self.gamma)
         self.gamma = self.gamma / 10000
@@ -59,15 +60,15 @@
 
 class PngText(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
-        old = self.stream.tell()
-        pos = self.stream.search("\0", 14)
+        Filter.__init__(self, "png_text", "PNG text", stream, parent)
+        old = self._stream.tell()
+        pos = self._stream.search("\0", 14)
         if pos == -1:
             raise Exception("Fails to find end of text")
         lg = (pos-old)
         self.read("keyword", "!%us" % lg, "Keyword")
         self.read("separator", "!B", "Null byte used to separe strings")
-        lg = (self.parent.size-lg-1)
+        lg = (self._parent.size-lg-1)
         self.read("text", "!%us" % lg, "Text")
 
     def __str__(self):
@@ -76,7 +77,7 @@
 
 class PngTime(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "png_time", "PNG time", stream, parent)
         self.read("year", "!H", "Year")
         self.read("month", "!B", "Month")
         self.read("day", "!B", "Day")
@@ -95,21 +96,17 @@
     """
 
     def __init__(self, stream):
-        Filter.__init__(self, stream)
-        self.read("header", "8s", "File header")
+        Filter.__init__(self, "png_file", "PNG file", stream)
+        self.read("header", "!8s", "File header")
         assert self.header == "\x89\x50\x4E\x47\x0D\x0A\x1A\x0A"
-        self.chunks = []
-        self.openChild()
-        while not self.stream.eof():
-            self.newChild("New chunk")
-            chunk = PngChunk(stream, parent=self)
-            self.chunks.append( chunk )
-            self.updateChildTitle("Chunk (type %s)" % chunk.type)
-        self.closeChild("Chunks")
+        self.readArray("chunks", PngChunk, "Png chunks", self.checkEndOfChunks)
+
+    def checkEndOfChunks(self, stream):
+        return self._stream.eof()
         
 class PngChunk(Filter):
-    def __init__(self, stream, parent=None):
-        Filter.__init__(self, stream, parent)
+    def __init__(self, stream, parent):
+        Filter.__init__(self, "png_chunk", "PNG chunk", stream, parent)
         self.read("size", "!L", "Chunk size")
         self.read("type", "!4s", "Chunk type")
         self.chunk_splitter = {
@@ -120,15 +117,12 @@
             "tEXt": PngText
         }
         if self.type in self.chunk_splitter:
-            oldpos = self.stream.tell()
-            self.openChild()
-            self.newChild("Chunk data (type %s)" % self.type)
-            func = self.chunk_splitter[self.type]
-            self.data = func(stream, self)            
-            self.closeChild("Chunk data (type %s)" % self.type)
-            assert oldpos + self.size == self.stream.tell()
+            oldpos = self._stream.tell()
+            child_filter = self.chunk_splitter[self.type]
+            self.readChild("chunk_data", child_filter, "Chunk data")
+            assert oldpos + self.size == self._stream.tell()
         else:
-            self.read("data", "![size]s", "Chunk data")
+            self.read(None, "![size]s", "Chunk data")
         self.read("crc32", "!L", "Chunk CRC32")
 
     def __str__(self):

Modified: haypo/hachoir/stream.py
===================================================================
--- haypo/hachoir/stream.py	2005-10-29 06:45:35 UTC (rev 231)
+++ haypo/hachoir/stream.py	2005-10-30 01:42:18 UTC (rev 232)
@@ -152,7 +152,7 @@
 
     def getN(self, size):
         data = self.__file.read(size)
-        # Do endian things
+        assert len(data) == size
         return data
 
     def getEnd(self):



From haypo at berlios.de  Sun Oct 30 04:45:33 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Sun, 30 Oct 2005 04:45:33 +0100
Subject: [Happyboom-svn] r233 - in haypo/hachoir: . plugins
Message-ID: <200510300345.j9U3jXmd006396@sheep.berlios.de>

Author: haypo
Date: 2005-10-30 04:45:29 +0100 (Sun, 30 Oct 2005)
New Revision: 233

Added:
   haypo/hachoir/chunk.py
   haypo/hachoir/ui.py
Removed:
   haypo/hachoir/hmi.py
Modified:
   haypo/hachoir/filter.py
   haypo/hachoir/hachoir.py
   haypo/hachoir/plugins/exe.py
   haypo/hachoir/plugins/gif.py
   haypo/hachoir/plugins/ncftp.py
   haypo/hachoir/plugins/png.py
   haypo/hachoir/plugins/tar.py
Log:
Update plugins for new chunk system, rename hmi to ui (user interface).


Added: haypo/hachoir/chunk.py
===================================================================
--- haypo/hachoir/chunk.py	2005-10-30 01:42:18 UTC (rev 232)
+++ haypo/hachoir/chunk.py	2005-10-30 03:45:29 UTC (rev 233)
@@ -0,0 +1,108 @@
+import struct
+import re
+import types
+import string
+
+class Chunk(object):
+    def __init__(self, id, description, stream, addr, size):
+        self.id = id
+        self.description = description
+        self.size = size
+        self._addr = addr
+
+    def __str__(self):
+        return "Chunk(%s) <addr=%s, size=%s, id=%s, description=%s>" % \
+            (self.__class__, self._addr, self.size, self.id, self.description)
+        
+    def getRawData(self, max_size=None):
+        return None
+        
+    def getData(self, max_size=None):
+        return None
+
+    def getDisplayData(self):
+        return self.getData()
+
+    def _getAddr(self): return self._addr
+    addr = property(_getAddr)        
+    
+class ArrayChunk(Chunk):
+    def __init__(self, id, description, stream, addr, size, array):
+        Chunk.__init__(self, id, description, stream, addr, size)
+        self._array = array
+    
+    def getData(self, max_size=None):
+        return self._array
+
+    def __getitem__(self, index):
+        return self._array[index]
+        
+class FilterChunk(Chunk):
+    def __init__(self, id, description, stream, addr, size, filter):
+        Chunk.__init__(self, id, description, stream, addr, size)
+        self._filter = filter
+        
+    def getDisplayData(self):
+        return "(...)" 
+        
+    def getData(self, max_size=None):
+        return self._filter
+
+    def getFilter(self):
+        return self._filter
+
+class FormatChunk(Chunk):
+    def __init__(self, id, description, stream, addr, format):
+        size = struct.calcsize(format)
+        Chunk.__init__(self, id, description, stream, addr, size)
+        self.__stream = stream
+        self.__addr = addr
+        self.__format = format
+        self.value = None
+
+    def getFormat(self): return self.__format
+
+    def isArray(self):
+        if self.isString(): return False
+        return re.compile("^.?[0-9]+.*$").match(self.__format) != None
+        
+    def isString(self):
+        return self.__format[-1] == "s"
+
+    def getRawData(self, max_size=None):
+        """ max_size can be None """
+        self.__stream.seek(self.addr)
+        if (max_size == None or self.size<max_size) or not self.isString():
+            data = self.__stream.getN(self.size)
+            return data, False
+        else:
+            data = self.__stream.getN(max_size)
+            return data+"(...)", True
+   
+    def getData(self, max_size=None):
+        data, truncated = self.getRawData(max_size)
+        if not truncated:
+            data = struct.unpack(self.__format, data)
+            if not self.isArray():
+                data = data[0]
+        return data
+
+    def getDisplayData(self):
+#        if self.id == None: return "-"
+
+        data = self.getData(20)
+        if type(data)==types.StringType:
+            display = ""
+            for c in data:
+                if ord(c)<32:
+                    know = {"\n": "\\n", "\r": "\\r", "\0": "\\0"}
+                    if c in know:
+                        display = display + know[c]
+                    else:
+                        display = display + "\\x%02X" % ord(c)
+                elif c in string.printable:
+                    display = display + c
+                else:
+                    display = display + "."
+            return "\"%s\"" % display
+        return data 

Modified: haypo/hachoir/filter.py
===================================================================
--- haypo/hachoir/filter.py	2005-10-30 01:42:18 UTC (rev 232)
+++ haypo/hachoir/filter.py	2005-10-30 03:45:29 UTC (rev 233)
@@ -3,11 +3,10 @@
 """
 
 import struct
-import re
-import sys
-import types
+import re, sys
 import string
-import hmi
+import types
+import ui
 from chunk import Chunk, FormatChunk, ArrayChunk, FilterChunk
     
 class Filter:
@@ -31,6 +30,9 @@
         self._chunks = []
         self._chunks_dict = {}
 
+    def updateParent(self, parent, chunk):
+        pass
+
     def getChunk(self, chunk_id):
         return self._chunks_dict.get(chunk_id, None)
 
@@ -40,20 +42,23 @@
             type = chunk.getFormat()
         elif issubclass(type, FilterChunk):
             type = chunk.getFilter().id
-            #type = "(sub)"
-        hmi.hmi.add_table(self.table_parent, chunk.addr, chunk.size, type, "HEX", chunk.id, chunk.description, "")
+        ui.ui.add_table(self.table_parent, chunk.addr, chunk.size, type, chunk.id, chunk.description, chunk.getDisplayData())
 
-    def display(self):
-        hmi.hmi.enableParentButton(self.getParent() != None)
+    def display(self):  
+        # Update parent button
+        ui.ui.enableParentButton(self.getParent() != None)
+        
+        # Update status bar
         text = ""
         current = self
         while current != None:
             if text != "": text = " > " + text
             text = current.id + text
             current = current.getParent()
-        hmi.hmi.updateStatusBar(text)
+        ui.ui.updateStatusBar("%s: %s" % (text, self.description))
             
-        hmi.hmi.clear_table()
+        # Update table
+        ui.ui.clear_table()
         for chunk in self._chunks:
             if issubclass(chunk.__class__, ArrayChunk):
                 for subchunk in chunk:
@@ -64,45 +69,6 @@
     def __replaceFieldFormat(self, match):
         return str(getattr(self, match.group(1)))
 
-    def openChild(self):
-        return
-        self.__child_stream_pos = self._stream.tell()
-        self.__last_child_stream_pos = None 
-
-    def closeChild(self, text):
-        return
-        self.__updateChild(self.__last_child_stream_pos, self.table_item)
-        if self.table_parent != None:
-            self.__updateChild(self.__child_stream_pos, self.table_parent)
-        self.table_item = None
-        self.__last_child_stream_pos = None
-        if display_filter_actions != self.depth: return
-        size = self._stream.tell() - self.__child_stream_pos
-        sys.stdout.write("%s<%s (%u bytes)>\n" % (self.indent, text, size))
-
-    def __updateChild(self, pos, table):
-        if pos == None or table == None: return False
-        size = self._stream.tell() - pos
-        hmi.hmi.set_table_value(table, 1, size) 
-        return True
-
-    def updateChildTitle(self, text):
-        return
-        hmi.hmi.set_table_value(self.table_item, 4, text) 
-
-    def updateChildComment(self, comment):
-        return
-        hmi.hmi.set_table_value(self.table_item, 5, comment) 
-
-    def newChild(self, text):
-        return
-        file_pos = self._stream.tell()
-        self.__updateChild(self.__last_child_stream_pos, self.table_item)
-        self.table_item = hmi.hmi.add_table_child(self.table_parent, file_pos, 0, None, text)
-        self.__last_child_stream_pos = file_pos 
-        if display_filter_actions < self.depth+1: return
-        sys.stdout.write("%s[ %s ]\n" % (self.child_indent, text))
-
     def __isStrPrintable(self, str):
         """
         Can a string be printed on the screen?
@@ -135,43 +101,55 @@
         self._chunks.append(chunk)
         id = chunk.id
         if id != None:
-            if hasattr(self, id):
-                raise Exception("Chunk identifier %s already exist!" % id)
-            setattr(self, id, chunk.getData())
-            self._chunks_dict[id] = chunk
-        print "%sNew chunk: %s, addr=%s, size=%s (file pos=%s)" % (self.indent, chunk.id, chunk.addr, chunk.size, self._stream.tell())
+            m = re.compile(r"^([^[]+)\[\]$").match(id)
+            if m != None:
+                id = m.group(1)
+                if hasattr(self, id):
+                    array = getattr(self, id)
+                else:
+                    array = []
+                    setattr(self, id, array)
+                assert type(array) == types.ListType
+                chunk.id = "%s[%u]" % (id, len(array))
+                array.append(chunk)
+                if id not in self._chunks_dict:
+                    self._chunks_dict[id] = array 
+            else:
+                if hasattr(self, id):
+                    raise Exception("Chunk identifier %s already exist!" % id)
+                setattr(self, id, chunk.getData())
+                self._chunks_dict[id] = chunk
 
     def readChild(self, id, filter_class, description): 
-        self.openChild()
         oldpos = self._stream.tell()
-        self.newChild(description)
         filter = filter_class(self._stream, self)
         chunk = FilterChunk(id, filter.description, self._stream, oldpos, self._stream.tell() - oldpos, filter)
-        self.closeChild(description)
-        print "%s : %s = %s" % (chunk.__class__, chunk.id, chunk.getData())
         self._appendChunk(chunk)
-        print "New child chunk"
+        filter.updateParent(self, chunk)
 
     def readArray(self, id, filter_class, description, end_func): 
-        array = []
-        self.openChild()
         addr = self._stream.tell()
+        array = []
+        array_chunk = ArrayChunk(id, description, self._stream, addr, self._stream.tell() - addr, array)
+        self._appendChunk(array_chunk)
+
         nb = 0
-        while not end_func(self._stream):
+        last_filter = None
+        while not end_func(self._stream, array, last_filter):
             oldpos = self._stream.tell()
-            self.newChild("New chunk")
             filter = filter_class(self._stream, self)
             chunk_id = "%s[%u]" % (id, nb)
             nb = nb + 1
             chunk = FilterChunk(chunk_id, filter.description, self._stream, oldpos, self._stream.tell() - oldpos, filter)
             array.append( chunk )
-        self.closeChild("Chunks")
+            last_filter = filter
 
-        chunk = ArrayChunk(id, description, self._stream, addr, self._stream.tell() - addr, array)
-        self._appendChunk(chunk)
-        print "New chunk array"
+
+        for chunk in array:
+            chunk.getFilter().updateParent(self, chunk)
     
     def read(self, id, format, description, can_truncate=True):
+        """ Returns chunk """
         format = re.sub(r'\[([^]]+)\]', self.__replaceFieldFormat, format)
 #        if self.depth <= display_filter_actions and 0<size:
 #            chunk_data.output(self.indent)
@@ -182,7 +160,13 @@
         chunk = FormatChunk(id, description, self._stream, self._stream.tell(), format)
         self._stream.seek(chunk.size, 1)
         self._appendChunk(chunk)
+        return chunk
 
-    def getParent(self): return self._parent
+    def __str__(self):
+        return "Filter(%s) <id=%s, description=%s>" % \
+            (self.__class__, self.id, self.description)
 
+    def getParent(self):
+        return self._parent
+
 display_filter_actions = 1

Modified: haypo/hachoir/hachoir.py
===================================================================
--- haypo/hachoir/hachoir.py	2005-10-30 01:42:18 UTC (rev 232)
+++ haypo/hachoir/hachoir.py	2005-10-30 03:45:29 UTC (rev 233)
@@ -65,7 +65,6 @@
         self.depth = 5
 
     def onGoParent(self):
-        print "Go parent:", self.filter
         if self.filter.getParent() == None: return
         self.filter = self.filter.getParent()
         self.filter.display()
@@ -142,17 +141,17 @@
             setattr(hachoir, key, opt[key])
 
         try:
-            import hmi
+            import ui 
         except ImportError, err:
             print """Error: a Python module is missing:\n%s\n
 You can find PyGTK at: http://www.pygtk.org/
 and PyGlade at: http://glade.gnome.org/""" % (err)
             sys.exit(1)
-        hmi.loadInterface()
-        hmi.hmi.on_row_click = hachoir.onRowClick
-        hmi.hmi.on_go_parent = hachoir.onGoParent
+        ui.loadInterface()
+        ui.ui.on_row_click = hachoir.onRowClick
+        ui.ui.on_go_parent = hachoir.onGoParent
         hachoir.run(filename)
-        hmi.hmi.run()
+        ui.ui.run()
 
     except SystemExit:
         pass

Deleted: haypo/hachoir/hmi.py
===================================================================
--- haypo/hachoir/hmi.py	2005-10-30 01:42:18 UTC (rev 232)
+++ haypo/hachoir/hmi.py	2005-10-30 03:45:29 UTC (rev 233)
@@ -1,112 +0,0 @@
-import os
-import pygtk
-pygtk.require ('2.0')
-import gtk
-import gtk.glade
-
-def loadInterface():
-    global hmi
-    glade = os.path.join(os.path.dirname(__file__), 'hachoir.glade')
-    hmi = GladeInterface(glade)
-
-class GladeInterface:
-    def __init__(self, filename):
-        self.on_row_click = None # event(chunk_id)
-        self.on_go_parent = None # event(chunk_id)
-        self.xml = gtk.glade.XML(filename)
-        self.xml.signal_autoconnect(self)
-        self.window = self.xml.get_widget('window')
-        self.about_window = self.xml.get_widget('about_window')
-        self.statusbar = self.xml.get_widget('statusbar')
-        self.toolbar = self.xml.get_widget('toolbar')
-        self.toolbutton_parent = self.xml.get_widget('toolbutton_parent')
-        self.statusbar_state = self.statusbar.get_context_id("State")
-        self.window.connect("key-press-event", self.onKeyUp)
-        self.table = self.xml.get_widget('table')
-        self.table_store = None
-        self.build_him()
-
-    def run(self):
-        try:
-            gtk.main()
-        except KeyboardInterrupt:
-            print "Interrupted (CTRL+C)."
-
-    def updateStatusBar(self, text):
-        self.statusbar.push(self.statusbar_state, text)
-        print "Status %s" % text
-        
-    def enableParentButton(self, enable):
-        print "Enable = ", enable
-        self.toolbutton_parent.set_sensitive(enable)
-
-    def clear_table(self):
-        self.table_store.clear()
-
-    def set_table_value(self, iter, column, value):
-        row = self.table_store[iter]
-        row[column] = value
-       
-    def add_table_child(self, parent, addr, size, type, id, description):
-        return self.table_store.append(parent, ("%08X" % addr, size, type, None, id, description, None,))
-       
-    def add_table(self, parent, addr, size, type, name, id, description, comment):
-        self.table_store.append(parent, ("%08X" % addr, size, type, name, id, description, comment,))
-       
-    def build_him(self):
-        self.window.set_size_request(600,400)
-        self.build_table()
-
-    def onKeyUp(self, widget, key, data=None):
-        if key.keyval == gtk.keysyms.Escape:
-            self.on_go_parent()
-        
-    def onTableClicked(self, widget, iter, data=None):
-        row = self.table_store[iter]
-        self.on_row_click(row[4])
-
-    def build_table(self):
-        self.table_store = gtk.TreeStore(str, int, str, str, str, str, str)
-        self.table.set_model(self.table_store)
-        self.table.connect("row-activated", self.onTableClicked)
-        self.treeview_add_column(self.table, "Address", 0)
-        self.treeview_add_column(self.table, "Size", 1)
-        self.treeview_add_column(self.table, "Type", 2)
-        self.treeview_add_column(self.table, "Data", 3)
-        self.treeview_add_column(self.table, "Name", 4)
-        self.treeview_add_column(self.table, "Description", 5)
-        self.treeview_add_column(self.table, "Comment", 6)
-        self.table.set_reorderable(True)
-        self.treeselection = self.table.get_selection()
-
-    def treeview_add_column(self, treeview, name, num):
-        col = gtk.TreeViewColumn(name)
-        treeview.append_column(col)
-        cell = gtk.CellRendererText()
-        col.pack_start(cell, True)
-        col.add_attribute(cell, 'text', num)
-        treeview.set_search_column(num)
-        col.set_sort_column_id(num)
- 
-    def on_toolbutton_parent(self, widget, data=None):
-        print "Pouet"
-        self.on_go_parent()
-
-    def on_open_activate(self, widget):
-        print "Open (do nothing yet)"
-
-    def on_about_activate(self, widget):
-        print "About (do nothing yet)"
-        self.about_window.show()
-
-    def on_quit_activate(self, widget):
-        self.quit()
-
-    def on_window_destroy(self, widget, data=None):
-        self.quit()
-
-    def quit(self):
-        print "Quit."
-        gtk.main_quit()
-
-hmi = None

Modified: haypo/hachoir/plugins/exe.py
===================================================================
--- haypo/hachoir/plugins/exe.py	2005-10-30 01:42:18 UTC (rev 232)
+++ haypo/hachoir/plugins/exe.py	2005-10-30 03:45:29 UTC (rev 233)
@@ -1,7 +1,8 @@
 """
 EXE filter.
 
-Status: alpha 
+Status: read ms-dos and pe headers
+Todo: support resources ... and disassembler ? :-)
 Author: Victor Stinner
 """
 
@@ -37,13 +38,15 @@
     if exe.pe:
 #        displayPE(exe.pe)
         for section in exe.pe_sections:
+            section = section.getFilter()
             displayPE_Section(section)
         for res in exe.pe_resources:
+            res = res.getFilter()
             displayPE_ResourceDirectory(res)
             
 class PE_ResourceData(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "pe_rsrc_data", "PE resource data", stream, parent)
         self.read("offset", "<L", "Offset")
         self.read("size", "<L", "Size")
         self.read("page_code", "<L", "Page code (language)")
@@ -59,13 +62,13 @@
 
 class PE_ResourceEntry(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "pe_rsrc_entry", "PE resource entry", stream, parent)
         self.read("id", "<L", "ID or name")
         self.read("offset", "<L", "Offset")
         
 class PE_ResourceDirectory(Filter):
     def __init__(self, stream, parent, offset_res_section):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "pe_rsrc_dir", "PE resource directory", stream, parent)
         self.offset_res_section = offset_res_section
         self.read("option", "<L", "Options")
         self.read("creation_date", "<L", "Creation date")
@@ -84,7 +87,7 @@
 
 class PE_Section(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "pe_section", "PE section", stream, parent)
         self.read("name", "8s", "Name")
         self.name = self.name.strip("\0")
         self.read("rva", "<L", "RVA")
@@ -99,13 +102,13 @@
 
 class PE_Directory(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "pe_dir", "PE directory", stream, parent)
         self.read("size", "<L", "Size")
         self.read("rva", "<L", "RVA")
 
 class PE_OptionnalHeader(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "pe_opt_hdr", "PE optionnal header", stream, parent)
         self.read("header", "<H", "Header")
         assert self.header == 0x010B
         self.read("linker_maj_ver", "B", "Linker major version")
@@ -138,16 +141,14 @@
         self.read("loader_options", "<L", "Loader options")
         self.read("nb_directories", "<L", "Number of directories (16)")
         assert self.nb_directories == 16
-        self.directories = []
-        self.openChild()
-        for i in range(self.nb_directories):
-            self.newChild("PE directory")            
-            self.directories.append( PE_Directory(stream, self) )
-        self.closeChild("PE directories")            
+        self.readArray("directories", PE_Directory, "PE directories", self.checkEndOfDir)
 
+    def checkEndOfDir(self, stream, array, dir):
+        return len(self.directories) == self.nb_directories
+
 class PE_Filter(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "pe_header", "PE header", stream, parent)
         self.read("header", "4s", "File header")
         assert self.header == "PE\0\0"
         self.read("cpu_type", "<H", "CPU type")
@@ -173,7 +174,7 @@
 
 class MS_Dos(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "msdos_header", "MS-Dos executable header", stream, parent)
         self.read("header", "2s", "File header")
         assert self.header == "MZ"
         self.read("filesize_mod_512", ">H", "Filesize mod 512")
@@ -197,36 +198,28 @@
         self.read(None, "!10H", "Reserved")
         self.read("pe_offset", "<L", "Offset to PE header")
 
-class ExeFilter(Filter):
+class ExeFile(Filter):
+    def checkEndOfSections(self, stream, array, section):
+        return len(array) == self.pe.nb_sections
+
     def __init__(self, stream):
-        Filter.__init__(self, stream)
+        Filter.__init__(self, "exe_file", "EXE file", stream)
 
-        self.openChild()
-        self.newChild("MS-Dos header")
-        self.ms_dos = MS_Dos(stream, self)
-        self.closeChild("MS-Dos header")
+        self.readChild("ms_dos", MS_Dos, "MS-Dos header")
 
         if self.ms_dos.reloc_offset == 0x40:
-            self.stream.seek(self.ms_dos.pe_offset)
-            self.openChild()
-            self.newChild("PE header")
-            self.pe = PE_Filter(stream, self)
-            self.closeChild("PE header")
+            stream.seek(self.ms_dos.pe_offset, 0)
 
-            self.openChild()
-            self.newChild("PE optionnal header")            
-            self.pe_optionnal_header = PE_OptionnalHeader(stream, self)
-            self.closeChild("PE optionnal header")            
+            self.readChild("pe", PE_Filter, "PE header")
+            self.readChild("pe_opt", PE_OptionnalHeader, "PE optionnal header")
+            self.readArray("pe_sections", PE_Section, "PE sections", self.checkEndOfSections)
 
-            self.openChild()
-            self.pe_sections = []
-            for i in range(self.pe.nb_sections):
-                self.newChild("PE section")            
-                self.pe_sections.append( PE_Section(stream, self) )
-            self.closeChild("PE sections")     
-
             # Look for resource section
             self.pe_resources = []
+            return
+
+            # TODO: Fix this ...
+            
             offset_res_section = None
             for section in self.pe_sections:
                 if section.name == ".rsrc":
@@ -242,4 +235,4 @@
         else:
             self.pe = None
 
-registerPlugin("^.*\.(exe|EXE)$", "MS-Dos / Windows filter", ExeFilter, displayExe)
+registerPlugin("^.*\.(exe|EXE)$", "MS-Dos / Windows executable filter", ExeFile, displayExe)

Modified: haypo/hachoir/plugins/gif.py
===================================================================
--- haypo/hachoir/plugins/gif.py	2005-10-30 01:42:18 UTC (rev 232)
+++ haypo/hachoir/plugins/gif.py	2005-10-30 03:45:29 UTC (rev 233)
@@ -12,19 +12,22 @@
     print "Format: %s" % (gif.header)
     print "Size: %ux%u" % (gif.screen.width, gif.screen.height)
     print "Colormap: %s" % (gif.color_map)
+    i = 0
     for image in gif.images:
-        print image
+        image = image.getFilter()
+        print "Image %u: %s" % (i, image)
+        i = i + 1
 
 class GifColor(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "gif_color", "GIF color (RGB)", stream, parent)
         self.read("red", "<B", "Red")
         self.read("green", "<B", "Green")
         self.read("blue", "<B", "Blue")
 
 class GifImage(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "gif_image", "GIF image data", stream, parent)
         self.read("left", "<H", "Left")
         self.read("top", "<H", "Top")
         self.read("width", "<H", "Width")
@@ -36,7 +39,7 @@
         self.interlaced = ((self.flags & 0x40) == 0x40)
         self.bits_per_pixel = 1 + (self.flags & 0x07)
         if not self.global_map:
-            self.local_map = GifColorMap(stream, 1 << self.bits_per_pixel, self)
+            self.readChild("local_map", GifColorMap, "Local color map")
         else:
             self.local_map = None
         # -- End of TODO
@@ -48,40 +51,40 @@
              self.bits_per_pixel)
      
 class GifColorMap(Filter):
-    def __init__(self, stream, nb_colors, parent):
-        Filter.__init__(self, stream, parent)
-        self.map = []
-        self.openChild()
-        for i in range(0, nb_colors):
-            self.newChild("Color")
-            self.map.append( GifColor(stream, self) )
-        self.closeChild("Colors")
+    def __init__(self, stream, parent):
+        Filter.__init__(self, "gif_colormap", "GIF color map", stream, parent)
+        if issubclass(parent.__class__, GifImage):
+            self._nb_colors = (1 << parent.bits_per_pixel)
+        else:
+            assert issubclass(parent.__class__, GifFile)
+            self._nb_colors = (1 << parent.screen.bits_per_pixel)
+        self.readArray("map", GifColor, "Color map", self.checkEndOfMap)
 
+    def checkEndOfMap(self, stream, array, color):
+        return len(array) == self._nb_colors 
+
     def __str__(self):
         return "Gif colormap <colors=%u>" % (len(self.map))
         
 class GifExtensionChunk(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "gif_ext_data", "GIF extension data", stream, parent)
         self.read("size", "<B", "Size (in bytes)")
         self.read("content", "<[size]s", "Content")
 
 class GifExtension(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "gif_ext", "GIF extension", stream, parent)
         self.read("func", "<B", "Function")
-        self.chunks = []
-        self.openChild()
-        while True:
-            self.newChild("Extension chunk")
-            chunk = GifExtensionChunk(stream, self)
-            self.chunks.append( chunk )
-            if chunk.size == 0: break 
-        self.closeChild("Extension chunk")
+        self.readArray("chunks", GifExtensionChunk, "Extension chunks", self.checkEnd)
+
+    def checkEnd(self, stream, array, chunk):
+        if chunk == None: return False
+        return chunk.size == 0 
         
 class GifScreenDescriptor(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "gif_screen_desc", "GIF screen descriptor", stream, parent)
         self.read("width", "<H", "Width")
         self.read("height", "<H", "Height")
 
@@ -95,38 +98,33 @@
         self.background = stream.get8()
         zero = stream.get8()
         
-class GifFilter(Filter):
+class GifFile(Filter):
     def __init__(self, stream):
-        Filter.__init__(self, stream)
+        Filter.__init__(self, "gif_file", "GIF picture file", stream)
         # Header
         self.read("header", "6s", "File header")
         assert (self.header == "GIF87a") or (self.header == "GIF89a")
-        self.newChild("Screen descriptor")
-        self.screen = GifScreenDescriptor(stream, self)
+        
+        self.readChild("screen", GifScreenDescriptor, "Screen descriptor")
         if self.screen.global_map:
-            self.newChild("Color map")
-            self.color_map = GifColorMap(stream, 1 << self.screen.bits_per_pixel, self)
+            self.readChild("color_map", GifColorMap, "Color map")
         else:
             self.color_map = None
-        self.images = []
-        self.extensions = []
+            
         while True:
-            self.read("code", "c", "Separator code")
-            if self.code == "!":
-                self.openChild()
-                self.newChild("New extension")
-                self.extensions.append( GifExtension(stream, self) )
-                self.closeChild("Extension")
-            elif self.code == ",":
-                self.openChild()
-                self.newChild("New image")
-                self.images.append( GifImage(stream, self) )
-                self.closeChild("Image")
+            code = self.read(None, "c", "Separator code")
+            code = code.getData()
+            if code == "!":
+                self.readChild("extensions[]", GifExtension, "Extension")
+            elif code == ",":
+                self.readChild("images[]", GifImage, "Image")
+                # TODO: Write GifImage code :-)
+                print "WARNING: GIF FILTER CAN NOT READ IMAGE CONTENT YET, SO ABORT READING!"
                 return
-            elif self.code == ";":
+            elif code == ";":
                 # GIF Terminator
                 return
             else:
-                raise Exception("Wrong GIF image separator: ASCII %02X." % ord(self.code))
+                raise Exception("Wrong GIF image separator: ASCII %02X." % ord(code))
 
-registerPlugin("^.*\.(gif|GIF)$", "GIF picture", GifFilter, displayGif)
+registerPlugin("^.*\.(gif|GIF)$", "GIF picture", GifFile, displayGif)

Modified: haypo/hachoir/plugins/ncftp.py
===================================================================
--- haypo/hachoir/plugins/ncftp.py	2005-10-30 01:42:18 UTC (rev 232)
+++ haypo/hachoir/plugins/ncftp.py	2005-10-30 03:45:29 UTC (rev 233)
@@ -12,20 +12,21 @@
 
 def displayNcftp(data):
     print "Ncftp saved bookmarks:"
-    for b in data.bookmarks:
+    for bc in data.bookmarks:
+        b = bc.getFilter()
         print "o %s (port %s): u=%s, p=\"%s\"" % \
             (b.server, b.port, b.username, b.password)
 
 class NcftpBookmark(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "ncftp_bookmark", "NCFTP bookmark", stream, parent)
         self.readField("name", "Bookmark name", ",")
         self.readField("server", "Server name/ip", ",")
         self.readField("username", "Username", ",")
         self.readField("password", "Password", ",")
         self.readField("notused1", "Not used (1)", ",")
         self.readField("last_dir", "Last directory", ",")
-        self.readField("notused3", "Not used (3)", ",")
+        self.readField("notused", "Not used?", ",")
         self.readField("port", "Server port", ",")
         self.readLine("eol", "End of line", "\n")
         self.password = self.crackPass(self.password)
@@ -36,17 +37,14 @@
         password = base64.decodestring(m.group(1))
         return password.strip("\0")
 
-class NcftpFilter(Filter):
+class NcftpFile(Filter):
     def __init__(self, stream):
-        Filter.__init__(self, stream)
+        Filter.__init__(self, "ncftp_file", "NCFTP bookmark file", stream)
         self.readLine("header", "Header (first line")
         self.readLine("nb_bookmark", "Number of bookmarks")
+        self.readArray("bookmarks", NcftpBookmark, "Bookmarks", self.checkEOF)
 
-        self.openChild()
-        self.bookmarks = []
-        while not self.stream.eof():
-            self.newChild("Bookmark")
-            self.bookmarks.append( NcftpBookmark(stream,self) )
-        self.closeChild("Bookmarks")
-        
-registerPlugin("^.*bookmarks$", "NcFTP bookmarks", NcftpFilter, displayNcftp)
+    def checkEOF(self, stream, array, bookmark):
+        return stream.eof()
+
+registerPlugin("^.*bookmarks$", "NcFTP bookmarks", NcftpFile, displayNcftp)

Modified: haypo/hachoir/plugins/png.py
===================================================================
--- haypo/hachoir/plugins/png.py	2005-10-30 01:42:18 UTC (rev 232)
+++ haypo/hachoir/plugins/png.py	2005-10-30 03:45:29 UTC (rev 233)
@@ -101,8 +101,8 @@
         assert self.header == "\x89\x50\x4E\x47\x0D\x0A\x1A\x0A"
         self.readArray("chunks", PngChunk, "Png chunks", self.checkEndOfChunks)
 
-    def checkEndOfChunks(self, stream):
-        return self._stream.eof()
+    def checkEndOfChunks(self, stream, array, png_chunk):
+        return stream.eof()
         
 class PngChunk(Filter):
     def __init__(self, stream, parent):
@@ -125,6 +125,10 @@
             self.read(None, "![size]s", "Chunk data")
         self.read("crc32", "!L", "Chunk CRC32")
 
+    def updateParent(self, parent, chunk):
+        self.description = "PNG chunk (type %s)" % self.type
+        chunk.description = "PNG chunk (type %s)" % self.type
+
     def __str__(self):
         return "PngChunk <size=%u, type=%s>" % (self.size, self.type)
 

Modified: haypo/hachoir/plugins/tar.py
===================================================================
--- haypo/hachoir/plugins/tar.py	2005-10-30 01:42:18 UTC (rev 232)
+++ haypo/hachoir/plugins/tar.py	2005-10-30 03:45:29 UTC (rev 233)
@@ -36,12 +36,13 @@
     
 def displayTar(tar):
     for file in tar.files:
+        file = file.getFilter()
         print "[ File %s ]" % file.name
         displayFile(file)
 
 class TarFile(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "tar_file","Tar file", stream, parent)
         self.read("name", "!100s", "Name", False)
         self.name = self.name.strip("\0")
         self.read("mode", "!8s", "Mode")
@@ -99,26 +100,27 @@
         if self.type not in name: return "Unknow type (%02X)" % ord(self.type)
         return name[self.type]
 
+    def updateParent(self, parent, chunk):
+        if not self.isEmpty():
+            text = "Tar File (%s: %s)" % (self.name, self.getType())
+        else:
+            text = "Tar File (terminator, empty header)"
+        chunk.description = self.description = text
+
 class TarFilter(Filter):
     def __init__(self, stream):
-        Filter.__init__(self, stream)
+        Filter.__init__(self, "tar_archive", "Tar archive", stream)
 
-        self.files = []
-        self.openChild()
-        while not self.stream.eof():
-            self.newChild("File")
-            file = TarFile(stream, self) 
-            if file.isEmpty():
-                self.updateChildTitle("Terminator (empty header)")
-                break 
-            self.files.append(file)
-            self.updateChildTitle("File (%s)" % file.getType())
-            self.updateChildComment("Filename = %s" % file.name)
-        self.closeChild("Files")
+        self.readArray("files", TarFile, "Tar Files", self.checkEndOfChunks)
         
-        padding = 4096 - self.stream.tell() % 4096
+        padding = 4096 - stream.tell() % 4096
         self.read(None, "!%ss" % padding, "Padding (4096 align)")
 
-        assert self.stream.eof()
+        assert stream.eof()
+
+    def checkEndOfChunks(self, stream, array, file):
+        if file != None:
+            if file.isEmpty(): return True
+        return stream.eof()
         
 registerPlugin("^.*\.tar$", "Tar archive", TarFilter, displayTar)

Copied: haypo/hachoir/ui.py (from rev 232, haypo/hachoir/hmi.py)
===================================================================
--- haypo/hachoir/hmi.py	2005-10-30 01:42:18 UTC (rev 232)
+++ haypo/hachoir/ui.py	2005-10-30 03:45:29 UTC (rev 233)
@@ -0,0 +1,108 @@
+import os
+import pygtk
+pygtk.require ('2.0')
+import gtk
+import gtk.glade
+
+def loadInterface():
+    global ui 
+    glade = os.path.join(os.path.dirname(__file__), 'hachoir.glade')
+    ui = GladeInterface(glade)
+
+class GladeInterface:
+    def __init__(self, filename):
+        self.on_row_click = None # event(chunk_id)
+        self.on_go_parent = None # event(chunk_id)
+        self.xml = gtk.glade.XML(filename)
+        self.xml.signal_autoconnect(self)
+        self.window = self.xml.get_widget('window')
+        self.about_window = self.xml.get_widget('about_window')
+        self.statusbar = self.xml.get_widget('statusbar')
+        self.toolbar = self.xml.get_widget('toolbar')
+        self.toolbutton_parent = self.xml.get_widget('toolbutton_parent')
+        self.statusbar_state = self.statusbar.get_context_id("State")
+        self.window.connect("key-press-event", self.onKeyUp)
+        self.table = self.xml.get_widget('table')
+        self.table_store = None
+        self.build_him()
+
+    def run(self):
+        try:
+            gtk.main()
+        except KeyboardInterrupt:
+            print "Interrupted (CTRL+C)."
+
+    def updateStatusBar(self, text):
+        self.statusbar.push(self.statusbar_state, text)
+        
+    def enableParentButton(self, enable):
+        self.toolbutton_parent.set_sensitive(enable)
+
+    def clear_table(self):
+        self.table_store.clear()
+
+    def set_table_value(self, iter, column, value):
+        row = self.table_store[iter]
+        row[column] = value
+       
+    def add_table_child(self, parent, addr, size, type, id, description):
+        return self.table_store.append(parent, ("%08X" % addr, type, size, None, id, description, None,))
+       
+    def add_table(self, parent, addr, size, type, id, description, value):
+        self.table_store.append(parent, ("%08X" % addr, type, size, id, value, description, ))
+       
+    def build_him(self):
+        self.window.set_size_request(600,400)
+        self.build_table()
+
+    def onKeyUp(self, widget, key, data=None):
+        if key.keyval == gtk.keysyms.Escape:
+            self.on_go_parent()
+        
+    def onTableClicked(self, widget, iter, data=None):
+        row = self.table_store[iter]
+        self.on_row_click(row[3])
+
+    def build_table(self):
+        self.table_store = gtk.TreeStore(str, str, int, str, str, str)
+        self.table.set_model(self.table_store)
+        self.table.connect("row-activated", self.onTableClicked)
+        self.treeview_add_column(self.table, "Address", 0)
+        self.treeview_add_column(self.table, "Type", 1)
+        self.treeview_add_column(self.table, "Size", 2)
+        self.treeview_add_column(self.table, "Name", 3)
+        self.treeview_add_column(self.table, "Value", 4)
+        self.treeview_add_column(self.table, "Description", 5)
+        self.table.set_reorderable(True)
+        self.treeselection = self.table.get_selection()
+
+    def treeview_add_column(self, treeview, name, num):
+        col = gtk.TreeViewColumn(name)
+        treeview.append_column(col)
+        cell = gtk.CellRendererText()
+        col.pack_start(cell, True)
+        col.add_attribute(cell, 'text', num)
+        treeview.set_search_column(num)
+        col.set_sort_column_id(num)
+ 
+    def on_toolbutton_parent(self, widget, data=None):
+        self.on_go_parent()
+
+    def on_open_activate(self, widget):
+        print "Open (do nothing yet)"
+
+    def on_about_activate(self, widget):
+        print "About (do nothing yet)"
+        self.about_window.show()
+
+    def on_quit_activate(self, widget):
+        self.quit()
+
+    def on_window_destroy(self, widget, data=None):
+        self.quit()
+
+    def quit(self):
+        print "Quit."
+        gtk.main_quit()
+
+ui = None



From haypo at berlios.de  Sun Oct 30 05:40:30 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Sun, 30 Oct 2005 05:40:30 +0100
Subject: [Happyboom-svn] r234 - in haypo/hachoir: . plugins
Message-ID: <200510300440.j9U4eUZ3021232@sheep.berlios.de>

Author: haypo
Date: 2005-10-30 05:40:08 +0100 (Sun, 30 Oct 2005)
New Revision: 234

Modified:
   haypo/hachoir/chunk.py
   haypo/hachoir/filter.py
   haypo/hachoir/plugins/gif.py
   haypo/hachoir/plugins/png.py
   haypo/hachoir/plugins/tar.py
   haypo/hachoir/plugins/zip.py
   haypo/hachoir/ui.py
Log:
Fix zip plugin, chunk now have parent (of class Filter).


Modified: haypo/hachoir/chunk.py
===================================================================
--- haypo/hachoir/chunk.py	2005-10-30 03:45:29 UTC (rev 233)
+++ haypo/hachoir/chunk.py	2005-10-30 04:40:08 UTC (rev 234)
@@ -4,11 +4,12 @@
 import string
 
 class Chunk(object):
-    def __init__(self, id, description, stream, addr, size):
+    def __init__(self, id, description, stream, addr, size, parent):
         self.id = id
         self.description = description
-        self.size = size
+        self._size = size
         self._addr = addr
+        self._parent = parent
 
     def __str__(self):
         return "Chunk(%s) <addr=%s, size=%s, id=%s, description=%s>" % \
@@ -24,11 +25,14 @@
         return self.getData()
 
     def _getAddr(self): return self._addr
+    def _getSize(self):
+        return self._size
     addr = property(_getAddr)        
+    size = property(_getSize)        
     
 class ArrayChunk(Chunk):
-    def __init__(self, id, description, stream, addr, size, array):
-        Chunk.__init__(self, id, description, stream, addr, size)
+    def __init__(self, id, description, stream, addr, size, array, parent):
+        Chunk.__init__(self, id, description, stream, addr, size, parent)
         self._array = array
     
     def getData(self, max_size=None):
@@ -38,8 +42,8 @@
         return self._array[index]
         
 class FilterChunk(Chunk):
-    def __init__(self, id, description, stream, addr, size, filter):
-        Chunk.__init__(self, id, description, stream, addr, size)
+    def __init__(self, id, description, stream, filter):
+        Chunk.__init__(self, id, description, stream, filter.getAddr(), filter.getSize(), filter)
         self._filter = filter
         
     def getDisplayData(self):
@@ -52,14 +56,21 @@
         return self._filter
 
 class FormatChunk(Chunk):
-    def __init__(self, id, description, stream, addr, format):
-        size = struct.calcsize(format)
-        Chunk.__init__(self, id, description, stream, addr, size)
+    def __init__(self, id, description, stream, addr, format, parent):
+        Chunk.__init__(self, id, description, stream, addr, 0, parent)
         self.__stream = stream
         self.__addr = addr
         self.__format = format
         self.value = None
+        self.truncate = False
 
+    def _getSize(self):
+        return struct.calcsize(self._getRealFormat())
+    size = property(_getSize)        
+
+    def _getRealFormat(self):
+        return re.sub(r'\{([^}]+)\}', self.__replaceFieldFormat, self.__format)
+
     def getFormat(self): return self.__format
 
     def isArray(self):
@@ -72,24 +83,30 @@
     def getRawData(self, max_size=None):
         """ max_size can be None """
         self.__stream.seek(self.addr)
+        if max_size == None and self.truncate:
+            max_size = 40
         if (max_size == None or self.size<max_size) or not self.isString():
             data = self.__stream.getN(self.size)
             return data, False
         else:
             data = self.__stream.getN(max_size)
             return data+"(...)", True
+
+    def __replaceFieldFormat(self, match):
+#        return str(getattr(self, match.group(1)))
+        return str(getattr(self._parent, match.group(1)))
    
     def getData(self, max_size=None):
         data, truncated = self.getRawData(max_size)
         if not truncated:
-            data = struct.unpack(self.__format, data)
+            format = self._getRealFormat()
+            data = struct.unpack(format, data)
             if not self.isArray():
                 data = data[0]
         return data
 
     def getDisplayData(self):
 #        if self.id == None: return "-"
-
         data = self.getData(20)
         if type(data)==types.StringType:
             display = ""

Modified: haypo/hachoir/filter.py
===================================================================
--- haypo/hachoir/filter.py	2005-10-30 03:45:29 UTC (rev 233)
+++ haypo/hachoir/filter.py	2005-10-30 04:40:08 UTC (rev 234)
@@ -29,7 +29,17 @@
         self.__last_child_stream_pos = None 
         self._chunks = []
         self._chunks_dict = {}
+        self._addr = self._stream.tell()
 
+    def getAddr(self):
+        return self._addr
+
+    def getSize(self):
+        size = 0
+        for chunk in self._chunks:
+            size = size + chunk.size
+        return size
+
     def updateParent(self, parent, chunk):
         pass
 
@@ -66,9 +76,6 @@
             else:
                 self.displayChunk(chunk)
 
-    def __replaceFieldFormat(self, match):
-        return str(getattr(self, match.group(1)))
-
     def __isStrPrintable(self, str):
         """
         Can a string be printed on the screen?
@@ -116,50 +123,50 @@
                     self._chunks_dict[id] = array 
             else:
                 if hasattr(self, id):
-                    raise Exception("Chunk identifier %s already exist!" % id)
+                    raise Exception("Chunk identifier \"%s\" already exist!" % id)
                 setattr(self, id, chunk.getData())
                 self._chunks_dict[id] = chunk
 
     def readChild(self, id, filter_class, description): 
-        oldpos = self._stream.tell()
         filter = filter_class(self._stream, self)
-        chunk = FilterChunk(id, filter.description, self._stream, oldpos, self._stream.tell() - oldpos, filter)
+        chunk = FilterChunk(id, filter.description, self._stream, filter)
         self._appendChunk(chunk)
         filter.updateParent(self, chunk)
+        self._stream.seek(chunk.addr + chunk.size)
 
     def readArray(self, id, filter_class, description, end_func): 
         addr = self._stream.tell()
         array = []
-        array_chunk = ArrayChunk(id, description, self._stream, addr, self._stream.tell() - addr, array)
+        array_chunk = ArrayChunk(id, description, self._stream, addr, self._stream.tell() - addr, array, self)
         self._appendChunk(array_chunk)
 
         nb = 0
         last_filter = None
         while not end_func(self._stream, array, last_filter):
-            oldpos = self._stream.tell()
             filter = filter_class(self._stream, self)
             chunk_id = "%s[%u]" % (id, nb)
             nb = nb + 1
-            chunk = FilterChunk(chunk_id, filter.description, self._stream, oldpos, self._stream.tell() - oldpos, filter)
+            chunk = FilterChunk(chunk_id, filter.description, self._stream, filter)
             array.append( chunk )
             last_filter = filter
 
-
         for chunk in array:
             chunk.getFilter().updateParent(self, chunk)
+        self._stream.seek(chunk.addr + chunk.size)
     
     def read(self, id, format, description, can_truncate=True):
         """ Returns chunk """
-        format = re.sub(r'\[([^]]+)\]', self.__replaceFieldFormat, format)
 #        if self.depth <= display_filter_actions and 0<size:
 #            chunk_data.output(self.indent)
 #        if can_truncate:
 #            data = chunk_data.getData(60)
 #        else:
 #            data = chunk_data.getData(None)
-        chunk = FormatChunk(id, description, self._stream, self._stream.tell(), format)
+        chunk = FormatChunk(id, description, self._stream, self._stream.tell(), format, self)
+        chunk.truncate = can_truncate 
         self._stream.seek(chunk.size, 1)
         self._appendChunk(chunk)
+        self._stream.seek(chunk.addr + chunk.size)
         return chunk
 
     def __str__(self):

Modified: haypo/hachoir/plugins/gif.py
===================================================================
--- haypo/hachoir/plugins/gif.py	2005-10-30 03:45:29 UTC (rev 233)
+++ haypo/hachoir/plugins/gif.py	2005-10-30 04:40:08 UTC (rev 234)
@@ -70,7 +70,7 @@
     def __init__(self, stream, parent):
         Filter.__init__(self, "gif_ext_data", "GIF extension data", stream, parent)
         self.read("size", "<B", "Size (in bytes)")
-        self.read("content", "<[size]s", "Content")
+        self.read("content", "<{size}s", "Content")
 
 class GifExtension(Filter):
     def __init__(self, stream, parent):

Modified: haypo/hachoir/plugins/png.py
===================================================================
--- haypo/hachoir/plugins/png.py	2005-10-30 03:45:29 UTC (rev 233)
+++ haypo/hachoir/plugins/png.py	2005-10-30 04:40:08 UTC (rev 234)
@@ -122,7 +122,7 @@
             self.readChild("chunk_data", child_filter, "Chunk data")
             assert oldpos + self.size == self._stream.tell()
         else:
-            self.read(None, "![size]s", "Chunk data")
+            self.read(None, "!{size}s", "Chunk data")
         self.read("crc32", "!L", "Chunk CRC32")
 
     def updateParent(self, parent, chunk):

Modified: haypo/hachoir/plugins/tar.py
===================================================================
--- haypo/hachoir/plugins/tar.py	2005-10-30 03:45:29 UTC (rev 233)
+++ haypo/hachoir/plugins/tar.py	2005-10-30 04:40:08 UTC (rev 234)
@@ -70,7 +70,7 @@
         #self.read(None, "!167s", "Padding (zero)")
         self.read(None, "!167s", "Padding (zero)")
         if self.type in ("\0", "0"):
-            self.read("filedata", "![size]s", "File data")
+            self.read("filedata", "!{size}s", "File data")
         if stream.tell() % 512 != 0:
             padding = 512 - stream.tell() % 512
             self.read(None, "!%ss" % padding, "Padding (512 align)")

Modified: haypo/hachoir/plugins/zip.py
===================================================================
--- haypo/hachoir/plugins/zip.py	2005-10-30 03:45:29 UTC (rev 233)
+++ haypo/hachoir/plugins/zip.py	2005-10-30 04:40:08 UTC (rev 234)
@@ -9,12 +9,10 @@
 from plugin import registerPlugin
 import sys
 
-def splitZip(stream):
-    return ZipFilter(stream)
-
 def displayZip(zip):    
     print "[ Zip archive ]"
     for file in zip.files:
+        file = file.getFilter()
         sys.stdout.write ("* File %s (size=%0.1f KB" %
             (file.filename, file.uncompressed_size / 1024))
         if file.uncompressed_size != 0:
@@ -25,7 +23,7 @@
 
 class ZipCentralDirectory(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "zip_central_dir", "ZIP central directory", stream, parent)
         self.read("version_made_by", "<H", "Version made by")
         self.read("version_needed", "<H", "Version neede")
         self.read("flags", "<H", "General purpose flag")
@@ -42,13 +40,13 @@
         self.read("internal_attr", "<H", "Internal file attributes")
         self.read("external_attr", "<L", "External file attributes")
         self.read("offset_header", "<L", "Relative offset of local header")
-        self.read("filename", "<[filename_length]s", "Filename")
-        self.read("extra", "<[extra_length]s", "Extra fields")
-        self.read("file_comment", "<[file_comment_length]s", "File comment")
+        self.read("filename", "<{filename_length}s", "Filename")
+        self.read("extra", "<{extra_length}s", "Extra fields")
+        self.read("file_comment", "<{file_comment_length}s", "File comment")
 
 class ZipEndCentralDirectory(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "zip_end_dir", "ZIP end central directory", stream, parent)
         self.read("number_disk", "<H", "Number of this disk")
         self.read("number_disk2", "<H", "Number of this disk2")
         self.read("total_number_disk", "<H", "Total number of entries")
@@ -56,11 +54,11 @@
         self.read("size", "<L", "Size of the central directory")
         self.read("offset", "<L", "Offset of start of central directory")
         self.read("comment_length", "<H", "ZIP comment length")
-        self.read("comment", "<[comment_length]s", "ZIP comment")
+        self.read("comment", "<{comment_length}s", "ZIP comment")
 
 #class ZipZip64(Filter):
 #    def __init__(self, stream, parent):
-#        Filter.__init__(self, stream, parent)
+#        Filter.__init__(self, "zip_zip64, "ZIP ZIP64", stream, parent)
 #        self.read("size", "<Q", "Directory size")
 #        self.read("version_made_by", "<H", "Version made by")
 #        self.read("version_needed", "<H", "Version neede")
@@ -71,9 +69,9 @@
 #        self.read("size2", "<Q", "Directory size2")
 #        self.read("offset", "<Q", "Offset")
         
-class ZipFile(Filter):
+class ZipFileEntry(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, stream, parent)
+        Filter.__init__(self, "zip_file_entry", "ZIP file entry", stream, parent)
         self.read("version", "<H", "Version")
         self.read("flags", "<H", "Flags")
         self.read("compression_method", "<H", "Compression method")
@@ -84,43 +82,34 @@
         self.read("uncompressed_size", "<L", "Uncompressed size (bytes)")
         self.read("filename_length", "<H", "Filename length")
         self.read("extra_length", "<H", "Extra length")
-        self.read("filename", "<[filename_length]s", "Filename")
-        self.read("extra", "<[extra_length]s", "Extra")
-        self.read("compressed_data", "<[compressed_size]s", "Compressed data")
+        self.read("filename", "<{filename_length}s", "Filename")
+        self.read("extra", "<{extra_length}s", "Extra")
+        self.read("compressed_data", "<{compressed_size}s", "Compressed data", True)
         if (self.flags & 4) == 4:
             self.read("file_crc32", "<L", "Checksum (CRC32)")
             self.read("file_compressed_size", "<L", "Compressed size (bytes)")
             self.read("file_uncompressed_size", "<L", "Uncompressed size (bytes)")
         
-class ZipFilter(Filter):
+class ZipFile(Filter):
     def __init__(self, stream):
-        Filter.__init__(self, stream)
+        Filter.__init__(self, "zip_file", "ZIP archive file", stream)
         # File data
         self.signature = None
         self.central_directory = []
-        self.end_central_directory = None
         self.files = []
         while not stream.eof():
-            self.read("header", "<L", "Header")
-            if self.header == 0x04034B50:
-                self.newChild("File entry")
-                self.openChild()
-                self.files.append( ZipFile(stream, self) )
-                self.closeChild("File entry")
-            elif self.header == 0x02014b50:
-                self.newChild("Central directory")
-                self.openChild()
-                self.central_directory.append( ZipCentralDirectory(stream,self) )
-                self.closeChild("Central directory")
-            elif self.header == 0x06054b50:
-                self.newChild("End of central directory")
-                self.openChild()
-                self.end_central_directory = ZipEndCentralDirectory(stream,self)
-                self.closeChild("End of central directory")
-            elif self.header == 0x05054b50:
+            header = self.read("header[]", "<L", "Header")
+            header = header.getData()
+            if header == 0x04034B50:
+                self.readChild("files[]", ZipFileEntry, "File entry")
+            elif header == 0x02014b50:
+                self.readChild("central_directory[]", ZipCentralDirectory, "Central directory")
+            elif header == 0x06054b50:
+                self.readChild("end_central_directory", ZipEndCentralDirectory, "End of central directory")
+            elif header == 0x05054b50:
                 self.read("signature_length", "!H", "Signature length")
-                self.read("signature", "![signature_length]s", "Signature")
+                self.read("signature", "!{signature_length}s", "Signature")
             else:
-                raise Exception("Error, unknow ZIP header (0x%08X)." % self.header)
+                raise Exception("Error, unknow ZIP header (0x%08X)." % header)
         
-registerPlugin("^.*\.(zip|ZIP)$", "ZIP (compressed archive)", splitZip, displayZip)
+registerPlugin("^.*\.(zip|ZIP)$", "ZIP (compressed archive)", ZipFile, displayZip)

Modified: haypo/hachoir/ui.py
===================================================================
--- haypo/hachoir/ui.py	2005-10-30 03:45:29 UTC (rev 233)
+++ haypo/hachoir/ui.py	2005-10-30 04:40:08 UTC (rev 234)
@@ -52,7 +52,7 @@
         self.table_store.append(parent, ("%08X" % addr, type, size, id, value, description, ))
        
     def build_him(self):
-        self.window.set_size_request(600,400)
+        self.window.set_size_request(760,300)
         self.build_table()
 
     def onKeyUp(self, widget, key, data=None):



From haypo at berlios.de  Sun Oct 30 05:54:44 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Sun, 30 Oct 2005 05:54:44 +0100
Subject: [Happyboom-svn] r235 - in haypo/hachoir: . plugins
Message-ID: <200510300454.j9U4siHH024238@sheep.berlios.de>

Author: haypo
Date: 2005-10-30 05:54:42 +0100 (Sun, 30 Oct 2005)
New Revision: 235

Modified:
   haypo/hachoir/chunk.py
   haypo/hachoir/hachoir.py
   haypo/hachoir/plugins/exe.py
   haypo/hachoir/ui.py
Log:
Can load a new file ...


Modified: haypo/hachoir/chunk.py
===================================================================
--- haypo/hachoir/chunk.py	2005-10-30 04:40:08 UTC (rev 234)
+++ haypo/hachoir/chunk.py	2005-10-30 04:54:42 UTC (rev 235)
@@ -112,7 +112,11 @@
             display = ""
             for c in data:
                 if ord(c)<32:
-                    know = {"\n": "\\n", "\r": "\\r", "\0": "\\0"}
+                    know = { \
+                        "\n": "\\n",
+                        "\r": "\\r",
+                        "\t": "\\t",
+                        "\0": "\\0"}
                     if c in know:
                         display = display + know[c]
                     else:

Modified: haypo/hachoir/hachoir.py
===================================================================
--- haypo/hachoir/hachoir.py	2005-10-30 04:40:08 UTC (rev 234)
+++ haypo/hachoir/hachoir.py	2005-10-30 04:54:42 UTC (rev 235)
@@ -85,30 +85,30 @@
         import filter
         # Look for a plugin
         plugin = getPlugin(filename)
-        if plugin != None:
-            regex, plugin_name, split_func, display_func = plugin
-            if self.verbose:
-                print "Split file \"%s\": %s." % (filename, plugin_name)
-            
-            # Create stream
-            stream = FileStream(filename)
+        if plugin == None:
+            print "No suitable plugin for \"%s\"." % (filename)
+            return False
+        regex, plugin_name, split_func, display_func = plugin
+        if self.verbose:
+            print "Split file \"%s\": %s." % (filename, plugin_name)
+        
+        # Create stream
+        stream = FileStream(filename)
 
-            # Split 
-            filter.display_filter_actions = self.depth
-            if 0 < self.depth:
-                print "=== Split file %s ===" % filename
-            self.filter = split_func(stream)
-            if 0 < self.depth:
-                print ""
-            self.filter.display()
+        # Split 
+        filter.display_filter_actions = self.depth
+        if 0 < self.depth:
+            print "=== Split file %s ===" % filename
+        self.filter = split_func(stream)
+        if 0 < self.depth:
+            print ""
+        self.filter.display()
 
-            # Display
-            if self.display:
-                print "=== File %s data ===" % filename
-                display_func(self.filter)
-        else:
-            print "No suitable plugin for \"%s\"." % (filename)
-            sys.exit(1)
+        # Display
+        if self.display:
+            print "=== File %s data ===" % filename
+            display_func(self.filter)
+        return True
 
 def main():
     try:        
@@ -147,10 +147,12 @@
 You can find PyGTK at: http://www.pygtk.org/
 and PyGlade at: http://glade.gnome.org/""" % (err)
             sys.exit(1)
-        ui.loadInterface()
+        ui.loadInterface(hachoir)
         ui.ui.on_row_click = hachoir.onRowClick
         ui.ui.on_go_parent = hachoir.onGoParent
-        hachoir.run(filename)
+        ok = hachoir.run(filename)
+        if not ok:
+            sys.exit(1)
         ui.ui.run()
 
     except SystemExit:

Modified: haypo/hachoir/plugins/exe.py
===================================================================
--- haypo/hachoir/plugins/exe.py	2005-10-30 04:40:08 UTC (rev 234)
+++ haypo/hachoir/plugins/exe.py	2005-10-30 04:54:42 UTC (rev 235)
@@ -89,7 +89,7 @@
     def __init__(self, stream, parent):
         Filter.__init__(self, "pe_section", "PE section", stream, parent)
         self.read("name", "8s", "Name")
-        self.name = self.name.strip("\0")
+        self.name = self.name.strip(" \0")
         self.read("rva", "<L", "RVA")
         self.read("size", "<L", "Size")
         self.read("file_size", "<L", "File size")

Modified: haypo/hachoir/ui.py
===================================================================
--- haypo/hachoir/ui.py	2005-10-30 04:40:08 UTC (rev 234)
+++ haypo/hachoir/ui.py	2005-10-30 04:54:42 UTC (rev 235)
@@ -4,13 +4,13 @@
 import gtk
 import gtk.glade
 
-def loadInterface():
+def loadInterface(hachoir):
     global ui 
     glade = os.path.join(os.path.dirname(__file__), 'hachoir.glade')
-    ui = GladeInterface(glade)
+    ui = GladeInterface(glade, hachoir)
 
 class GladeInterface:
-    def __init__(self, filename):
+    def __init__(self, filename, hachoir):
         self.on_row_click = None # event(chunk_id)
         self.on_go_parent = None # event(chunk_id)
         self.xml = gtk.glade.XML(filename)
@@ -24,6 +24,7 @@
         self.window.connect("key-press-event", self.onKeyUp)
         self.table = self.xml.get_widget('table')
         self.table_store = None
+        self.hachoir = hachoir
         self.build_him()
 
     def run(self):
@@ -90,6 +91,14 @@
 
     def on_open_activate(self, widget):
         print "Open (do nothing yet)"
+        chooser = gtk.FileChooserDialog( \
+            title="Choose file",
+            action=gtk.FILE_CHOOSER_ACTION_OPEN,
+            buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_OPEN,gtk.RESPONSE_OK))
+        if chooser.run() == gtk.RESPONSE_OK:
+            filename = chooser.get_filename() 
+            self.hachoir.run(filename)
+        chooser.destroy()
 
     def on_about_activate(self, widget):
         print "About (do nothing yet)"



From haypo at berlios.de  Sun Oct 30 15:21:02 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Sun, 30 Oct 2005 15:21:02 +0100
Subject: [Happyboom-svn] r236 - in haypo/hachoir: . plugins
Message-ID: <200510301421.j9UEL2U8032578@sheep.berlios.de>

Author: haypo
Date: 2005-10-30 15:21:02 +0100 (Sun, 30 Oct 2005)
New Revision: 236

Modified:
   haypo/hachoir/chunk.py
   haypo/hachoir/filter.py
   haypo/hachoir/plugins/gif.py
   haypo/hachoir/plugins/tar.py
Log:
Fix array chunk size, and manage chunk read max size differently.


Modified: haypo/hachoir/chunk.py
===================================================================
--- haypo/hachoir/chunk.py	2005-10-30 04:54:42 UTC (rev 235)
+++ haypo/hachoir/chunk.py	2005-10-30 14:21:02 UTC (rev 236)
@@ -31,9 +31,16 @@
     size = property(_getSize)        
     
 class ArrayChunk(Chunk):
-    def __init__(self, id, description, stream, addr, size, array, parent):
-        Chunk.__init__(self, id, description, stream, addr, size, parent)
+    def __init__(self, id, description, stream, array, parent):
+        Chunk.__init__(self, id, description, stream, stream.tell(), 0, parent)
         self._array = array
+
+    def _getSize(self):
+        size = 0
+        for item in self._array:
+            size = size + item.size
+        return size
+    size = property(_getSize)        
     
     def getData(self, max_size=None):
         return self._array
@@ -62,7 +69,6 @@
         self.__addr = addr
         self.__format = format
         self.value = None
-        self.truncate = False
 
     def _getSize(self):
         return struct.calcsize(self._getRealFormat())
@@ -83,8 +89,6 @@
     def getRawData(self, max_size=None):
         """ max_size can be None """
         self.__stream.seek(self.addr)
-        if max_size == None and self.truncate:
-            max_size = 40
         if (max_size == None or self.size<max_size) or not self.isString():
             data = self.__stream.getN(self.size)
             return data, False

Modified: haypo/hachoir/filter.py
===================================================================
--- haypo/hachoir/filter.py	2005-10-30 04:54:42 UTC (rev 235)
+++ haypo/hachoir/filter.py	2005-10-30 14:21:02 UTC (rev 236)
@@ -104,7 +104,7 @@
         line = getattr(self, id)
         setattr(self, id, line[:-len(eol)])
 
-    def _appendChunk(self, chunk):
+    def _appendChunk(self, chunk, can_truncate=False):
         self._chunks.append(chunk)
         id = chunk.id
         if id != None:
@@ -124,7 +124,11 @@
             else:
                 if hasattr(self, id):
                     raise Exception("Chunk identifier \"%s\" already exist!" % id)
-                setattr(self, id, chunk.getData())
+                if can_truncate:
+                    data = chunk.getData(40)
+                else:
+                    data = chunk.getData()
+                setattr(self, id, data)
                 self._chunks_dict[id] = chunk
 
     def readChild(self, id, filter_class, description): 
@@ -135,9 +139,8 @@
         self._stream.seek(chunk.addr + chunk.size)
 
     def readArray(self, id, filter_class, description, end_func): 
-        addr = self._stream.tell()
         array = []
-        array_chunk = ArrayChunk(id, description, self._stream, addr, self._stream.tell() - addr, array, self)
+        array_chunk = ArrayChunk(id, description, self._stream, array, self)
         self._appendChunk(array_chunk)
 
         nb = 0
@@ -152,7 +155,7 @@
 
         for chunk in array:
             chunk.getFilter().updateParent(self, chunk)
-        self._stream.seek(chunk.addr + chunk.size)
+        self._stream.seek(array_chunk.addr + array_chunk.size)
     
     def read(self, id, format, description, can_truncate=True):
         """ Returns chunk """
@@ -163,9 +166,8 @@
 #        else:
 #            data = chunk_data.getData(None)
         chunk = FormatChunk(id, description, self._stream, self._stream.tell(), format, self)
-        chunk.truncate = can_truncate 
         self._stream.seek(chunk.size, 1)
-        self._appendChunk(chunk)
+        self._appendChunk(chunk, can_truncate)
         self._stream.seek(chunk.addr + chunk.size)
         return chunk
 

Modified: haypo/hachoir/plugins/gif.py
===================================================================
--- haypo/hachoir/plugins/gif.py	2005-10-30 04:54:42 UTC (rev 235)
+++ haypo/hachoir/plugins/gif.py	2005-10-30 14:21:02 UTC (rev 236)
@@ -111,6 +111,7 @@
         else:
             self.color_map = None
             
+        self.images = []
         while True:
             code = self.read(None, "c", "Separator code")
             code = code.getData()

Modified: haypo/hachoir/plugins/tar.py
===================================================================
--- haypo/hachoir/plugins/tar.py	2005-10-30 04:54:42 UTC (rev 235)
+++ haypo/hachoir/plugins/tar.py	2005-10-30 14:21:02 UTC (rev 236)
@@ -40,9 +40,9 @@
         print "[ File %s ]" % file.name
         displayFile(file)
 
-class TarFile(Filter):
+class TarFileEntry(Filter):
     def __init__(self, stream, parent):
-        Filter.__init__(self, "tar_file","Tar file", stream, parent)
+        Filter.__init__(self, "tar_file_entry","Tar file entry", stream, parent)
         self.read("name", "!100s", "Name", False)
         self.name = self.name.strip("\0")
         self.read("mode", "!8s", "Mode")
@@ -70,7 +70,7 @@
         #self.read(None, "!167s", "Padding (zero)")
         self.read(None, "!167s", "Padding (zero)")
         if self.type in ("\0", "0"):
-            self.read("filedata", "!{size}s", "File data")
+            self.read("filedata", "!{size}s", "File data", True)
         if stream.tell() % 512 != 0:
             padding = 512 - stream.tell() % 512
             self.read(None, "!%ss" % padding, "Padding (512 align)")
@@ -107,11 +107,11 @@
             text = "Tar File (terminator, empty header)"
         chunk.description = self.description = text
 
-class TarFilter(Filter):
+class TarFile(Filter):
     def __init__(self, stream):
-        Filter.__init__(self, "tar_archive", "Tar archive", stream)
+        Filter.__init__(self, "tar_file", "TAR archive file", stream)
 
-        self.readArray("files", TarFile, "Tar Files", self.checkEndOfChunks)
+        self.readArray("files", TarFileEntry, "Tar Files", self.checkEndOfChunks)
         
         padding = 4096 - stream.tell() % 4096
         self.read(None, "!%ss" % padding, "Padding (4096 align)")
@@ -123,4 +123,4 @@
             if file.isEmpty(): return True
         return stream.eof()
         
-registerPlugin("^.*\.tar$", "Tar archive", TarFilter, displayTar)
+registerPlugin("^.*\.tar$", "Tar archive", TarFile, displayTar)



From haypo at berlios.de  Sun Oct 30 15:24:43 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Sun, 30 Oct 2005 15:24:43 +0100
Subject: [Happyboom-svn] r237 - in haypo/hachoir: . plugins
Message-ID: <200510301424.j9UEOh8l000285@sheep.berlios.de>

Author: haypo
Date: 2005-10-30 15:24:43 +0100 (Sun, 30 Oct 2005)
New Revision: 237

Modified:
   haypo/hachoir/plugins/gif.py
   haypo/hachoir/stream.py
Log:
Fix GIF plugin (don't use get8 anymore).


Modified: haypo/hachoir/plugins/gif.py
===================================================================
--- haypo/hachoir/plugins/gif.py	2005-10-30 14:21:02 UTC (rev 236)
+++ haypo/hachoir/plugins/gif.py	2005-10-30 14:24:43 UTC (rev 237)
@@ -95,8 +95,8 @@
         self.bits_per_pixel = 1 + (self.flags & 0x7) # ok
         # -- End of TODO
         
-        self.background = stream.get8()
-        zero = stream.get8()
+        self.read("background", "<B", "Background color")
+        self.read(None, "<B", "Not used (zero)")
         
 class GifFile(Filter):
     def __init__(self, stream):

Modified: haypo/hachoir/stream.py
===================================================================
--- haypo/hachoir/stream.py	2005-10-30 14:21:02 UTC (rev 236)
+++ haypo/hachoir/stream.py	2005-10-30 14:24:43 UTC (rev 237)
@@ -24,12 +24,12 @@
     def search(self, str, size_max=None):
         return -1
 
-def StringStream(data, endian="!"):
+def StringStream(data):
     file = StringIO(data)
-    return FileStream(file, endian)
+    return FileStream(file)
 
 class LimitedFileStream(Stream):
-    def __init__(self, filename, start=0, size=0, endian="<"):
+    def __init__(self, filename, start=0, size=0):
         self.__stream = FileStream(filename)
         if start<0: start = 0
         if self.__stream.getSize() < start+size: size = self.__stream.getSize()-start
@@ -63,7 +63,7 @@
         return self.__end
     
 class FileStream(Stream):
-    def __init__(self, filename, endian="<"):
+    def __init__(self, filename):
         """
         Endian: See setEndian function. 
         """
@@ -74,7 +74,6 @@
         self.__file.seek(0,2) # Seek to end
         self.__size = self.__file.tell()
         self.__file.seek(0,0) # Seel to beginning
-        self.setEndian(endian)
 
     def seek(self, pos, where=0):
         """ Read file seek document to understand where. """
@@ -88,7 +87,6 @@
         """
         pos_max: Position of last tested byte
         """
-        # TODO: Use max ...
         if 2048<=len(binary_string):
             raise Exception("Search string too big.")
         size = 2048 
@@ -125,31 +123,6 @@
         self.seek(oldpos)
         return pos
 
-    def setEndian(self, endian):
-        """
-        Endian: "<" for little endian, ">" for big endian, "!" for network endian.
-        """
-
-        self.__endian = endian
-        self.__unpack8u = "B"
-        self.__unpack16u = "%sH" % self.__endian
-        self.__unpack32u = "%sI" % self.__endian
-
-    def get8(self):
-        data = self.__file.read(1)
-        data = struct.unpack(self.__unpack8u, data)
-        return data[0]
-
-    def get16(self):
-        data = self.__file.read(2)
-        data = struct.unpack(self.__unpack16u, data)
-        return data[0]
-
-    def get32(self):
-        data = self.__file.read(4)
-        data = struct.unpack(self.__unpack32u, data)
-        return data[0]
-
     def getN(self, size):
         data = self.__file.read(size)
         assert len(data) == size
@@ -161,7 +134,6 @@
         """
         
         data = self.__file.read()
-        # Do endian things
         return data
 
     def destroy(self):



From haypo at berlios.de  Mon Oct 31 03:25:08 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Mon, 31 Oct 2005 03:25:08 +0100
Subject: [Happyboom-svn] r238 - in haypo/hachoir: . plugins
Message-ID: <200510310225.j9V2P8GX016135@sheep.berlios.de>

Author: haypo
Date: 2005-10-31 03:25:04 +0100 (Mon, 31 Oct 2005)
New Revision: 238

Added:
   haypo/hachoir/default.py
   haypo/hachoir/format.py
   haypo/hachoir/ui_new_chunk.py
   haypo/hachoir/ui_popup.py
Modified:
   haypo/hachoir/chunk.py
   haypo/hachoir/filter.py
   haypo/hachoir/hachoir.glade
   haypo/hachoir/hachoir.py
   haypo/hachoir/plugins/gif.py
   haypo/hachoir/plugins/png.py
   haypo/hachoir/plugins/tar.py
   haypo/hachoir/stream.py
   haypo/hachoir/ui.py
Log:
New popup menu (right click) which allows to set chunk type and create new
chunk.


Modified: haypo/hachoir/chunk.py
===================================================================
--- haypo/hachoir/chunk.py	2005-10-30 14:24:43 UTC (rev 237)
+++ haypo/hachoir/chunk.py	2005-10-31 02:25:04 UTC (rev 238)
@@ -10,7 +10,11 @@
         self._size = size
         self._addr = addr
         self._parent = parent
+        self._stream = stream
 
+    def update(self):
+        raise Exception("Chunk of type %s doesn't implement the method update()!" % self.__class__)
+
     def __str__(self):
         return "Chunk(%s) <addr=%s, size=%s, id=%s, description=%s>" % \
             (self.__class__, self._addr, self.size, self.id, self.description)
@@ -18,16 +22,21 @@
     def getRawData(self, max_size=None):
         return None
         
+    def getStream(self):
+        return self._stream
+
     def getData(self, max_size=None):
         return None
 
     def getDisplayData(self):
         return self.getData()
 
+    def getParent(self): return self._parent
+    def _setAddr(self, addr): self._addr = addr
     def _getAddr(self): return self._addr
     def _getSize(self):
         return self._size
-    addr = property(_getAddr)        
+    addr = property(_getAddr, _setAddr)        
     size = property(_getSize)        
     
 class ArrayChunk(Chunk):
@@ -35,6 +44,28 @@
         Chunk.__init__(self, id, description, stream, stream.tell(), 0, parent)
         self._array = array
 
+    def update(self):
+        prev_chunk = None
+        pos = 0
+        try:
+            for chunk in self._array:
+                if prev_chunk != None:
+                    chunk.addr = prev_chunk.addr + prev_chunk.size
+                else:
+                    chunk.addr = self.addr
+                chunk.update()
+                prev_chunk = chunk
+                pos = pos + 1
+        except Exception, msg:
+            print "Exception while updating an array:\n%s" % msg
+            chunk = self._array[pos]
+            addr = chunk.addr
+            size = self._stream.getSize() - addr
+            del self._array[pos:]
+            if size != 0:
+                chunk = FormatChunk("raw", "Raw data", chunk.getStream(), addr, "!%us" % size, self)
+                self._array.append(chunk)
+
     def _getSize(self):
         size = 0
         for item in self._array:
@@ -52,7 +83,18 @@
     def __init__(self, id, description, stream, filter):
         Chunk.__init__(self, id, description, stream, filter.getAddr(), filter.getSize(), filter)
         self._filter = filter
+
+    def update(self):
+        filter_class = self._filter.__class__
+        stream = self._filter.getStream()
+        stream.seek(self.addr)
+        self._filter = filter_class(stream, self._filter.getParent())
+        self._filter.updateParent(self)
         
+    def _getSize(self):
+        return self._filter.getSize()
+    size = property(_getSize)        
+        
     def getDisplayData(self):
         return "(...)" 
         
@@ -70,18 +112,46 @@
         self.__format = format
         self.value = None
 
+    def update(self):
+        # Don't need to do anything
+        pass
+
     def _getSize(self):
-        return struct.calcsize(self._getRealFormat())
+        return struct.calcsize(self.getRealFormat())
     size = property(_getSize)        
 
-    def _getRealFormat(self):
+    def getRealFormat(self):
         return re.sub(r'\{([^}]+)\}', self.__replaceFieldFormat, self.__format)
 
     def getFormat(self): return self.__format
+    
+    def checkFormat(self, format):
+        m = re.compile("^[!<>]?([0-9]+|\{[a-z_]+\})?[BHLs]$").match(format)
+        return (m != None)
+        
+    def setFormat(self, format, method):
+        """ Method:
+        - split => create new raw array if chunk is smaller
+        - rescan => if size changed, rescan chunks"""
+        old_size = self.size
+        if not self.checkFormat(format):
+            print "Wrong format: \"%s\"!" % format
+            return
+        self.__format = format
+        new_size = self.size
+        diff_size = new_size - old_size
+        if diff_size != 0:
+            if method == "split" and diff_size < 0:
+                self._parent.addRawChunk(self, -diff_size)
+            else:
+                self._parent.rescan(self)
+        self._parent.redisplay()
 
     def isArray(self):
         if self.isString(): return False
-        return re.compile("^.?[0-9]+.*$").match(self.__format) != None
+        m = re.compile("^.?([0-9]+)[^0-9]+$").match(self.__format)
+        if m == None: return False
+        return m.group(1) != "1"
         
     def isString(self):
         return self.__format[-1] == "s"
@@ -103,7 +173,7 @@
     def getData(self, max_size=None):
         data, truncated = self.getRawData(max_size)
         if not truncated:
-            format = self._getRealFormat()
+            format = self.getRealFormat()
             data = struct.unpack(format, data)
             if not self.isArray():
                 data = data[0]
@@ -113,6 +183,8 @@
 #        if self.id == None: return "-"
         data = self.getData(20)
         if type(data)==types.StringType:
+            if len(data) == 0:
+                return "(empty)"
             display = ""
             for c in data:
                 if ord(c)<32:

Added: haypo/hachoir/default.py
===================================================================
--- haypo/hachoir/default.py	2005-10-30 14:24:43 UTC (rev 237)
+++ haypo/hachoir/default.py	2005-10-31 02:25:04 UTC (rev 238)
@@ -0,0 +1,10 @@
+from filter import Filter
+
+def displayDefault(data):
+    pass
+
+class DefaultFilter(Filter):
+    def __init__(self, stream):
+        Filter.__init__(self, "default", "Default filter", stream, None)
+        size = stream.getSize()
+        self.read("data", "!%us" % size, "Data", True)

Modified: haypo/hachoir/filter.py
===================================================================
--- haypo/hachoir/filter.py	2005-10-30 14:24:43 UTC (rev 237)
+++ haypo/hachoir/filter.py	2005-10-31 02:25:04 UTC (rev 238)
@@ -31,6 +31,58 @@
         self._chunks_dict = {}
         self._addr = self._stream.tell()
 
+    def getUniqChunkId(self, id):
+        if id not in self._chunks_dict: return id
+        m = re.compile("^(.*)([0-9]+)$").match(id)
+        if m != None:
+            root = m.group(1)
+            uniq = int(m.group(2))+1
+        else:
+            root = id
+            uniq = 2
+        new_id = "%s%u" % (root, uniq)
+        while new_id in self._chunks_dict:
+            uniq = uniq+1
+            new_id = "%s%u" % (root, uniq)
+        return new_id 
+
+    def addRawChunk(self, prev_chunk, size):
+        id = self.getUniqChunkId("raw")
+        addr = prev_chunk.addr + prev_chunk.size
+        chunk = FormatChunk(id, "Raw data", self.getStream(), addr, "!%us" % size, self)
+        chunk_pos = self._chunks.index(prev_chunk)+1
+        self._appendChunk(chunk, position=chunk_pos)
+
+    def rescan(self, from_chunk):
+        print "Rescan filter ..."
+        if from_chunk != None:
+            start = self._chunks.index(from_chunk)+1
+            prev_chunk = from_chunk
+        else:
+            start = 0
+            prev_chunk = None
+        pos = start
+        try:
+            for chunk in self._chunks[start:]:
+                # Update start address
+                if prev_chunk != None:
+                    print "New addr = %s + %s" % (prev_chunk.addr, prev_chunk.size) 
+                    chunk.addr = prev_chunk.addr + prev_chunk.size
+                else:
+                    chunk.addr = self.addr
+                print "Update chunk [addr=%s,id=%s]" % (chunk.addr, chunk.id)
+                chunk.update()
+                prev_chunk = chunk
+                pos = pos + 1
+        except Exception, msg:
+            print "Exception while updating a filter:\n%s" % msg
+            chunk = self._chunks[pos]
+            size = self._stream.getSize() - chunk.addr
+            del self._chunks[pos:]
+            if size != 0:
+                chunk = FormatChunk("raw", "Raw data", chunk.getStream(), chunk.addr, "!%us" % size, self)
+                self._appendChunk(chunk)
+
     def getAddr(self):
         return self._addr
 
@@ -40,11 +92,17 @@
             size = size + chunk.size
         return size
 
-    def updateParent(self, parent, chunk):
+    def updateParent(self, chunk):
         pass
 
     def getChunk(self, chunk_id):
-        return self._chunks_dict.get(chunk_id, None)
+        m = re.compile(r"^([^[]+)\[([0-9]+)\]$").match(chunk_id)
+        if m != None:
+            array = self._chunks_dict.get(m.group(1), None)
+            if array == None: return None
+            return array[int(m.group(2))]
+        else:
+            return self._chunks_dict.get(chunk_id, None)
 
     def displayChunk(self, chunk):
         type = chunk.__class__
@@ -54,6 +112,9 @@
             type = chunk.getFilter().id
         ui.ui.add_table(self.table_parent, chunk.addr, chunk.size, type, chunk.id, chunk.description, chunk.getDisplayData())
 
+    def redisplay(self):  
+        self.display()
+
     def display(self):  
         # Update parent button
         ui.ui.enableParentButton(self.getParent() != None)
@@ -104,8 +165,11 @@
         line = getattr(self, id)
         setattr(self, id, line[:-len(eol)])
 
-    def _appendChunk(self, chunk, can_truncate=False):
-        self._chunks.append(chunk)
+    def _appendChunk(self, chunk, can_truncate=False, position=None):
+        if position != None:
+            self._chunks.insert(position, chunk)
+        else:
+            self._chunks.append(chunk)
         id = chunk.id
         if id != None:
             m = re.compile(r"^([^[]+)\[\]$").match(id)
@@ -135,7 +199,7 @@
         filter = filter_class(self._stream, self)
         chunk = FilterChunk(id, filter.description, self._stream, filter)
         self._appendChunk(chunk)
-        filter.updateParent(self, chunk)
+        filter.updateParent(chunk)
         self._stream.seek(chunk.addr + chunk.size)
 
     def readArray(self, id, filter_class, description, end_func): 
@@ -154,7 +218,7 @@
             last_filter = filter
 
         for chunk in array:
-            chunk.getFilter().updateParent(self, chunk)
+            chunk.getFilter().updateParent(chunk)
         self._stream.seek(array_chunk.addr + array_chunk.size)
     
     def read(self, id, format, description, can_truncate=True):
@@ -178,4 +242,7 @@
     def getParent(self):
         return self._parent
 
+    def getStream(self):
+        return self._stream
+
 display_filter_actions = 1

Added: haypo/hachoir/format.py
===================================================================
--- haypo/hachoir/format.py	2005-10-30 14:24:43 UTC (rev 237)
+++ haypo/hachoir/format.py	2005-10-31 02:25:04 UTC (rev 238)
@@ -0,0 +1,15 @@
+import re
+
+def checkFormat(format):
+    m = re.compile("^[!<>]?(?:[0-9]+|\{[a-z_]+\})?[BHLs]$").match(format)
+    return m != None
+
+def splitFormat(format):
+    m = re.compile("^([!<>]?)((?:[0-9]+|\{[a-z_]+\})?)([BHLs])$").match(format)
+    if m == None: return None
+    endian = m.group(1)
+    if endian=="": endian="!"
+    size = m.group(2)
+#    if size == "": size = 1
+    type = m.group(3)
+    return (endian, size, type,)

Modified: haypo/hachoir/hachoir.glade
===================================================================
--- haypo/hachoir/hachoir.glade	2005-10-30 14:24:43 UTC (rev 237)
+++ haypo/hachoir/hachoir.glade	2005-10-31 02:25:04 UTC (rev 238)
@@ -166,64 +166,186 @@
   </child>
 </widget>
 
-<widget class="GtkWindow" id="about_window">
-  <property name="title" translatable="yes">About Hachoir</property>
+<widget class="GtkMenu" id="table_popup">
+
+  <child>
+    <widget class="GtkImageMenuItem" id="new_chunk">
+      <property name="visible">True</property>
+      <property name="label" translatable="yes">_New chunk</property>
+      <property name="use_underline">True</property>
+      <signal name="activate" handler="onNewChunk" last_modification_time="Sun, 30 Oct 2005 23:08:19 GMT"/>
+
+      <child internal-child="image">
+	<widget class="GtkImage" id="image3">
+	  <property name="visible">True</property>
+	  <property name="stock">gtk-cut</property>
+	  <property name="icon_size">1</property>
+	  <property name="xalign">0.5</property>
+	  <property name="yalign">0.5</property>
+	  <property name="xpad">0</property>
+	  <property name="ypad">0</property>
+	</widget>
+      </child>
+    </widget>
+  </child>
+
+  <child>
+    <widget class="GtkImageMenuItem" id="join_chunks">
+      <property name="visible">True</property>
+      <property name="label" translatable="yes">_Join chunks</property>
+      <property name="use_underline">True</property>
+      <signal name="activate" handler="onJoinChunks" last_modification_time="Sun, 30 Oct 2005 23:08:19 GMT"/>
+
+      <child internal-child="image">
+	<widget class="GtkImage" id="image4">
+	  <property name="visible">True</property>
+	  <property name="stock">gtk-go-up</property>
+	  <property name="icon_size">1</property>
+	  <property name="xalign">0.5</property>
+	  <property name="yalign">0.5</property>
+	  <property name="xpad">0</property>
+	  <property name="ypad">0</property>
+	</widget>
+      </child>
+    </widget>
+  </child>
+
+  <child>
+    <widget class="GtkImageMenuItem" id="set_chunk_format">
+      <property name="visible">True</property>
+      <property name="label" translatable="yes">Set chunk _format</property>
+      <property name="use_underline">True</property>
+      <signal name="activate" handler="onSetFormat" last_modification_time="Sun, 30 Oct 2005 23:27:49 GMT"/>
+
+      <child internal-child="image">
+	<widget class="GtkImage" id="image5">
+	  <property name="visible">True</property>
+	  <property name="stock">gtk-edit</property>
+	  <property name="icon_size">1</property>
+	  <property name="xalign">0.5</property>
+	  <property name="yalign">0.5</property>
+	  <property name="xpad">0</property>
+	  <property name="ypad">0</property>
+	</widget>
+      </child>
+    </widget>
+  </child>
+</widget>
+
+<widget class="GtkAboutDialog" id="about_dialog">
+  <property name="visible">True</property>
+  <property name="destroy_with_parent">True</property>
+  <property name="name" translatable="yes">Hachoir version 2005-10-30</property>
+  <property name="copyright" translatable="yes">Copyright 2005 Victor Stinner</property>
+  <property name="comments" translatable="yes">Split binary stream into chunks ...</property>
+  <property name="license" translatable="yes">Under GNU GPL licence</property>
+  <property name="website">http://www.haypocalc.com/wiki/Hachoir</property>
+  <property name="website_label" translatable="yes">Website</property>
+  <property name="authors">Victor Stinner &lt;victor.stinner AT haypocalc.com&gt;</property>
+  <property name="translator_credits" translatable="yes" comments="TRANSLATORS: Replace this string with your names, one name per line.">translator-credits</property>
+</widget>
+
+<widget class="GtkDialog" id="new_chunk">
+  <property name="visible">True</property>
+  <property name="title" translatable="yes">New chunk</property>
   <property name="type">GTK_WINDOW_TOPLEVEL</property>
   <property name="window_position">GTK_WIN_POS_NONE</property>
-  <property name="modal">True</property>
+  <property name="modal">False</property>
   <property name="resizable">True</property>
   <property name="destroy_with_parent">False</property>
   <property name="decorated">True</property>
   <property name="skip_taskbar_hint">False</property>
   <property name="skip_pager_hint">False</property>
-  <property name="type_hint">GDK_WINDOW_TYPE_HINT_NORMAL</property>
+  <property name="type_hint">GDK_WINDOW_TYPE_HINT_DIALOG</property>
   <property name="gravity">GDK_GRAVITY_NORTH_WEST</property>
   <property name="focus_on_map">True</property>
+  <property name="has_separator">True</property>
 
-  <child>
-    <widget class="GtkVBox" id="vbox3">
+  <child internal-child="vbox">
+    <widget class="GtkVBox" id="dialog-vbox1">
       <property name="visible">True</property>
       <property name="homogeneous">False</property>
       <property name="spacing">0</property>
 
-      <child>
-	<widget class="GtkNotebook" id="notebook1">
+      <child internal-child="action_area">
+	<widget class="GtkHButtonBox" id="dialog-action_area1">
 	  <property name="visible">True</property>
-	  <property name="can_focus">True</property>
-	  <property name="show_tabs">True</property>
-	  <property name="show_border">True</property>
-	  <property name="tab_pos">GTK_POS_TOP</property>
-	  <property name="scrollable">False</property>
-	  <property name="enable_popup">False</property>
+	  <property name="layout_style">GTK_BUTTONBOX_END</property>
 
 	  <child>
-	    <widget class="GtkLabel" id="label4">
+	    <widget class="GtkButton" id="cancelbutton1">
 	      <property name="visible">True</property>
-	      <property name="label" translatable="yes">Hachoir is a program of Victor Stinner, aka haypo.</property>
-	      <property name="use_underline">False</property>
-	      <property name="use_markup">False</property>
-	      <property name="justify">GTK_JUSTIFY_LEFT</property>
-	      <property name="wrap">False</property>
-	      <property name="selectable">False</property>
-	      <property name="xalign">0.5</property>
-	      <property name="yalign">0.5</property>
-	      <property name="xpad">10</property>
-	      <property name="ypad">10</property>
-	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
-	      <property name="width_chars">-1</property>
-	      <property name="single_line_mode">False</property>
-	      <property name="angle">0</property>
+	      <property name="can_default">True</property>
+	      <property name="can_focus">True</property>
+	      <property name="label">gtk-cancel</property>
+	      <property name="use_stock">True</property>
+	      <property name="relief">GTK_RELIEF_NORMAL</property>
+	      <property name="focus_on_click">True</property>
+	      <property name="response_id">-6</property>
+	      <signal name="released" handler="gtk_widget_hide" after="yes" last_modification_time="Mon, 31 Oct 2005 01:42:37 GMT"/>
 	    </widget>
-	    <packing>
-	      <property name="tab_expand">False</property>
-	      <property name="tab_fill">True</property>
-	    </packing>
 	  </child>
 
 	  <child>
-	    <widget class="GtkLabel" id="notebook_label1">
+	    <widget class="GtkButton" id="okbutton1">
 	      <property name="visible">True</property>
-	      <property name="label" translatable="yes">About</property>
+	      <property name="can_default">True</property>
+	      <property name="can_focus">True</property>
+	      <property name="label">gtk-ok</property>
+	      <property name="use_stock">True</property>
+	      <property name="relief">GTK_RELIEF_NORMAL</property>
+	      <property name="focus_on_click">True</property>
+	      <property name="response_id">-5</property>
+	      <signal name="released" handler="gtk_widget_hide" last_modification_time="Mon, 31 Oct 2005 01:42:47 GMT"/>
+	    </widget>
+	  </child>
+	</widget>
+	<packing>
+	  <property name="padding">0</property>
+	  <property name="expand">False</property>
+	  <property name="fill">True</property>
+	  <property name="pack_type">GTK_PACK_END</property>
+	</packing>
+      </child>
+
+      <child>
+	<widget class="GtkLabel" id="label">
+	  <property name="visible">True</property>
+	  <property name="label" translatable="yes">Choose new chunk format :</property>
+	  <property name="use_underline">False</property>
+	  <property name="use_markup">False</property>
+	  <property name="justify">GTK_JUSTIFY_LEFT</property>
+	  <property name="wrap">False</property>
+	  <property name="selectable">False</property>
+	  <property name="xalign">0.5</property>
+	  <property name="yalign">0.5</property>
+	  <property name="xpad">0</property>
+	  <property name="ypad">0</property>
+	  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	  <property name="width_chars">-1</property>
+	  <property name="single_line_mode">False</property>
+	  <property name="angle">0</property>
+	</widget>
+	<packing>
+	  <property name="padding">6</property>
+	  <property name="expand">False</property>
+	  <property name="fill">False</property>
+	</packing>
+      </child>
+
+      <child>
+	<widget class="GtkTable" id="table1">
+	  <property name="visible">True</property>
+	  <property name="n_rows">3</property>
+	  <property name="n_columns">2</property>
+	  <property name="homogeneous">False</property>
+	  <property name="row_spacing">6</property>
+	  <property name="column_spacing">6</property>
+
+	  <child>
+	    <widget class="GtkLabel" id="label4">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">Format:</property>
 	      <property name="use_underline">False</property>
 	      <property name="use_markup">False</property>
 	      <property name="justify">GTK_JUSTIFY_LEFT</property>
@@ -239,38 +361,39 @@
 	      <property name="angle">0</property>
 	    </widget>
 	    <packing>
-	      <property name="type">tab</property>
+	      <property name="left_attach">0</property>
+	      <property name="right_attach">1</property>
+	      <property name="top_attach">2</property>
+	      <property name="bottom_attach">3</property>
+	      <property name="x_options">fill</property>
+	      <property name="y_options"></property>
 	    </packing>
 	  </child>
 
 	  <child>
-	    <widget class="GtkLabel" id="label7">
+	    <widget class="GtkComboBoxEntry" id="format">
 	      <property name="visible">True</property>
-	      <property name="label" translatable="yes">This program is licenced under GNU GPL licence.</property>
-	      <property name="use_underline">False</property>
-	      <property name="use_markup">False</property>
-	      <property name="justify">GTK_JUSTIFY_LEFT</property>
-	      <property name="wrap">False</property>
-	      <property name="selectable">False</property>
-	      <property name="xalign">0.5</property>
-	      <property name="yalign">0.5</property>
-	      <property name="xpad">10</property>
-	      <property name="ypad">10</property>
-	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
-	      <property name="width_chars">-1</property>
-	      <property name="single_line_mode">False</property>
-	      <property name="angle">0</property>
+	      <property name="items" translatable="yes">s
+B
+L</property>
+	      <property name="add_tearoffs">False</property>
+	      <property name="has_frame">True</property>
+	      <property name="focus_on_click">True</property>
 	    </widget>
 	    <packing>
-	      <property name="tab_expand">False</property>
-	      <property name="tab_fill">True</property>
+	      <property name="left_attach">1</property>
+	      <property name="right_attach">2</property>
+	      <property name="top_attach">2</property>
+	      <property name="bottom_attach">3</property>
+	      <property name="x_options">fill</property>
+	      <property name="y_options">fill</property>
 	    </packing>
 	  </child>
 
 	  <child>
-	    <widget class="GtkLabel" id="notebook_label2">
+	    <widget class="GtkLabel" id="label5">
 	      <property name="visible">True</property>
-	      <property name="label" translatable="yes">Licence</property>
+	      <property name="label" translatable="yes">Endian:</property>
 	      <property name="use_underline">False</property>
 	      <property name="use_markup">False</property>
 	      <property name="justify">GTK_JUSTIFY_LEFT</property>
@@ -286,44 +409,45 @@
 	      <property name="angle">0</property>
 	    </widget>
 	    <packing>
-	      <property name="type">tab</property>
+	      <property name="left_attach">0</property>
+	      <property name="right_attach">1</property>
+	      <property name="top_attach">1</property>
+	      <property name="bottom_attach">2</property>
+	      <property name="x_options">fill</property>
+	      <property name="y_options"></property>
 	    </packing>
 	  </child>
 
 	  <child>
-	    <widget class="GtkLabel" id="label6">
+	    <widget class="GtkComboBoxEntry" id="endian">
 	      <property name="visible">True</property>
-	      <property name="label" translatable="yes">October 27, 2005: Creation of the program.</property>
-	      <property name="use_underline">False</property>
-	      <property name="use_markup">False</property>
-	      <property name="justify">GTK_JUSTIFY_LEFT</property>
-	      <property name="wrap">False</property>
-	      <property name="selectable">False</property>
-	      <property name="xalign">0.5</property>
-	      <property name="yalign">0.5</property>
-	      <property name="xpad">10</property>
-	      <property name="ypad">10</property>
-	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
-	      <property name="width_chars">-1</property>
-	      <property name="single_line_mode">False</property>
-	      <property name="angle">0</property>
+	      <property name="items" translatable="yes">!
+&lt;
+&gt;</property>
+	      <property name="add_tearoffs">False</property>
+	      <property name="has_frame">True</property>
+	      <property name="focus_on_click">True</property>
 	    </widget>
 	    <packing>
-	      <property name="tab_expand">False</property>
-	      <property name="tab_fill">True</property>
+	      <property name="left_attach">1</property>
+	      <property name="right_attach">2</property>
+	      <property name="top_attach">1</property>
+	      <property name="bottom_attach">2</property>
+	      <property name="x_options">fill</property>
+	      <property name="y_options">fill</property>
 	    </packing>
 	  </child>
 
 	  <child>
-	    <widget class="GtkLabel" id="label3">
+	    <widget class="GtkLabel" id="label6">
 	      <property name="visible">True</property>
-	      <property name="label" translatable="yes">History</property>
+	      <property name="label" translatable="yes">Size:</property>
 	      <property name="use_underline">False</property>
 	      <property name="use_markup">False</property>
 	      <property name="justify">GTK_JUSTIFY_LEFT</property>
 	      <property name="wrap">False</property>
 	      <property name="selectable">False</property>
-	      <property name="xalign">0.5</property>
+	      <property name="xalign">0</property>
 	      <property name="yalign">0.5</property>
 	      <property name="xpad">0</property>
 	      <property name="ypad">0</property>
@@ -333,32 +457,42 @@
 	      <property name="angle">0</property>
 	    </widget>
 	    <packing>
-	      <property name="type">tab</property>
+	      <property name="left_attach">0</property>
+	      <property name="right_attach">1</property>
+	      <property name="top_attach">0</property>
+	      <property name="bottom_attach">1</property>
+	      <property name="x_options">fill</property>
+	      <property name="y_options"></property>
 	    </packing>
 	  </child>
+
+	  <child>
+	    <widget class="GtkEntry" id="size">
+	      <property name="visible">True</property>
+	      <property name="can_focus">True</property>
+	      <property name="editable">True</property>
+	      <property name="visibility">True</property>
+	      <property name="max_length">0</property>
+	      <property name="text" translatable="yes"></property>
+	      <property name="has_frame">True</property>
+	      <property name="invisible_char">*</property>
+	      <property name="activates_default">False</property>
+	    </widget>
+	    <packing>
+	      <property name="left_attach">1</property>
+	      <property name="right_attach">2</property>
+	      <property name="top_attach">0</property>
+	      <property name="bottom_attach">1</property>
+	      <property name="y_options"></property>
+	    </packing>
+	  </child>
 	</widget>
 	<packing>
-	  <property name="padding">0</property>
+	  <property name="padding">6</property>
 	  <property name="expand">True</property>
 	  <property name="fill">True</property>
 	</packing>
       </child>
-
-      <child>
-	<widget class="GtkButton" id="button_close">
-	  <property name="visible">True</property>
-	  <property name="can_focus">True</property>
-	  <property name="label" translatable="yes">Close</property>
-	  <property name="use_underline">True</property>
-	  <property name="relief">GTK_RELIEF_NORMAL</property>
-	  <property name="focus_on_click">True</property>
-	</widget>
-	<packing>
-	  <property name="padding">0</property>
-	  <property name="expand">False</property>
-	  <property name="fill">False</property>
-	</packing>
-      </child>
     </widget>
   </child>
 </widget>

Modified: haypo/hachoir/hachoir.py
===================================================================
--- haypo/hachoir/hachoir.py	2005-10-30 14:24:43 UTC (rev 237)
+++ haypo/hachoir/hachoir.py	2005-10-31 02:25:04 UTC (rev 238)
@@ -14,6 +14,7 @@
 from stream import FileStream
 from plugin import getPlugin
 from chunk import FilterChunk
+from default import DefaultFilter, displayDefault
 
 def usage(defval):
     print "%s version %s" % (PROGRAM, VERSION)
@@ -71,12 +72,7 @@
         
     def onRowClick(self, chunk_id):
         if chunk_id == None: return
-        m = re.compile(r"^([^[]+)\[([0-9]+)\]$").match(chunk_id)
-        if m != None:
-            array = self.filter.getChunk(m.group(1))
-            chunk = array[int(m.group(2))]
-        else:
-            chunk = self.filter.getChunk(chunk_id)
+        chunk = self.filter.getChunk(chunk_id)
         if issubclass(chunk.__class__, FilterChunk):
             self.filter = chunk.getFilter()
             self.filter.display()
@@ -86,9 +82,9 @@
         # Look for a plugin
         plugin = getPlugin(filename)
         if plugin == None:
-            print "No suitable plugin for \"%s\"." % (filename)
-            return False
-        regex, plugin_name, split_func, display_func = plugin
+            regex, plugin_name, split_func, display_func = None, "default", DefaultFilter, displayDefault 
+        else:
+            regex, plugin_name, split_func, display_func = plugin
         if self.verbose:
             print "Split file \"%s\": %s." % (filename, plugin_name)
         
@@ -108,6 +104,7 @@
         if self.display:
             print "=== File %s data ===" % filename
             display_func(self.filter)
+
         return True
 
 def main():

Modified: haypo/hachoir/plugins/gif.py
===================================================================
--- haypo/hachoir/plugins/gif.py	2005-10-30 14:24:43 UTC (rev 237)
+++ haypo/hachoir/plugins/gif.py	2005-10-31 02:25:04 UTC (rev 238)
@@ -57,7 +57,8 @@
             self._nb_colors = (1 << parent.bits_per_pixel)
         else:
             assert issubclass(parent.__class__, GifFile)
-            self._nb_colors = (1 << parent.screen.bits_per_pixel)
+            screen = parent.getChunk("screen").getFilter()
+            self._nb_colors = (1 << screen.bits_per_pixel)
         self.readArray("map", GifColor, "Color map", self.checkEndOfMap)
 
     def checkEndOfMap(self, stream, array, color):

Modified: haypo/hachoir/plugins/png.py
===================================================================
--- haypo/hachoir/plugins/png.py	2005-10-30 14:24:43 UTC (rev 237)
+++ haypo/hachoir/plugins/png.py	2005-10-31 02:25:04 UTC (rev 238)
@@ -90,7 +90,7 @@
             (self.year, self.month, self.day,
              self.hour, self.minute, self.second)
 
-class PngFilter(Filter):
+class PngFile(Filter):
     """
     Split a PNG file into chunks.
     """
@@ -125,11 +125,11 @@
             self.read(None, "!{size}s", "Chunk data")
         self.read("crc32", "!L", "Chunk CRC32")
 
-    def updateParent(self, parent, chunk):
+    def updateParent(self, chunk):
         self.description = "PNG chunk (type %s)" % self.type
         chunk.description = "PNG chunk (type %s)" % self.type
 
     def __str__(self):
         return "PngChunk <size=%u, type=%s>" % (self.size, self.type)
 
-registerPlugin("^.*\.(PNG|png)$", "PNG picture", PngFilter, displayPng)
+registerPlugin("^.*\.(PNG|png)$", "PNG picture", PngFile, displayPng)

Modified: haypo/hachoir/plugins/tar.py
===================================================================
--- haypo/hachoir/plugins/tar.py	2005-10-30 14:24:43 UTC (rev 237)
+++ haypo/hachoir/plugins/tar.py	2005-10-31 02:25:04 UTC (rev 238)
@@ -100,7 +100,7 @@
         if self.type not in name: return "Unknow type (%02X)" % ord(self.type)
         return name[self.type]
 
-    def updateParent(self, parent, chunk):
+    def updateParent(self, chunk):
         if not self.isEmpty():
             text = "Tar File (%s: %s)" % (self.name, self.getType())
         else:

Modified: haypo/hachoir/stream.py
===================================================================
--- haypo/hachoir/stream.py	2005-10-30 14:24:43 UTC (rev 237)
+++ haypo/hachoir/stream.py	2005-10-31 02:25:04 UTC (rev 238)
@@ -78,7 +78,8 @@
     def seek(self, pos, where=0):
         """ Read file seek document to understand where. """
         self.__file.seek(pos, where)
-        assert self.tell() <= self.__size
+        if self.__size < self.tell():
+            raise Exception("Error when seek to (%s,%s) in a stream." % (pos, where))
 
     def tell(self):
         return self.__file.tell()
@@ -125,7 +126,8 @@
 
     def getN(self, size):
         data = self.__file.read(size)
-        assert len(data) == size
+        if len(data) != size:
+            raise Exception("Can't read %u bytes in a stream (get %u bytes)." % (size, len(data)))
         return data
 
     def getEnd(self):

Modified: haypo/hachoir/ui.py
===================================================================
--- haypo/hachoir/ui.py	2005-10-30 14:24:43 UTC (rev 237)
+++ haypo/hachoir/ui.py	2005-10-31 02:25:04 UTC (rev 238)
@@ -3,6 +3,7 @@
 pygtk.require ('2.0')
 import gtk
 import gtk.glade
+from ui_popup import TablePopup
 
 def loadInterface(hachoir):
     global ui 
@@ -11,22 +12,31 @@
 
 class GladeInterface:
     def __init__(self, filename, hachoir):
+        self.hachoir = hachoir
+        self.glade_xml = filename
         self.on_row_click = None # event(chunk_id)
         self.on_go_parent = None # event(chunk_id)
-        self.xml = gtk.glade.XML(filename)
-        self.xml.signal_autoconnect(self)
-        self.window = self.xml.get_widget('window')
-        self.about_window = self.xml.get_widget('about_window')
-        self.statusbar = self.xml.get_widget('statusbar')
-        self.toolbar = self.xml.get_widget('toolbar')
-        self.toolbutton_parent = self.xml.get_widget('toolbutton_parent')
-        self.statusbar_state = self.statusbar.get_context_id("State")
-        self.window.connect("key-press-event", self.onKeyUp)
-        self.table = self.xml.get_widget('table')
-        self.table_store = None
-        self.hachoir = hachoir
-        self.build_him()
+        self.about_dialog = None
+        self.build_ui()
 
+    def getTableChunk(self, col):
+        chunk_id = self.table_store[col][3]
+        if chunk_id == None: return None
+        return self.hachoir.filter.getChunk(chunk_id)
+
+    def on_treeview_button_press_event(self, treeview, event):
+        if event.button == 3:
+            x = int(event.x)
+            y = int(event.y)
+            time = event.time
+            pthinfo = treeview.get_path_at_pos(x, y)
+            if pthinfo != None:
+                path, col, cellx, celly = pthinfo
+                treeview.grab_focus()
+                treeview.set_cursor( path, col, 0)
+                self.table_popup.show(pthinfo, event)
+            return 1
+
     def run(self):
         try:
             gtk.main()
@@ -46,13 +56,28 @@
         row = self.table_store[iter]
         row[column] = value
        
-    def add_table_child(self, parent, addr, size, type, id, description):
-        return self.table_store.append(parent, ("%08X" % addr, type, size, None, id, description, None,))
+    def add_table_child(self, parent, addr, size, format, id, description):
+        return self.table_store.append(parent, (addr, format, size, None, id, description, None,))
        
-    def add_table(self, parent, addr, size, type, id, description, value):
-        self.table_store.append(parent, ("%08X" % addr, type, size, id, value, description, ))
+    def add_table(self, parent, addr, size, format, id, description, value):
+        self.table_store.append(parent, (addr, format, size, id, value, description, ))
        
-    def build_him(self):
+    def load_window (self):
+        xml = gtk.glade.XML(self.glade_xml, "window")
+        self.window = xml.get_widget('window')
+        self.statusbar = xml.get_widget('statusbar')
+        self.toolbar = xml.get_widget('toolbar')
+        self.toolbutton_parent = xml.get_widget('toolbutton_parent')
+        self.statusbar_state = self.statusbar.get_context_id("State")
+        self.table = xml.get_widget('table')
+        self.table_store = None
+        xml.signal_autoconnect(self)
+        
+    def build_ui(self):
+        self.load_window()
+        self.table_popup = TablePopup(self, self.glade_xml)
+        self.window.connect("key-press-event", self.onKeyUp)
+        self.table.connect("button_press_event", self.on_treeview_button_press_event)
         self.window.set_size_request(760,300)
         self.build_table()
 
@@ -69,7 +94,7 @@
         self.table.set_model(self.table_store)
         self.table.connect("row-activated", self.onTableClicked)
         self.treeview_add_column(self.table, "Address", 0)
-        self.treeview_add_column(self.table, "Type", 1)
+        self.treeview_add_column(self.table, "Format", 1)
         self.treeview_add_column(self.table, "Size", 2)
         self.treeview_add_column(self.table, "Name", 3)
         self.treeview_add_column(self.table, "Value", 4)
@@ -101,8 +126,10 @@
         chooser.destroy()
 
     def on_about_activate(self, widget):
-        print "About (do nothing yet)"
-        self.about_window.show()
+        if self.about_dialog == None:
+            self.about_xml = gtk.glade.XML(self.glade_xml, "about_dialog")
+            self.about_dialog = self.about_xml.get_widget('about_dialog')
+        self.about_dialog.show()
 
     def on_quit_activate(self, widget):
         self.quit()

Added: haypo/hachoir/ui_new_chunk.py
===================================================================
--- haypo/hachoir/ui_new_chunk.py	2005-10-30 14:24:43 UTC (rev 237)
+++ haypo/hachoir/ui_new_chunk.py	2005-10-31 02:25:04 UTC (rev 238)
@@ -0,0 +1,45 @@
+import pygtk
+pygtk.require ('2.0')
+import gtk
+import gtk.glade
+from format import splitFormat
+
+class NewChunkDialog:
+    def __init__(self, filename):
+        xml = gtk.glade.XML(filename, "new_chunk")
+        self.window = xml.get_widget('new_chunk')
+        self.window.hide()
+        xml.signal_autoconnect(self)
+        self.label_widget = xml.get_widget("label")
+        self.size_widget = xml.get_widget("size")
+        self.endian_widget = xml.get_widget("endian")
+        self.format_widget = xml.get_widget("format")
+        self.response = gtk.RESPONSE_CANCEL
+
+    def getFormat(self):
+        size = self.size_widget.get_text()
+        endian = self.endian_widget.child.get_text()
+        type = self.format_widget.child.get_text()
+        return "%s%s%s" % (endian, size, type)
+
+    def runNewChunk(self):
+        # TODO: i18n the text
+        self.window.set_title("New chunk")
+        self.label_widget.set_text("Choose a chunk format for the new chunk:")
+        r = self.window.run()
+        self.window.hide()
+        return r
+
+    def runSetFormat(self, chunk):
+        # TODO: i18n the text
+        self.window.set_title("Set chunk format")
+        self.label_widget.set_text("Set chunk %s format to:" % chunk.id)
+        format = chunk.getFormat()
+        split = splitFormat(format)
+        if split != None:
+            self.size_widget.set_text(split[1])
+            self.endian_widget.child.set_text(split[0])
+            self.format_widget.child.set_text(split[2])
+        r = self.window.run()
+        self.window.hide()
+        return r

Added: haypo/hachoir/ui_popup.py
===================================================================
--- haypo/hachoir/ui_popup.py	2005-10-30 14:24:43 UTC (rev 237)
+++ haypo/hachoir/ui_popup.py	2005-10-31 02:25:04 UTC (rev 238)
@@ -0,0 +1,40 @@
+import pygtk
+pygtk.require ('2.0')
+import gtk
+import gtk.glade
+from chunk import FormatChunk
+from ui_new_chunk import NewChunkDialog
+
+class TablePopup:
+    def __init__(self, ui, filename):
+        self.ui = ui
+        xml = gtk.glade.XML(filename, "table_popup")
+        self.popup = xml.get_widget('table_popup')
+        xml.signal_autoconnect(self)
+        self.chunk = None
+        self.new_chunk = NewChunkDialog(self.ui.glade_xml)
+
+    def show(self, path_info, event):
+        col = path_info[0][0]
+        self.chunk = self.ui.getTableChunk(col)
+        if self.chunk == None:
+            print "Can't get chunk"
+            return
+        self.popup.popup( None, None, None, event.button, event.time)
+
+    def onNewChunk(self, event):
+        if self.new_chunk.runNewChunk() == gtk.RESPONSE_CANCEL: return
+        assert issubclass(self.chunk.__class__, FormatChunk) and self.chunk.isString()
+        format = self.new_chunk.getFormat()
+        self.chunk.setFormat(format, "split")
+
+    def onSetFormat(self, event):
+        if issubclass(self.chunk.__class__, FormatChunk):
+            if self.new_chunk.runSetFormat(self.chunk) == gtk.RESPONSE_CANCEL: return
+            format = self.new_chunk.getFormat()
+            self.chunk.setFormat(format, "rescan")
+        else:
+            print "Can't set format of chunk of type %s" % self.chunk.__class__
+
+    def onJoinChunks(self, event):
+        print "join chunk"



From haypo at berlios.de  Mon Oct 31 05:28:07 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Mon, 31 Oct 2005 05:28:07 +0100
Subject: [Happyboom-svn] r239 - haypo/hachoir
Message-ID: <200510310428.j9V4S7Tk010745@sheep.berlios.de>

Author: haypo
Date: 2005-10-31 05:28:04 +0100 (Mon, 31 Oct 2005)
New Revision: 239

Added:
   haypo/hachoir/hachoir_class.py
   haypo/hachoir/program.py
   haypo/hachoir/user_filter.py
Modified:
   haypo/hachoir/chunk.py
   haypo/hachoir/filter.py
   haypo/hachoir/format.py
   haypo/hachoir/hachoir.glade
   haypo/hachoir/hachoir.py
   haypo/hachoir/ui_new_chunk.py
   haypo/hachoir/ui_popup.py
Log:
Create classes to store/load filter into/from XML file.


Modified: haypo/hachoir/chunk.py
===================================================================
--- haypo/hachoir/chunk.py	2005-10-31 02:25:04 UTC (rev 238)
+++ haypo/hachoir/chunk.py	2005-10-31 04:28:04 UTC (rev 239)
@@ -5,7 +5,7 @@
 
 class Chunk(object):
     def __init__(self, id, description, stream, addr, size, parent):
-        self.id = id
+        self._id = id
         self.description = description
         self._size = size
         self._addr = addr
@@ -17,7 +17,7 @@
 
     def __str__(self):
         return "Chunk(%s) <addr=%s, size=%s, id=%s, description=%s>" % \
-            (self.__class__, self._addr, self.size, self.id, self.description)
+            (self.__class__, self._addr, self.size, self._id, self.description)
         
     def getRawData(self, max_size=None):
         return None
@@ -34,10 +34,17 @@
     def getParent(self): return self._parent
     def _setAddr(self, addr): self._addr = addr
     def _getAddr(self): return self._addr
-    def _getSize(self):
-        return self._size
+    def _getSize(self): return self._size
+    def _getId(self): return self._id
+    def _setId(self, id):
+        print "Set id to %s" % id
+        if not self._parent.updateChunkId(self, id):
+            print "Can't set chunk identifier to \"%s\" (maybe already used)." % id
+            return
+        self._id = id
     addr = property(_getAddr, _setAddr)        
     size = property(_getSize)        
+    id = property(_getId, _setId)
     
 class ArrayChunk(Chunk):
     def __init__(self, id, description, stream, array, parent):
@@ -129,7 +136,7 @@
         m = re.compile("^[!<>]?([0-9]+|\{[a-z_]+\})?[BHLs]$").match(format)
         return (m != None)
         
-    def setFormat(self, format, method):
+    def setFormat(self, format, method, new_id=None, new_description=None):
         """ Method:
         - split => create new raw array if chunk is smaller
         - rescan => if size changed, rescan chunks"""
@@ -142,7 +149,7 @@
         diff_size = new_size - old_size
         if diff_size != 0:
             if method == "split" and diff_size < 0:
-                self._parent.addRawChunk(self, -diff_size)
+                self._parent.addRawChunk(self, new_id, -diff_size, new_description)
             else:
                 self._parent.rescan(self)
         self._parent.redisplay()

Modified: haypo/hachoir/filter.py
===================================================================
--- haypo/hachoir/filter.py	2005-10-31 02:25:04 UTC (rev 238)
+++ haypo/hachoir/filter.py	2005-10-31 04:28:04 UTC (rev 239)
@@ -31,6 +31,9 @@
         self._chunks_dict = {}
         self._addr = self._stream.tell()
 
+    def getChunks(self):
+        return self._chunks
+
     def getUniqChunkId(self, id):
         if id not in self._chunks_dict: return id
         m = re.compile("^(.*)([0-9]+)$").match(id)
@@ -46,10 +49,16 @@
             new_id = "%s%u" % (root, uniq)
         return new_id 
 
-    def addRawChunk(self, prev_chunk, size):
-        id = self.getUniqChunkId("raw")
+    def updateChunkId(self, chunk, new_id):
+        if new_id in self._chunks_dict: return False
+        del self._chunks_dict[chunk.id]
+        self._chunks_dict[new_id] = chunk
+        return True
+        
+    def addRawChunk(self, prev_chunk, id, size, description):
+        id = self.getUniqChunkId(id)
         addr = prev_chunk.addr + prev_chunk.size
-        chunk = FormatChunk(id, "Raw data", self.getStream(), addr, "!%us" % size, self)
+        chunk = FormatChunk(id, description, self.getStream(), addr, "!%us" % size, self)
         chunk_pos = self._chunks.index(prev_chunk)+1
         self._appendChunk(chunk, position=chunk_pos)
 
@@ -223,12 +232,7 @@
     
     def read(self, id, format, description, can_truncate=True):
         """ Returns chunk """
-#        if self.depth <= display_filter_actions and 0<size:
-#            chunk_data.output(self.indent)
-#        if can_truncate:
-#            data = chunk_data.getData(60)
-#        else:
-#            data = chunk_data.getData(None)
+#        print "* Read chunk %s: format %s" % (id, format)
         chunk = FormatChunk(id, description, self._stream, self._stream.tell(), format, self)
         self._stream.seek(chunk.size, 1)
         self._appendChunk(chunk, can_truncate)
@@ -244,5 +248,3 @@
 
     def getStream(self):
         return self._stream
-
-display_filter_actions = 1

Modified: haypo/hachoir/format.py
===================================================================
--- haypo/hachoir/format.py	2005-10-31 02:25:04 UTC (rev 238)
+++ haypo/hachoir/format.py	2005-10-31 04:28:04 UTC (rev 239)
@@ -10,6 +10,5 @@
     endian = m.group(1)
     if endian=="": endian="!"
     size = m.group(2)
-#    if size == "": size = 1
     type = m.group(3)
     return (endian, size, type,)

Modified: haypo/hachoir/hachoir.glade
===================================================================
--- haypo/hachoir/hachoir.glade	2005-10-31 02:25:04 UTC (rev 238)
+++ haypo/hachoir/hachoir.glade	2005-10-31 04:28:04 UTC (rev 239)
@@ -336,7 +336,7 @@
       <child>
 	<widget class="GtkTable" id="table1">
 	  <property name="visible">True</property>
-	  <property name="n_rows">3</property>
+	  <property name="n_rows">5</property>
 	  <property name="n_columns">2</property>
 	  <property name="homogeneous">False</property>
 	  <property name="row_spacing">6</property>
@@ -375,6 +375,7 @@
 	      <property name="visible">True</property>
 	      <property name="items" translatable="yes">s
 B
+S
 L</property>
 	      <property name="add_tearoffs">False</property>
 	      <property name="has_frame">True</property>
@@ -391,6 +392,55 @@
 	  </child>
 
 	  <child>
+	    <widget class="GtkLabel" id="label6">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">Size:</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">False</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">False</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">0</property>
+	      <property name="ypad">0</property>
+	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	      <property name="width_chars">-1</property>
+	      <property name="single_line_mode">False</property>
+	      <property name="angle">0</property>
+	    </widget>
+	    <packing>
+	      <property name="left_attach">0</property>
+	      <property name="right_attach">1</property>
+	      <property name="top_attach">1</property>
+	      <property name="bottom_attach">2</property>
+	      <property name="x_options">fill</property>
+	      <property name="y_options"></property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkEntry" id="size">
+	      <property name="visible">True</property>
+	      <property name="can_focus">True</property>
+	      <property name="editable">True</property>
+	      <property name="visibility">True</property>
+	      <property name="max_length">0</property>
+	      <property name="text" translatable="yes"></property>
+	      <property name="has_frame">True</property>
+	      <property name="invisible_char">*</property>
+	      <property name="activates_default">False</property>
+	    </widget>
+	    <packing>
+	      <property name="left_attach">1</property>
+	      <property name="right_attach">2</property>
+	      <property name="top_attach">1</property>
+	      <property name="bottom_attach">2</property>
+	      <property name="y_options"></property>
+	    </packing>
+	  </child>
+
+	  <child>
 	    <widget class="GtkLabel" id="label5">
 	      <property name="visible">True</property>
 	      <property name="label" translatable="yes">Endian:</property>
@@ -411,8 +461,8 @@
 	    <packing>
 	      <property name="left_attach">0</property>
 	      <property name="right_attach">1</property>
-	      <property name="top_attach">1</property>
-	      <property name="bottom_attach">2</property>
+	      <property name="top_attach">0</property>
+	      <property name="bottom_attach">1</property>
 	      <property name="x_options">fill</property>
 	      <property name="y_options"></property>
 	    </packing>
@@ -431,17 +481,17 @@
 	    <packing>
 	      <property name="left_attach">1</property>
 	      <property name="right_attach">2</property>
-	      <property name="top_attach">1</property>
-	      <property name="bottom_attach">2</property>
+	      <property name="top_attach">0</property>
+	      <property name="bottom_attach">1</property>
 	      <property name="x_options">fill</property>
 	      <property name="y_options">fill</property>
 	    </packing>
 	  </child>
 
 	  <child>
-	    <widget class="GtkLabel" id="label6">
+	    <widget class="GtkLabel" id="label7">
 	      <property name="visible">True</property>
-	      <property name="label" translatable="yes">Size:</property>
+	      <property name="label" translatable="yes">Id:</property>
 	      <property name="use_underline">False</property>
 	      <property name="use_markup">False</property>
 	      <property name="justify">GTK_JUSTIFY_LEFT</property>
@@ -459,16 +509,44 @@
 	    <packing>
 	      <property name="left_attach">0</property>
 	      <property name="right_attach">1</property>
-	      <property name="top_attach">0</property>
-	      <property name="bottom_attach">1</property>
+	      <property name="top_attach">3</property>
+	      <property name="bottom_attach">4</property>
 	      <property name="x_options">fill</property>
 	      <property name="y_options"></property>
 	    </packing>
 	  </child>
 
 	  <child>
-	    <widget class="GtkEntry" id="size">
+	    <widget class="GtkLabel" id="label8">
 	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">Desc.:</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">False</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">False</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">0</property>
+	      <property name="ypad">0</property>
+	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	      <property name="width_chars">-1</property>
+	      <property name="single_line_mode">False</property>
+	      <property name="angle">0</property>
+	    </widget>
+	    <packing>
+	      <property name="left_attach">0</property>
+	      <property name="right_attach">1</property>
+	      <property name="top_attach">4</property>
+	      <property name="bottom_attach">5</property>
+	      <property name="x_options">fill</property>
+	      <property name="y_options"></property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkEntry" id="identifier">
+	      <property name="visible">True</property>
 	      <property name="can_focus">True</property>
 	      <property name="editable">True</property>
 	      <property name="visibility">True</property>
@@ -481,11 +559,32 @@
 	    <packing>
 	      <property name="left_attach">1</property>
 	      <property name="right_attach">2</property>
-	      <property name="top_attach">0</property>
-	      <property name="bottom_attach">1</property>
+	      <property name="top_attach">3</property>
+	      <property name="bottom_attach">4</property>
 	      <property name="y_options"></property>
 	    </packing>
 	  </child>
+
+	  <child>
+	    <widget class="GtkEntry" id="description">
+	      <property name="visible">True</property>
+	      <property name="can_focus">True</property>
+	      <property name="editable">True</property>
+	      <property name="visibility">True</property>
+	      <property name="max_length">0</property>
+	      <property name="text" translatable="yes"></property>
+	      <property name="has_frame">True</property>
+	      <property name="invisible_char">*</property>
+	      <property name="activates_default">False</property>
+	    </widget>
+	    <packing>
+	      <property name="left_attach">1</property>
+	      <property name="right_attach">2</property>
+	      <property name="top_attach">4</property>
+	      <property name="bottom_attach">5</property>
+	      <property name="y_options"></property>
+	    </packing>
+	  </child>
 	</widget>
 	<packing>
 	  <property name="padding">6</property>

Modified: haypo/hachoir/hachoir.py
===================================================================
--- haypo/hachoir/hachoir.py	2005-10-31 02:25:04 UTC (rev 238)
+++ haypo/hachoir/hachoir.py	2005-10-31 04:28:04 UTC (rev 239)
@@ -7,14 +7,9 @@
 Author: Victor Stinner
 """
 
-PROGRAM="Hachoir"
-VERSION="2005-10-27"
-
 import sys, os, re, traceback
-from stream import FileStream
-from plugin import getPlugin
-from chunk import FilterChunk
-from default import DefaultFilter, displayDefault
+from hachoir_class import Hachoir
+from program import PROGRAM, VERSION
 
 def usage(defval):
     print "%s version %s" % (PROGRAM, VERSION)
@@ -59,54 +54,6 @@
             val["verbose"] = True
     return (val, args[0],)
 
-class Hachoir:
-    def __init__(self):
-        self.verbose = False
-        self.display = True
-        self.depth = 5
-
-    def onGoParent(self):
-        if self.filter.getParent() == None: return
-        self.filter = self.filter.getParent()
-        self.filter.display()
-        
-    def onRowClick(self, chunk_id):
-        if chunk_id == None: return
-        chunk = self.filter.getChunk(chunk_id)
-        if issubclass(chunk.__class__, FilterChunk):
-            self.filter = chunk.getFilter()
-            self.filter.display()
-
-    def run(self, filename):
-        import filter
-        # Look for a plugin
-        plugin = getPlugin(filename)
-        if plugin == None:
-            regex, plugin_name, split_func, display_func = None, "default", DefaultFilter, displayDefault 
-        else:
-            regex, plugin_name, split_func, display_func = plugin
-        if self.verbose:
-            print "Split file \"%s\": %s." % (filename, plugin_name)
-        
-        # Create stream
-        stream = FileStream(filename)
-
-        # Split 
-        filter.display_filter_actions = self.depth
-        if 0 < self.depth:
-            print "=== Split file %s ===" % filename
-        self.filter = split_func(stream)
-        if 0 < self.depth:
-            print ""
-        self.filter.display()
-
-        # Display
-        if self.display:
-            print "=== File %s data ===" % filename
-            display_func(self.filter)
-
-        return True
-
 def main():
     try:        
         import imp
@@ -147,9 +94,7 @@
         ui.loadInterface(hachoir)
         ui.ui.on_row_click = hachoir.onRowClick
         ui.ui.on_go_parent = hachoir.onGoParent
-        ok = hachoir.run(filename)
-        if not ok:
-            sys.exit(1)
+        hachoir.run(filename)
         ui.ui.run()
 
     except SystemExit:

Added: haypo/hachoir/hachoir_class.py
===================================================================
--- haypo/hachoir/hachoir_class.py	2005-10-31 02:25:04 UTC (rev 238)
+++ haypo/hachoir/hachoir_class.py	2005-10-31 04:28:04 UTC (rev 239)
@@ -0,0 +1,57 @@
+from stream import FileStream
+from plugin import getPlugin
+from chunk import FilterChunk
+from default import DefaultFilter, displayDefault
+from user_filter import UserFilterDescriptor, UserFilter
+from xml.dom.ext import PrettyPrint
+
+class Hachoir:
+    def __init__(self):
+        self.verbose = False
+        self.display = True
+        self.depth = 5
+
+    def onGoParent(self):
+        if self.filter.getParent() == None: return
+        self.filter = self.filter.getParent()
+        self.filter.display()
+        
+    def onRowClick(self, chunk_id):
+        if chunk_id == None: return
+        chunk = self.filter.getChunk(chunk_id)
+        if issubclass(chunk.__class__, FilterChunk):
+            self.filter = chunk.getFilter()
+            self.filter.display()
+
+    def loadUser(self, xml_filename, stream):
+        user = UserFilterDescriptor(xml_file=xml_filename)
+        self.filter = UserFilter(user, stream)
+        self.filter.display()
+    
+    def run(self, filename):
+        # Create stream
+        stream = FileStream(filename)
+#        self.loadUser("user.xml", stream); return
+
+        # Look for a plugin
+        plugin = getPlugin(filename)
+        if plugin == None:
+            regex, plugin_name, split_func, display_func = None, "default", DefaultFilter, displayDefault 
+        else:
+            regex, plugin_name, split_func, display_func = plugin
+        if self.verbose:
+            print "Split file \"%s\": %s." % (filename, plugin_name)
+            
+        # Split 
+        if 0 < self.depth:
+            print "=== Split file %s ===" % filename
+
+        self.filter = split_func(stream)
+        self.filter.display()
+
+        # Display
+        if self.display:
+            print "=== File %s data ===" % filename
+            display_func(self.filter)
+        return True
+

Added: haypo/hachoir/program.py
===================================================================
--- haypo/hachoir/program.py	2005-10-31 02:25:04 UTC (rev 238)
+++ haypo/hachoir/program.py	2005-10-31 04:28:04 UTC (rev 239)
@@ -0,0 +1,2 @@
+PROGRAM="Hachoir"
+VERSION="2005-10-27"

Modified: haypo/hachoir/ui_new_chunk.py
===================================================================
--- haypo/hachoir/ui_new_chunk.py	2005-10-31 02:25:04 UTC (rev 238)
+++ haypo/hachoir/ui_new_chunk.py	2005-10-31 04:28:04 UTC (rev 239)
@@ -14,8 +14,16 @@
         self.size_widget = xml.get_widget("size")
         self.endian_widget = xml.get_widget("endian")
         self.format_widget = xml.get_widget("format")
+        self.id_widget = xml.get_widget("identifier")
+        self.desc_widget = xml.get_widget("description")
         self.response = gtk.RESPONSE_CANCEL
 
+    def getId(self):
+        return self.id_widget.get_text()
+
+    def getDescription(self):
+        return self.desc_widget.get_text()
+
     def getFormat(self):
         size = self.size_widget.get_text()
         endian = self.endian_widget.child.get_text()
@@ -26,6 +34,11 @@
         # TODO: i18n the text
         self.window.set_title("New chunk")
         self.label_widget.set_text("Choose a chunk format for the new chunk:")
+        self.size_widget.set_text("1")
+        self.endian_widget.child.set_text("!")
+        self.format_widget.child.set_text("s")
+        self.id_widget.set_text("raw")
+        self.desc_widget.set_text("Raw")
         r = self.window.run()
         self.window.hide()
         return r
@@ -40,6 +53,8 @@
             self.size_widget.set_text(split[1])
             self.endian_widget.child.set_text(split[0])
             self.format_widget.child.set_text(split[2])
+        self.id_widget.set_text(chunk.id)
+        self.desc_widget.set_text(chunk.description)
         r = self.window.run()
         self.window.hide()
         return r

Modified: haypo/hachoir/ui_popup.py
===================================================================
--- haypo/hachoir/ui_popup.py	2005-10-31 02:25:04 UTC (rev 238)
+++ haypo/hachoir/ui_popup.py	2005-10-31 04:28:04 UTC (rev 239)
@@ -26,12 +26,16 @@
         if self.new_chunk.runNewChunk() == gtk.RESPONSE_CANCEL: return
         assert issubclass(self.chunk.__class__, FormatChunk) and self.chunk.isString()
         format = self.new_chunk.getFormat()
-        self.chunk.setFormat(format, "split")
+        id = self.new_chunk.getId()
+        desc = self.new_chunk.getDescription()
+        self.chunk.setFormat(format, "split", id, desc)
 
     def onSetFormat(self, event):
         if issubclass(self.chunk.__class__, FormatChunk):
             if self.new_chunk.runSetFormat(self.chunk) == gtk.RESPONSE_CANCEL: return
             format = self.new_chunk.getFormat()
+            self.chunk.id = self.new_chunk.getId()
+            self.chunk.description = self.new_chunk.getDescription()
             self.chunk.setFormat(format, "rescan")
         else:
             print "Can't set format of chunk of type %s" % self.chunk.__class__

Added: haypo/hachoir/user_filter.py
===================================================================
--- haypo/hachoir/user_filter.py	2005-10-31 02:25:04 UTC (rev 238)
+++ haypo/hachoir/user_filter.py	2005-10-31 04:28:04 UTC (rev 239)
@@ -0,0 +1,105 @@
+from filter import Filter
+from chunk import ArrayChunk, FilterChunk
+from xml.dom.minidom import getDOMImplementation, parse
+from program import VERSION
+
+class UserChunk:
+    def __init__(self, id, format, description):
+        self.id = id
+        self.format = format
+        self.description = description
+        
+    def __str__(self):
+        return "UserChunk <id=%s, format=%s, description=%s>" % \
+            (self.id, self.format, self.description)
+
+class UserSubChunk(UserChunk):
+    def __init__(self, id, sub, sub_format, description):
+        UserChunk.__init__(self, id, "sub", description)
+        self.sub = sub
+        self.sub_format = sub_format
+
+class UserFilter(Filter):
+    def __init__(self, descriptor, stream):
+        Filter.__init__(self, "user_filter", "User filter", stream)
+        for chunk in descriptor.chunks:
+            if chunk.format == "sub":
+                print "Sub %s" % chunk.sub_format
+#                format = chunk.sub_format.split('.')
+#                module = ".".join(format[:-1])
+#                format = format[-1]
+                #__import__(module, globals(), locals(), [format])
+                mod = __import__("plugins.png", globals(), locals(), ["PngChunk"])
+                print mod.PngChunk
+                chunk_class = mod.PngChunk
+                self.readChild(chunk.id, chunk_class, chunk.description)
+                print "Sub ok"
+            else:
+                self.read(chunk.id, chunk.format, chunk.description)
+            print "- End chunk"
+        print "- End end"
+
+class UserFilterDescriptor:
+    def __init__(self, filter=None, xml_file=None):
+        self.chunks = []
+        if filter != None:
+            self.createFromFilter(filter)
+        elif xml_file != None:
+            self.createFromXML(xml_file)
+            
+    def createFromXML(self, filename):
+        xml = parse(filename)
+        self.chunks = []
+        self.__loadXML(xml.documentElement)
+        
+    def __loadXML(self, node):
+        for chunk in node.childNodes:
+            if chunk.nodeType == chunk.ELEMENT_NODE and chunk.tagName == "chunk":
+                id = chunk.getAttribute("id") 
+                description = chunk.getAttribute("description") 
+                format = chunk.getAttribute("format")
+                
+                if format == "sub":
+                    sub_format = chunk.getAttribute("sub_format") 
+                    sub = UserFilterDescriptor()
+                    sub.__loadXML(chunk)
+                    user_chunk = UserSubChunk(id, sub, sub_format, description)
+                else:
+                    user_chunk = UserChunk(id, format, description)
+                self.chunks.append(user_chunk)
+
+    def toXML(self):
+        impl = getDOMImplementation()
+        doc = impl.createDocument(None, "user_filter", None)
+        root = doc.documentElement
+        root.setAttribute("hachoir_version", VERSION)
+        self.__toXML(doc, root)
+        return doc
+
+    def __toXML(self, doc, node):
+        for chunk in self.chunks:
+            item = doc.createElement("chunk")
+            item.setAttribute("id", chunk.id)
+            item.setAttribute("description", chunk.description)
+            item.setAttribute("format", chunk.format)
+            node.appendChild(item)
+            if issubclass(chunk.__class__, UserSubChunk):
+                item.setAttribute("sub_format", chunk.sub_format)
+                chunk.sub.__toXML(doc, item)
+
+    def createFromFilter(self, filter):
+        self.chunks = []
+        self.__createFromChunks(filter.getChunks())
+
+    def __createFromChunks(self, chunks):
+        for chunk in chunks:
+            if issubclass(chunk.__class__, ArrayChunk):
+                self.__createFromChunks(chunk)
+            else:
+                if issubclass(chunk.__class__, FilterChunk):
+                    format = str(chunk.getFilter().__class__)
+                    sub = UserFilterDescriptor(filter=chunk.getFilter())
+                    user = UserSubChunk(chunk.id, sub, format, chunk.description)
+                else:
+                    user = UserChunk(chunk.id, chunk.getFormat(), chunk.description)
+                self.chunks.append(user)



From haypo at berlios.de  Mon Oct 31 07:28:48 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Mon, 31 Oct 2005 07:28:48 +0100
Subject: [Happyboom-svn] r240 - haypo/hachoir
Message-ID: <200510310628.j9V6Sme8025209@sheep.berlios.de>

Author: haypo
Date: 2005-10-31 07:28:38 +0100 (Mon, 31 Oct 2005)
New Revision: 240

Added:
   haypo/hachoir/bmp_filter.xml
Modified:
   haypo/hachoir/chunk.py
   haypo/hachoir/default.py
   haypo/hachoir/filter.py
   haypo/hachoir/format.py
   haypo/hachoir/hachoir.glade
   haypo/hachoir/hachoir.py
   haypo/hachoir/hachoir_class.py
   haypo/hachoir/ui.py
   haypo/hachoir/user_filter.py
Log:
Load/store filter into/from XML file works well, fix chunk set format method:
when last chunk is changed, add another chunk if needed.


Added: haypo/hachoir/bmp_filter.xml
===================================================================
--- haypo/hachoir/bmp_filter.xml	2005-10-31 04:28:04 UTC (rev 239)
+++ haypo/hachoir/bmp_filter.xml	2005-10-31 06:28:38 UTC (rev 240)
@@ -0,0 +1,19 @@
+<?xml version='1.0' encoding='UTF-8'?>
+<user_filter hachoir_version='2005-10-27'>
+  <chunk format='!2s' id='header' description='Header ("BM")'/>
+  <chunk format='&lt;L' id='file_size' description='File size (bytes)'/>
+  <chunk format='&lt;L' id='notused' description='Reseved'/>
+  <chunk format='&lt;L' id='data_start' description='Data start position'/>
+  <chunk format='&lt;L' id='header_size' description='Header size'/>
+  <chunk format='&lt;L' id='width' description='Width (pixels)'/>
+  <chunk format='&lt;L' id='height' description='Height (pixels)'/>
+  <chunk format='&lt;H' id='nb_plan' description='Number of plan (=1)'/>
+  <chunk format='&lt;H' id='bits_pixel' description='Bits per pixel'/>
+  <chunk format='&lt;L' id='compression' description='Compression method'/>
+  <chunk format='&lt;L' id='image_size' description='Image size (bytes)'/>
+  <chunk format='&lt;L' id='horizontal_dpi' description='Horizontal DPI'/>
+  <chunk format='&lt;L' id='vertical_dpi' description='Vertical DPI'/>
+  <chunk format='&lt;L' id='used_colors' description='Number of color used'/>
+  <chunk format='&lt;L' id='important_color' description='Number of import colors'/>
+  <chunk format='!{@end@}s' id='image_data' description='Image data'/>
+</user_filter>

Modified: haypo/hachoir/chunk.py
===================================================================
--- haypo/hachoir/chunk.py	2005-10-31 04:28:04 UTC (rev 239)
+++ haypo/hachoir/chunk.py	2005-10-31 06:28:38 UTC (rev 240)
@@ -2,10 +2,11 @@
 import re
 import types
 import string
+from format import checkFormat
 
 class Chunk(object):
     def __init__(self, id, description, stream, addr, size, parent):
-        self._id = id
+        self.__id = id
         self.description = description
         self._size = size
         self._addr = addr
@@ -17,7 +18,7 @@
 
     def __str__(self):
         return "Chunk(%s) <addr=%s, size=%s, id=%s, description=%s>" % \
-            (self.__class__, self._addr, self.size, self._id, self.description)
+            (self.__class__, self._addr, self.size, self.id, self.description)
         
     def getRawData(self, max_size=None):
         return None
@@ -35,16 +36,14 @@
     def _setAddr(self, addr): self._addr = addr
     def _getAddr(self): return self._addr
     def _getSize(self): return self._size
-    def _getId(self): return self._id
-    def _setId(self, id):
-        print "Set id to %s" % id
-        if not self._parent.updateChunkId(self, id):
-            print "Can't set chunk identifier to \"%s\" (maybe already used)." % id
-            return
-        self._id = id
+    def __getId(self): return self.__id
+    def __setId(self, id):
+        if self.__id == id: return
+        self._parent.updateChunkId(self, id)
+        self.__id = id
     addr = property(_getAddr, _setAddr)        
     size = property(_getSize)        
-    id = property(_getId, _setId)
+    id = property(__getId, __setId)
     
 class ArrayChunk(Chunk):
     def __init__(self, id, description, stream, array, parent):
@@ -127,31 +126,55 @@
         return struct.calcsize(self.getRealFormat())
     size = property(_getSize)        
 
+    def __replaceFormatSize(self, format):
+        return re.sub(r'\{([^}]+)\}', self.__replaceFieldFormat, format)
+
     def getRealFormat(self):
-        return re.sub(r'\{([^}]+)\}', self.__replaceFieldFormat, self.__format)
+        return self.__replaceFormatSize(self.__format)
 
     def getFormat(self): return self.__format
     
-    def checkFormat(self, format):
-        m = re.compile("^[!<>]?([0-9]+|\{[a-z_]+\})?[BHLs]$").match(format)
-        return (m != None)
-        
+    def convertToStringSize(self, size):
+        self.__format = "!%ss" % size
+
     def setFormat(self, format, method, new_id=None, new_description=None):
         """ Method:
         - split => create new raw array if chunk is smaller
         - rescan => if size changed, rescan chunks"""
+
+        # Check format
+        if not checkFormat(format):
+            raise Exception("Invalid FormatChunk format: \"%s\"!" % format)
+        
+        # Check new size
+        size = struct.calcsize(self.__replaceFormatSize(format))
+        if self.__stream.getLastPos() < self.addr + size:
+            raise Exception("Can't set chunk %s to format \"%s\": size too big!" % (self.id, format))
+
+        # Update format
         old_size = self.size
-        if not self.checkFormat(format):
+        if not checkFormat(format):
             print "Wrong format: \"%s\"!" % format
             return
         self.__format = format
         new_size = self.size
         diff_size = new_size - old_size
+
+        # Update id and description
+        old_id = self.id
+        if new_id != None:
+            new_id = self.getParent().getUniqChunkId(new_id)
+            self.id = new_id
+        old_description = self.description
+        if new_description != None:
+            self.description = new_description
+
+        # Update filter if needed
         if diff_size != 0:
-            if method == "split" and diff_size < 0:
-                self._parent.addRawChunk(self, new_id, -diff_size, new_description)
-            else:
-                self._parent.rescan(self)
+#            if method == "split" and diff_size < 0:
+#                self._parent.addRawChunk(self, old_id, -diff_size, old_description)
+#            else:
+            self._parent.rescan(self, diff_size, new_id=old_id, new_description=old_description)
         self._parent.redisplay()
 
     def isArray(self):
@@ -175,7 +198,12 @@
 
     def __replaceFieldFormat(self, match):
 #        return str(getattr(self, match.group(1)))
-        return str(getattr(self._parent, match.group(1)))
+        id = match.group(1)
+        if id == "@end@":
+            size = self.__stream.getLastPos() - self.addr
+        else:
+            size = getattr(self._parent, id)
+        return str(size)
    
     def getData(self, max_size=None):
         data, truncated = self.getRawData(max_size)

Modified: haypo/hachoir/default.py
===================================================================
--- haypo/hachoir/default.py	2005-10-31 04:28:04 UTC (rev 239)
+++ haypo/hachoir/default.py	2005-10-31 06:28:38 UTC (rev 240)
@@ -6,5 +6,4 @@
 class DefaultFilter(Filter):
     def __init__(self, stream):
         Filter.__init__(self, "default", "Default filter", stream, None)
-        size = stream.getSize()
-        self.read("data", "!%us" % size, "Data", True)
+        self.read("data", "!{@end@}s", "Data", True)

Modified: haypo/hachoir/filter.py
===================================================================
--- haypo/hachoir/filter.py	2005-10-31 04:28:04 UTC (rev 239)
+++ haypo/hachoir/filter.py	2005-10-31 06:28:38 UTC (rev 240)
@@ -8,7 +8,8 @@
 import types
 import ui
 from chunk import Chunk, FormatChunk, ArrayChunk, FilterChunk
-    
+from format import splitFormat    
+
 class Filter:
     def __init__(self, id, description, stream, parent=None):
         self.id = id
@@ -50,37 +51,58 @@
         return new_id 
 
     def updateChunkId(self, chunk, new_id):
-        if new_id in self._chunks_dict: return False
-        del self._chunks_dict[chunk.id]
+        if chunk.id == new_id: return
+        if new_id in self._chunks_dict or hasattr(self, new_id):
+            raise Exception("Chunk identifier \"%s\" already exist!" % new_id)
+        if hasattr(self, chunk.id):
+            value = getattr(self, chunk.id)
+            delattr(self, chunk.id)
+            setattr(self, new_id, value)
+        if chunk.id in self._chunks_dict:
+            del self._chunks_dict[chunk.id]
         self._chunks_dict[new_id] = chunk
-        return True
         
     def addRawChunk(self, prev_chunk, id, size, description):
-        id = self.getUniqChunkId(id)
         addr = prev_chunk.addr + prev_chunk.size
-        chunk = FormatChunk(id, description, self.getStream(), addr, "!%us" % size, self)
+        chunk = FormatChunk(id, description, self.getStream(), addr, "!%ss" % size, self)
         chunk_pos = self._chunks.index(prev_chunk)+1
         self._appendChunk(chunk, position=chunk_pos)
 
-    def rescan(self, from_chunk):
-        print "Rescan filter ..."
+    def rescan(self, from_chunk, diff_size, new_id=None, new_description=None):
         if from_chunk != None:
             start = self._chunks.index(from_chunk)+1
             prev_chunk = from_chunk
         else:
             start = 0
             prev_chunk = None
+        if start == len(self._chunks):
+            print "Here"
+            if diff_size < 0:
+                if new_id != None:
+                    id = new_id
+                else:
+                    id = from_chunk.id
+                id = self.getUniqChunkId(id)
+                if new_description != None:
+                    description = new_description
+                else:
+                    description = from_chunk.description
+                self.addRawChunk(from_chunk, id, "{@end@}", description)
+            return
+
         pos = start
         try:
             for chunk in self._chunks[start:]:
                 # Update start address
                 if prev_chunk != None:
-                    print "New addr = %s + %s" % (prev_chunk.addr, prev_chunk.size) 
                     chunk.addr = prev_chunk.addr + prev_chunk.size
                 else:
                     chunk.addr = self.addr
-                print "Update chunk [addr=%s,id=%s]" % (chunk.addr, chunk.id)
                 chunk.update()
+                if pos == len(self._chunks)-1 and issubclass(chunk.__class__, FormatChunk):
+                    format = splitFormat(chunk.getFormat())
+                    if format[1] != "{@end@}":
+                        chunk.convertToStringSize("{@end@}")
                 prev_chunk = chunk
                 pos = pos + 1
         except Exception, msg:

Modified: haypo/hachoir/format.py
===================================================================
--- haypo/hachoir/format.py	2005-10-31 04:28:04 UTC (rev 239)
+++ haypo/hachoir/format.py	2005-10-31 06:28:38 UTC (rev 240)
@@ -1,11 +1,11 @@
 import re
 
 def checkFormat(format):
-    m = re.compile("^[!<>]?(?:[0-9]+|\{[a-z_]+\})?[BHLs]$").match(format)
+    m = re.compile("^[!<>]?(?:[0-9]+|\{[a-z at _]+\})?[BHLs]$").match(format)
     return m != None
 
 def splitFormat(format):
-    m = re.compile("^([!<>]?)((?:[0-9]+|\{[a-z_]+\})?)([BHLs])$").match(format)
+    m = re.compile("^([!<>]?)((?:[0-9]+|\{[a-z at _]+\})?)([BHLs])$").match(format)
     if m == None: return None
     endian = m.group(1)
     if endian=="": endian="!"

Modified: haypo/hachoir/hachoir.glade
===================================================================
--- haypo/hachoir/hachoir.glade	2005-10-31 04:28:04 UTC (rev 239)
+++ haypo/hachoir/hachoir.glade	2005-10-31 06:28:38 UTC (rev 240)
@@ -3,7 +3,7 @@
 
 <glade-interface>
 
-<widget class="GtkWindow" id="window">
+<widget class="GtkWindow" id="main_window">
   <property name="visible">True</property>
   <property name="title" translatable="yes">Hachoir</property>
   <property name="type">GTK_WINDOW_TOPLEVEL</property>
@@ -90,28 +90,95 @@
       </child>
 
       <child>
-	<widget class="GtkToolbar" id="toolbar">
+	<widget class="GtkHandleBox" id="handlebox1">
 	  <property name="visible">True</property>
-	  <property name="orientation">GTK_ORIENTATION_HORIZONTAL</property>
-	  <property name="toolbar_style">GTK_TOOLBAR_BOTH</property>
-	  <property name="tooltips">True</property>
-	  <property name="show_arrow">True</property>
+	  <property name="shadow_type">GTK_SHADOW_OUT</property>
+	  <property name="handle_position">GTK_POS_LEFT</property>
+	  <property name="snap_edge">GTK_POS_TOP</property>
 
 	  <child>
-	    <widget class="GtkToolButton" id="toolbutton_parent">
+	    <widget class="GtkToolbar" id="toolbar1">
 	      <property name="visible">True</property>
-	      <property name="label" translatable="yes">Parent</property>
-	      <property name="use_underline">True</property>
-	      <property name="stock_id">gtk-go-up</property>
-	      <property name="visible_horizontal">True</property>
-	      <property name="visible_vertical">True</property>
-	      <property name="is_important">False</property>
-	      <signal name="clicked" handler="on_toolbutton_parent" last_modification_time="Sun, 30 Oct 2005 01:50:12 GMT"/>
+	      <property name="orientation">GTK_ORIENTATION_HORIZONTAL</property>
+	      <property name="toolbar_style">GTK_TOOLBAR_BOTH</property>
+	      <property name="tooltips">True</property>
+	      <property name="show_arrow">True</property>
+
+	      <child>
+		<widget class="GtkToolButton" id="toolbutton_new">
+		  <property name="visible">True</property>
+		  <property name="stock_id">gtk-new</property>
+		  <property name="visible_horizontal">True</property>
+		  <property name="visible_vertical">True</property>
+		  <property name="is_important">False</property>
+		  <signal name="clicked" handler="on_toolbutton_new" last_modification_time="Mon, 31 Oct 2005 04:36:45 GMT"/>
+		</widget>
+		<packing>
+		  <property name="expand">False</property>
+		  <property name="homogeneous">True</property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkToolButton" id="toolbutton_open">
+		  <property name="visible">True</property>
+		  <property name="stock_id">gtk-open</property>
+		  <property name="visible_horizontal">True</property>
+		  <property name="visible_vertical">True</property>
+		  <property name="is_important">False</property>
+		  <signal name="clicked" handler="on_toolbutton_open" last_modification_time="Mon, 31 Oct 2005 04:36:36 GMT"/>
+		</widget>
+		<packing>
+		  <property name="expand">False</property>
+		  <property name="homogeneous">True</property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkToolButton" id="toolbutton_save">
+		  <property name="visible">True</property>
+		  <property name="stock_id">gtk-save</property>
+		  <property name="visible_horizontal">True</property>
+		  <property name="visible_vertical">True</property>
+		  <property name="is_important">False</property>
+		  <signal name="clicked" handler="on_toolbutton_save" last_modification_time="Mon, 31 Oct 2005 04:32:02 GMT"/>
+		</widget>
+		<packing>
+		  <property name="expand">False</property>
+		  <property name="homogeneous">True</property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkSeparatorToolItem" id="separatortoolitem1">
+		  <property name="visible">True</property>
+		  <property name="draw">True</property>
+		  <property name="visible_horizontal">True</property>
+		  <property name="visible_vertical">True</property>
+		</widget>
+		<packing>
+		  <property name="expand">False</property>
+		  <property name="homogeneous">False</property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkToolButton" id="toolbutton_parent">
+		  <property name="visible">True</property>
+		  <property name="label" translatable="yes">Parent</property>
+		  <property name="use_underline">True</property>
+		  <property name="stock_id">gtk-go-up</property>
+		  <property name="visible_horizontal">True</property>
+		  <property name="visible_vertical">True</property>
+		  <property name="is_important">False</property>
+		  <signal name="clicked" handler="on_toolbutton_parent" last_modification_time="Sun, 30 Oct 2005 01:50:12 GMT"/>
+		</widget>
+		<packing>
+		  <property name="expand">False</property>
+		  <property name="homogeneous">True</property>
+		</packing>
+	      </child>
 	    </widget>
-	    <packing>
-	      <property name="expand">False</property>
-	      <property name="homogeneous">True</property>
-	    </packing>
 	  </child>
 	</widget>
 	<packing>
@@ -375,7 +442,7 @@
 	      <property name="visible">True</property>
 	      <property name="items" translatable="yes">s
 B
-S
+H
 L</property>
 	      <property name="add_tearoffs">False</property>
 	      <property name="has_frame">True</property>

Modified: haypo/hachoir/hachoir.py
===================================================================
--- haypo/hachoir/hachoir.py	2005-10-31 04:28:04 UTC (rev 239)
+++ haypo/hachoir/hachoir.py	2005-10-31 06:28:38 UTC (rev 240)
@@ -35,9 +35,13 @@
         usage(def_val)
         sys.exit(2)
    
-    if len(args) != 1:
+    if 1 < len(args):
         usage(def_val)
         sys.exit(2)
+    if len(args) == 1:
+        filename = args[0]
+    else:
+        filename = None
         
     for o, a in opts:
         if o == "--help":
@@ -52,7 +56,7 @@
             val["depth"] = int(a)
         if o == "--verbose":
             val["verbose"] = True
-    return (val, args[0],)
+    return (val, filename,)
 
 def main():
     try:        
@@ -63,7 +67,7 @@
         modules = []
         for file in plugins_files:
             m = file_py.match(file)
-            if m != None:
+            if file != "__init__.py" and m != None:
                 module = "plugins."+m.group(1)
                 __import__(module)
                 modules.append(m.group(1))
@@ -74,28 +78,21 @@
             "verbose": False,
             "display": True
         }
-        if len(sys.argv) < 2:
-            usage(opt)
-            sys.exit(1)
-
         opt, filename = parseArgs(opt)
 
         hachoir = Hachoir()
         for key in opt:
             setattr(hachoir, key, opt[key])
-
         try:
             import ui 
+            print ui.ui
         except ImportError, err:
             print """Error: a Python module is missing:\n%s\n
 You can find PyGTK at: http://www.pygtk.org/
 and PyGlade at: http://glade.gnome.org/""" % (err)
             sys.exit(1)
         ui.loadInterface(hachoir)
-        ui.ui.on_row_click = hachoir.onRowClick
-        ui.ui.on_go_parent = hachoir.onGoParent
         hachoir.run(filename)
-        ui.ui.run()
 
     except SystemExit:
         pass

Modified: haypo/hachoir/hachoir_class.py
===================================================================
--- haypo/hachoir/hachoir_class.py	2005-10-31 04:28:04 UTC (rev 239)
+++ haypo/hachoir/hachoir_class.py	2005-10-31 06:28:38 UTC (rev 240)
@@ -3,13 +3,14 @@
 from chunk import FilterChunk
 from default import DefaultFilter, displayDefault
 from user_filter import UserFilterDescriptor, UserFilter
-from xml.dom.ext import PrettyPrint
 
 class Hachoir:
     def __init__(self):
         self.verbose = False
         self.display = True
         self.depth = 5
+        self.ui = None 
+        self.main_filter = None
 
     def onGoParent(self):
         if self.filter.getParent() == None: return
@@ -23,15 +24,21 @@
             self.filter = chunk.getFilter()
             self.filter.display()
 
-    def loadUser(self, xml_filename, stream):
-        user = UserFilterDescriptor(xml_file=xml_filename)
+    def loadUser(self, filename):
+        stream = self.main_filter.getStream()
+        stream.seek(0)
+        user = UserFilterDescriptor(xml_file=filename)
         self.filter = UserFilter(user, stream)
+        self.main_filter = self.filter
         self.filter.display()
+        self.ui.updateToolbar()
     
-    def run(self, filename):
-        # Create stream
+    def saveUser(self, filename):
+        my = UserFilterDescriptor(filter=self.main_filter)
+        my.writeIntoXML(filename)
+        
+    def load(self, filename):
         stream = FileStream(filename)
-#        self.loadUser("user.xml", stream); return
 
         # Look for a plugin
         plugin = getPlugin(filename)
@@ -48,10 +55,15 @@
 
         self.filter = split_func(stream)
         self.filter.display()
+        self.main_filter = self.filter
 
         # Display
         if self.display:
             print "=== File %s data ===" % filename
             display_func(self.filter)
-        return True
+        self.ui.updateToolbar()
 
+    def run(self, filename):
+        if filename != None:
+            self.load(filename)
+        self.ui.run()      

Modified: haypo/hachoir/ui.py
===================================================================
--- haypo/hachoir/ui.py	2005-10-31 04:28:04 UTC (rev 239)
+++ haypo/hachoir/ui.py	2005-10-31 06:28:38 UTC (rev 240)
@@ -9,6 +9,9 @@
     global ui 
     glade = os.path.join(os.path.dirname(__file__), 'hachoir.glade')
     ui = GladeInterface(glade, hachoir)
+    hachoir.ui = ui 
+    hachoir.ui.on_row_click = hachoir.onRowClick
+    hachoir.ui.on_go_parent = hachoir.onGoParent
 
 class GladeInterface:
     def __init__(self, filename, hachoir):
@@ -36,8 +39,15 @@
                 treeview.set_cursor( path, col, 0)
                 self.table_popup.show(pthinfo, event)
             return 1
+        
+    def updateToolbar(self):
+        self.toolbutton_open.set_sensitive(self.hachoir.main_filter != None)
+        self.toolbutton_save.set_sensitive(self.hachoir.main_filter != None)
+        if self.hachoir.main_filter == None:
+            self.toolbutton_parent.set_sensitive(False)
 
     def run(self):
+        self.updateToolbar()
         try:
             gtk.main()
         except KeyboardInterrupt:
@@ -63,11 +73,14 @@
         self.table_store.append(parent, (addr, format, size, id, value, description, ))
        
     def load_window (self):
-        xml = gtk.glade.XML(self.glade_xml, "window")
-        self.window = xml.get_widget('window')
+        xml = gtk.glade.XML(self.glade_xml, "main_window")
+        self.window = xml.get_widget('main_window')
         self.statusbar = xml.get_widget('statusbar')
         self.toolbar = xml.get_widget('toolbar')
         self.toolbutton_parent = xml.get_widget('toolbutton_parent')
+        self.toolbutton_new = xml.get_widget('toolbutton_new')
+        self.toolbutton_open = xml.get_widget('toolbutton_open')
+        self.toolbutton_save = xml.get_widget('toolbutton_save')
         self.statusbar_state = self.statusbar.get_context_id("State")
         self.table = xml.get_widget('table')
         self.table_store = None
@@ -114,17 +127,41 @@
     def on_toolbutton_parent(self, widget, data=None):
         self.on_go_parent()
 
+    def on_toolbutton_new(self, widget):
+        self.on_open_activate(widget)
+        
     def on_open_activate(self, widget):
-        print "Open (do nothing yet)"
         chooser = gtk.FileChooserDialog( \
-            title="Choose file",
+            title="Choose file to split",
             action=gtk.FILE_CHOOSER_ACTION_OPEN,
             buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_OPEN,gtk.RESPONSE_OK))
         if chooser.run() == gtk.RESPONSE_OK:
             filename = chooser.get_filename() 
-            self.hachoir.run(filename)
+            self.hachoir.load(filename)
         chooser.destroy()
 
+    def on_toolbutton_open(self, widget):
+        chooser = gtk.FileChooserDialog( \
+            title="Choose filter",
+            action=gtk.FILE_CHOOSER_ACTION_OPEN,
+            buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_OPEN,gtk.RESPONSE_OK))
+        if chooser.run() == gtk.RESPONSE_OK:
+            filename = chooser.get_filename() 
+            print "TODO: Load %s" % filename
+            self.hachoir.loadUser(filename)
+        chooser.destroy()
+
+    def on_toolbutton_save(self, widget):
+        print "Save"
+        chooser = gtk.FileChooserDialog( \
+            title="Save filter into ...",
+            action=gtk.FILE_CHOOSER_ACTION_SAVE,
+            buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK))
+        if chooser.run() == gtk.RESPONSE_OK:
+            filename = chooser.get_filename() 
+            self.hachoir.saveUser(filename)
+        chooser.destroy()
+
     def on_about_activate(self, widget):
         if self.about_dialog == None:
             self.about_xml = gtk.glade.XML(self.glade_xml, "about_dialog")

Modified: haypo/hachoir/user_filter.py
===================================================================
--- haypo/hachoir/user_filter.py	2005-10-31 04:28:04 UTC (rev 239)
+++ haypo/hachoir/user_filter.py	2005-10-31 06:28:38 UTC (rev 240)
@@ -2,6 +2,7 @@
 from chunk import ArrayChunk, FilterChunk
 from xml.dom.minidom import getDOMImplementation, parse
 from program import VERSION
+from xml.dom.ext import PrettyPrint
 
 class UserChunk:
     def __init__(self, id, format, description):
@@ -24,20 +25,14 @@
         Filter.__init__(self, "user_filter", "User filter", stream)
         for chunk in descriptor.chunks:
             if chunk.format == "sub":
-                print "Sub %s" % chunk.sub_format
-#                format = chunk.sub_format.split('.')
-#                module = ".".join(format[:-1])
-#                format = format[-1]
-                #__import__(module, globals(), locals(), [format])
-                mod = __import__("plugins.png", globals(), locals(), ["PngChunk"])
-                print mod.PngChunk
-                chunk_class = mod.PngChunk
+                modules = chunk.sub_format.split('.')
+                chunk_class = modules[-1]
+                module = ".".join(modules[:-1])
+                mod = __import__(module, globals(), locals(), [chunk_class])
+                chunk_class = getattr(mod, chunk_class)
                 self.readChild(chunk.id, chunk_class, chunk.description)
-                print "Sub ok"
             else:
                 self.read(chunk.id, chunk.format, chunk.description)
-            print "- End chunk"
-        print "- End end"
 
 class UserFilterDescriptor:
     def __init__(self, filter=None, xml_file=None):
@@ -47,6 +42,11 @@
         elif xml_file != None:
             self.createFromXML(xml_file)
             
+    def writeIntoXML(self, filename):
+        file = open(filename, "w")
+        PrettyPrint(self.toXML(), file)
+        file.close()
+        
     def createFromXML(self, filename):
         xml = parse(filename)
         self.chunks = []



From haypo at berlios.de  Mon Oct 31 17:40:26 2005
From: haypo at berlios.de (Victor STINNER at BerliOS)
Date: Mon, 31 Oct 2005 17:40:26 +0100
Subject: [Happyboom-svn] r241 - in haypo/hachoir: . plugins
Message-ID: <200510311640.j9VGeQQJ021232@sheep.berlios.de>

Author: haypo
Date: 2005-10-31 17:40:26 +0100 (Mon, 31 Oct 2005)
New Revision: 241

Added:
   haypo/hachoir/ui_property.py
   haypo/hachoir/ui_window.py
Modified:
   haypo/hachoir/bmp_filter.xml
   haypo/hachoir/chunk.py
   haypo/hachoir/filter.py
   haypo/hachoir/hachoir.glade
   haypo/hachoir/hachoir_class.py
   haypo/hachoir/plugins/png.py
   haypo/hachoir/ui.py
   haypo/hachoir/ui_new_chunk.py
   haypo/hachoir/ui_popup.py
   haypo/hachoir/user_filter.py
Log:
An user filter is not just one level.


Modified: haypo/hachoir/bmp_filter.xml
===================================================================
--- haypo/hachoir/bmp_filter.xml	2005-10-31 06:28:38 UTC (rev 240)
+++ haypo/hachoir/bmp_filter.xml	2005-10-31 16:40:26 UTC (rev 241)
@@ -1,5 +1,5 @@
 <?xml version='1.0' encoding='UTF-8'?>
-<user_filter hachoir_version='2005-10-27'>
+<user_filter hachoir_version='2005-10-27' id='bmp_file' description='Bitmap picture file (BMP)'>
   <chunk format='!2s' id='header' description='Header ("BM")'/>
   <chunk format='&lt;L' id='file_size' description='File size (bytes)'/>
   <chunk format='&lt;L' id='notused' description='Reseved'/>
@@ -15,5 +15,4 @@
   <chunk format='&lt;L' id='vertical_dpi' description='Vertical DPI'/>
   <chunk format='&lt;L' id='used_colors' description='Number of color used'/>
   <chunk format='&lt;L' id='important_color' description='Number of import colors'/>
-  <chunk format='!{@end@}s' id='image_data' description='Image data'/>
 </user_filter>

Modified: haypo/hachoir/chunk.py
===================================================================
--- haypo/hachoir/chunk.py	2005-10-31 06:28:38 UTC (rev 240)
+++ haypo/hachoir/chunk.py	2005-10-31 16:40:26 UTC (rev 241)
@@ -86,15 +86,22 @@
         return self._array[index]
         
 class FilterChunk(Chunk):
-    def __init__(self, id, description, stream, filter):
-        Chunk.__init__(self, id, description, stream, filter.getAddr(), filter.getSize(), filter)
+    def __init__(self, id, filter, parent):
+        Chunk.__init__(self, id, filter.description, filter.getStream(), filter.getAddr(), filter.getSize(), parent)
         self._filter = filter
+        self._filter.filter_chunk = self
 
     def update(self):
         filter_class = self._filter.__class__
         stream = self._filter.getStream()
+        parent = self._filter.getParent()
         stream.seek(self.addr)
-        self._filter = filter_class(stream, self._filter.getParent())
+        filter = filter_class(stream, parent)
+        self.setFilter(filter)
+
+    def setFilter(self, filter):
+        print "Set filter to %s" % filter.id
+        self._filter = filter
         self._filter.updateParent(self)
         
     def _getSize(self):

Modified: haypo/hachoir/filter.py
===================================================================
--- haypo/hachoir/filter.py	2005-10-31 06:28:38 UTC (rev 240)
+++ haypo/hachoir/filter.py	2005-10-31 16:40:26 UTC (rev 241)
@@ -11,7 +11,7 @@
 from format import splitFormat    
 
 class Filter:
-    def __init__(self, id, description, stream, parent=None):
+    def __init__(self, id, description, stream, parent):
         self.id = id
         self.description = description
         self._sub_struct = {}
@@ -24,6 +24,7 @@
             self.depth = 1
             self.table_item = None
             self.table_parent = None 
+        self.filter_chunk = None 
         self.indent = " " * ((self.depth-1)*2)
         self.child_indent = " " * (self.depth*2)
         self.table_item = None
@@ -66,7 +67,7 @@
         addr = prev_chunk.addr + prev_chunk.size
         chunk = FormatChunk(id, description, self.getStream(), addr, "!%ss" % size, self)
         chunk_pos = self._chunks.index(prev_chunk)+1
-        self._appendChunk(chunk, position=chunk_pos)
+        self._appendChunk(chunk, can_truncate=True, position=chunk_pos)
 
     def rescan(self, from_chunk, diff_size, new_id=None, new_description=None):
         if from_chunk != None:
@@ -141,26 +142,26 @@
             type = chunk.getFormat()
         elif issubclass(type, FilterChunk):
             type = chunk.getFilter().id
-        ui.ui.add_table(self.table_parent, chunk.addr, chunk.size, type, chunk.id, chunk.description, chunk.getDisplayData())
+        ui.window.add_table(self.table_parent, chunk.addr, chunk.size, type, chunk.id, chunk.description, chunk.getDisplayData())
 
     def redisplay(self):  
         self.display()
-
-    def display(self):  
-        # Update parent button
-        ui.ui.enableParentButton(self.getParent() != None)
-        
-        # Update status bar
+    
+    def updateStatusBar(self):
         text = ""
         current = self
         while current != None:
             if text != "": text = " > " + text
             text = current.id + text
             current = current.getParent()
-        ui.ui.updateStatusBar("%s: %s" % (text, self.description))
+        ui.window.updateStatusBar("%s: %s" % (text, self.description))
+
+    def display(self):  
+        ui.window.enableParentButton(self.getParent() != None)
+        self.updateStatusBar()
             
         # Update table
-        ui.ui.clear_table()
+        ui.window.clear_table()
         for chunk in self._chunks:
             if issubclass(chunk.__class__, ArrayChunk):
                 for subchunk in chunk:
@@ -228,7 +229,7 @@
 
     def readChild(self, id, filter_class, description): 
         filter = filter_class(self._stream, self)
-        chunk = FilterChunk(id, filter.description, self._stream, filter)
+        chunk = FilterChunk(id, filter, self)
         self._appendChunk(chunk)
         filter.updateParent(chunk)
         self._stream.seek(chunk.addr + chunk.size)
@@ -244,7 +245,7 @@
             filter = filter_class(self._stream, self)
             chunk_id = "%s[%u]" % (id, nb)
             nb = nb + 1
-            chunk = FilterChunk(chunk_id, filter.description, self._stream, filter)
+            chunk = FilterChunk(chunk_id, filter, self)
             array.append( chunk )
             last_filter = filter
 
@@ -265,6 +266,20 @@
         return "Filter(%s) <id=%s, description=%s>" % \
             (self.__class__, self.id, self.description)
 
+    def addNewFilter(self, chunk, id, size, desc):
+        chunk.setFormat("!%us" % size, "split", id, desc)
+
+        stream = self.getStream()
+        stream.seek(chunk.addr)
+        filter = Filter(id, desc, stream, self)
+        filter._appendChunk(chunk)
+        new_chunk = FilterChunk(chunk.id, filter, self)
+        pos = self._chunks.index(chunk)
+        self._chunks[pos] = new_chunk
+        self._chunks_dict[chunk.id] = new_chunk
+        self.redisplay()
+        return filter
+
     def getParent(self):
         return self._parent
 

Modified: haypo/hachoir/hachoir.glade
===================================================================
--- haypo/hachoir/hachoir.glade	2005-10-31 06:28:38 UTC (rev 240)
+++ haypo/hachoir/hachoir.glade	2005-10-31 16:40:26 UTC (rev 241)
@@ -178,6 +178,21 @@
 		  <property name="homogeneous">True</property>
 		</packing>
 	      </child>
+
+	      <child>
+		<widget class="GtkToolButton" id="toolbutton_property">
+		  <property name="visible">True</property>
+		  <property name="stock_id">gtk-properties</property>
+		  <property name="visible_horizontal">True</property>
+		  <property name="visible_vertical">True</property>
+		  <property name="is_important">False</property>
+		  <signal name="clicked" handler="on_toolbutton_property" last_modification_time="Mon, 31 Oct 2005 16:11:08 GMT"/>
+		</widget>
+		<packing>
+		  <property name="expand">False</property>
+		  <property name="homogeneous">True</property>
+		</packing>
+	      </child>
 	    </widget>
 	  </child>
 	</widget>
@@ -243,7 +258,7 @@
       <signal name="activate" handler="onNewChunk" last_modification_time="Sun, 30 Oct 2005 23:08:19 GMT"/>
 
       <child internal-child="image">
-	<widget class="GtkImage" id="image3">
+	<widget class="GtkImage" id="image5">
 	  <property name="visible">True</property>
 	  <property name="stock">gtk-cut</property>
 	  <property name="icon_size">1</property>
@@ -257,6 +272,27 @@
   </child>
 
   <child>
+    <widget class="GtkImageMenuItem" id="new_filter1">
+      <property name="visible">True</property>
+      <property name="label" translatable="yes">New _filter</property>
+      <property name="use_underline">True</property>
+      <signal name="activate" handler="onNewFilter" last_modification_time="Mon, 31 Oct 2005 06:42:27 GMT"/>
+
+      <child internal-child="image">
+	<widget class="GtkImage" id="image6">
+	  <property name="visible">True</property>
+	  <property name="stock">gtk-cut</property>
+	  <property name="icon_size">1</property>
+	  <property name="xalign">0.5</property>
+	  <property name="yalign">0.5</property>
+	  <property name="xpad">0</property>
+	  <property name="ypad">0</property>
+	</widget>
+      </child>
+    </widget>
+  </child>
+
+  <child>
     <widget class="GtkImageMenuItem" id="join_chunks">
       <property name="visible">True</property>
       <property name="label" translatable="yes">_Join chunks</property>
@@ -264,7 +300,7 @@
       <signal name="activate" handler="onJoinChunks" last_modification_time="Sun, 30 Oct 2005 23:08:19 GMT"/>
 
       <child internal-child="image">
-	<widget class="GtkImage" id="image4">
+	<widget class="GtkImage" id="image7">
 	  <property name="visible">True</property>
 	  <property name="stock">gtk-go-up</property>
 	  <property name="icon_size">1</property>
@@ -285,7 +321,7 @@
       <signal name="activate" handler="onSetFormat" last_modification_time="Sun, 30 Oct 2005 23:27:49 GMT"/>
 
       <child internal-child="image">
-	<widget class="GtkImage" id="image5">
+	<widget class="GtkImage" id="image8">
 	  <property name="visible">True</property>
 	  <property name="stock">gtk-edit</property>
 	  <property name="icon_size">1</property>
@@ -349,7 +385,6 @@
 	      <property name="relief">GTK_RELIEF_NORMAL</property>
 	      <property name="focus_on_click">True</property>
 	      <property name="response_id">-6</property>
-	      <signal name="released" handler="gtk_widget_hide" after="yes" last_modification_time="Mon, 31 Oct 2005 01:42:37 GMT"/>
 	    </widget>
 	  </child>
 
@@ -363,7 +398,6 @@
 	      <property name="relief">GTK_RELIEF_NORMAL</property>
 	      <property name="focus_on_click">True</property>
 	      <property name="response_id">-5</property>
-	      <signal name="released" handler="gtk_widget_hide" last_modification_time="Mon, 31 Oct 2005 01:42:47 GMT"/>
 	    </widget>
 	  </child>
 	</widget>
@@ -663,4 +697,444 @@
   </child>
 </widget>
 
+<widget class="GtkDialog" id="new_filter">
+  <property name="visible">True</property>
+  <property name="title" translatable="yes">New filter</property>
+  <property name="type">GTK_WINDOW_TOPLEVEL</property>
+  <property name="window_position">GTK_WIN_POS_NONE</property>
+  <property name="modal">False</property>
+  <property name="resizable">True</property>
+  <property name="destroy_with_parent">False</property>
+  <property name="decorated">True</property>
+  <property name="skip_taskbar_hint">False</property>
+  <property name="skip_pager_hint">False</property>
+  <property name="type_hint">GDK_WINDOW_TYPE_HINT_DIALOG</property>
+  <property name="gravity">GDK_GRAVITY_NORTH_WEST</property>
+  <property name="focus_on_map">True</property>
+  <property name="has_separator">True</property>
+
+  <child internal-child="vbox">
+    <widget class="GtkVBox" id="dialog-vbox2">
+      <property name="visible">True</property>
+      <property name="homogeneous">False</property>
+      <property name="spacing">0</property>
+
+      <child internal-child="action_area">
+	<widget class="GtkHButtonBox" id="dialog-action_area2">
+	  <property name="visible">True</property>
+	  <property name="layout_style">GTK_BUTTONBOX_END</property>
+
+	  <child>
+	    <widget class="GtkButton" id="cancelbutton2">
+	      <property name="visible">True</property>
+	      <property name="can_default">True</property>
+	      <property name="can_focus">True</property>
+	      <property name="label">gtk-cancel</property>
+	      <property name="use_stock">True</property>
+	      <property name="relief">GTK_RELIEF_NORMAL</property>
+	      <property name="focus_on_click">True</property>
+	      <property name="response_id">-6</property>
+	    </widget>
+	  </child>
+
+	  <child>
+	    <widget class="GtkButton" id="okbutton2">
+	      <property name="visible">True</property>
+	      <property name="can_default">True</property>
+	      <property name="can_focus">True</property>
+	      <property name="label">gtk-ok</property>
+	      <property name="use_stock">True</property>
+	      <property name="relief">GTK_RELIEF_NORMAL</property>
+	      <property name="focus_on_click">True</property>
+	      <property name="response_id">-5</property>
+	    </widget>
+	  </child>
+	</widget>
+	<packing>
+	  <property name="padding">0</property>
+	  <property name="expand">False</property>
+	  <property name="fill">True</property>
+	  <property name="pack_type">GTK_PACK_END</property>
+	</packing>
+      </child>
+
+      <child>
+	<widget class="GtkVBox" id="vbox3">
+	  <property name="visible">True</property>
+	  <property name="homogeneous">False</property>
+	  <property name="spacing">0</property>
+
+	  <child>
+	    <widget class="GtkLabel" id="label9">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">New filter options</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">False</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">False</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0.5</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">0</property>
+	      <property name="ypad">0</property>
+	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	      <property name="width_chars">-1</property>
+	      <property name="single_line_mode">False</property>
+	      <property name="angle">0</property>
+	    </widget>
+	    <packing>
+	      <property name="padding">6</property>
+	      <property name="expand">False</property>
+	      <property name="fill">False</property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkTable" id="table2">
+	      <property name="border_width">6</property>
+	      <property name="visible">True</property>
+	      <property name="n_rows">3</property>
+	      <property name="n_columns">2</property>
+	      <property name="homogeneous">False</property>
+	      <property name="row_spacing">6</property>
+	      <property name="column_spacing">6</property>
+
+	      <child>
+		<widget class="GtkLabel" id="label10">
+		  <property name="visible">True</property>
+		  <property name="label" translatable="yes">Id:</property>
+		  <property name="use_underline">False</property>
+		  <property name="use_markup">False</property>
+		  <property name="justify">GTK_JUSTIFY_LEFT</property>
+		  <property name="wrap">False</property>
+		  <property name="selectable">False</property>
+		  <property name="xalign">0</property>
+		  <property name="yalign">0.5</property>
+		  <property name="xpad">0</property>
+		  <property name="ypad">0</property>
+		  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+		  <property name="width_chars">-1</property>
+		  <property name="single_line_mode">False</property>
+		  <property name="angle">0</property>
+		</widget>
+		<packing>
+		  <property name="left_attach">0</property>
+		  <property name="right_attach">1</property>
+		  <property name="top_attach">0</property>
+		  <property name="bottom_attach">1</property>
+		  <property name="x_options">fill</property>
+		  <property name="y_options"></property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkLabel" id="label11">
+		  <property name="visible">True</property>
+		  <property name="label" translatable="yes">Description:</property>
+		  <property name="use_underline">False</property>
+		  <property name="use_markup">False</property>
+		  <property name="justify">GTK_JUSTIFY_LEFT</property>
+		  <property name="wrap">False</property>
+		  <property name="selectable">False</property>
+		  <property name="xalign">0</property>
+		  <property name="yalign">0.5</property>
+		  <property name="xpad">0</property>
+		  <property name="ypad">0</property>
+		  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+		  <property name="width_chars">-1</property>
+		  <property name="single_line_mode">False</property>
+		  <property name="angle">0</property>
+		</widget>
+		<packing>
+		  <property name="left_attach">0</property>
+		  <property name="right_attach">1</property>
+		  <property name="top_attach">1</property>
+		  <property name="bottom_attach">2</property>
+		  <property name="x_options">fill</property>
+		  <property name="y_options"></property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkEntry" id="entry1">
+		  <property name="visible">True</property>
+		  <property name="can_focus">True</property>
+		  <property name="editable">True</property>
+		  <property name="visibility">True</property>
+		  <property name="max_length">0</property>
+		  <property name="text" translatable="yes"></property>
+		  <property name="has_frame">True</property>
+		  <property name="invisible_char">*</property>
+		  <property name="activates_default">False</property>
+		</widget>
+		<packing>
+		  <property name="left_attach">1</property>
+		  <property name="right_attach">2</property>
+		  <property name="top_attach">0</property>
+		  <property name="bottom_attach">1</property>
+		  <property name="y_options"></property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkEntry" id="entry2">
+		  <property name="visible">True</property>
+		  <property name="can_focus">True</property>
+		  <property name="editable">True</property>
+		  <property name="visibility">True</property>
+		  <property name="max_length">0</property>
+		  <property name="text" translatable="yes"></property>
+		  <property name="has_frame">True</property>
+		  <property name="invisible_char">*</property>
+		  <property name="activates_default">False</property>
+		</widget>
+		<packing>
+		  <property name="left_attach">1</property>
+		  <property name="right_attach">2</property>
+		  <property name="top_attach">1</property>
+		  <property name="bottom_attach">2</property>
+		  <property name="y_options"></property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkLabel" id="label12">
+		  <property name="visible">True</property>
+		  <property name="label" translatable="yes">Type:</property>
+		  <property name="use_underline">False</property>
+		  <property name="use_markup">False</property>
+		  <property name="justify">GTK_JUSTIFY_LEFT</property>
+		  <property name="wrap">False</property>
+		  <property name="selectable">False</property>
+		  <property name="xalign">0</property>
+		  <property name="yalign">0.5</property>
+		  <property name="xpad">0</property>
+		  <property name="ypad">0</property>
+		  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+		  <property name="width_chars">-1</property>
+		  <property name="single_line_mode">False</property>
+		  <property name="angle">0</property>
+		</widget>
+		<packing>
+		  <property name="left_attach">0</property>
+		  <property name="right_attach">1</property>
+		  <property name="top_attach">2</property>
+		  <property name="bottom_attach">3</property>
+		  <property name="x_options">fill</property>
+		  <property name="y_options"></property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkComboBoxEntry" id="comboboxentry1">
+		  <property name="visible">True</property>
+		  <property name="add_tearoffs">False</property>
+		  <property name="has_frame">True</property>
+		  <property name="focus_on_click">True</property>
+		</widget>
+		<packing>
+		  <property name="left_attach">1</property>
+		  <property name="right_attach">2</property>
+		  <property name="top_attach">2</property>
+		  <property name="bottom_attach">3</property>
+		  <property name="x_options">fill</property>
+		  <property name="y_options">fill</property>
+		</packing>
+	      </child>
+	    </widget>
+	    <packing>
+	      <property name="padding">0</property>
+	      <property name="expand">True</property>
+	      <property name="fill">True</property>
+	    </packing>
+	  </child>
+	</widget>
+	<packing>
+	  <property name="padding">0</property>
+	  <property name="expand">True</property>
+	  <property name="fill">True</property>
+	</packing>
+      </child>
+    </widget>
+  </child>
+</widget>
+
+<widget class="GtkDialog" id="filter_property">
+  <property name="visible">True</property>
+  <property name="title" translatable="yes">Filter property</property>
+  <property name="type">GTK_WINDOW_TOPLEVEL</property>
+  <property name="window_position">GTK_WIN_POS_NONE</property>
+  <property name="modal">False</property>
+  <property name="resizable">True</property>
+  <property name="destroy_with_parent">False</property>
+  <property name="decorated">True</property>
+  <property name="skip_taskbar_hint">False</property>
+  <property name="skip_pager_hint">False</property>
+  <property name="type_hint">GDK_WINDOW_TYPE_HINT_DIALOG</property>
+  <property name="gravity">GDK_GRAVITY_NORTH_WEST</property>
+  <property name="focus_on_map">True</property>
+  <property name="has_separator">True</property>
+
+  <child internal-child="vbox">
+    <widget class="GtkVBox" id="dialog-vbox3">
+      <property name="visible">True</property>
+      <property name="homogeneous">False</property>
+      <property name="spacing">0</property>
+
+      <child internal-child="action_area">
+	<widget class="GtkHButtonBox" id="dialog-action_area3">
+	  <property name="visible">True</property>
+	  <property name="layout_style">GTK_BUTTONBOX_END</property>
+
+	  <child>
+	    <widget class="GtkButton" id="cancelbutton3">
+	      <property name="visible">True</property>
+	      <property name="can_default">True</property>
+	      <property name="can_focus">True</property>
+	      <property name="label">gtk-cancel</property>
+	      <property name="use_stock">True</property>
+	      <property name="relief">GTK_RELIEF_NORMAL</property>
+	      <property name="focus_on_click">True</property>
+	      <property name="response_id">-6</property>
+	    </widget>
+	  </child>
+
+	  <child>
+	    <widget class="GtkButton" id="okbutton3">
+	      <property name="visible">True</property>
+	      <property name="can_default">True</property>
+	      <property name="can_focus">True</property>
+	      <property name="label">gtk-ok</property>
+	      <property name="use_stock">True</property>
+	      <property name="relief">GTK_RELIEF_NORMAL</property>
+	      <property name="focus_on_click">True</property>
+	      <property name="response_id">-5</property>
+	    </widget>
+	  </child>
+	</widget>
+	<packing>
+	  <property name="padding">0</property>
+	  <property name="expand">False</property>
+	  <property name="fill">True</property>
+	  <property name="pack_type">GTK_PACK_END</property>
+	</packing>
+      </child>
+
+      <child>
+	<widget class="GtkTable" id="table3">
+	  <property name="visible">True</property>
+	  <property name="n_rows">2</property>
+	  <property name="n_columns">2</property>
+	  <property name="homogeneous">False</property>
+	  <property name="row_spacing">6</property>
+	  <property name="column_spacing">6</property>
+
+	  <child>
+	    <widget class="GtkLabel" id="label13">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">Id:</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">False</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">False</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">0</property>
+	      <property name="ypad">0</property>
+	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	      <property name="width_chars">-1</property>
+	      <property name="single_line_mode">False</property>
+	      <property name="angle">0</property>
+	    </widget>
+	    <packing>
+	      <property name="left_attach">0</property>
+	      <property name="right_attach">1</property>
+	      <property name="top_attach">0</property>
+	      <property name="bottom_attach">1</property>
+	      <property name="x_options">fill</property>
+	      <property name="y_options"></property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkLabel" id="label14">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">Description:</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">False</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">False</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">0</property>
+	      <property name="ypad">0</property>
+	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	      <property name="width_chars">-1</property>
+	      <property name="single_line_mode">False</property>
+	      <property name="angle">0</property>
+	    </widget>
+	    <packing>
+	      <property name="left_attach">0</property>
+	      <property name="right_attach">1</property>
+	      <property name="top_attach">1</property>
+	      <property name="bottom_attach">2</property>
+	      <property name="x_options">fill</property>
+	      <property name="y_options"></property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkEntry" id="id">
+	      <property name="visible">True</property>
+	      <property name="can_focus">True</property>
+	      <property name="editable">True</property>
+	      <property name="visibility">True</property>
+	      <property name="max_length">0</property>
+	      <property name="text" translatable="yes"></property>
+	      <property name="has_frame">True</property>
+	      <property name="invisible_char">*</property>
+	      <property name="activates_default">False</property>
+	    </widget>
+	    <packing>
+	      <property name="left_attach">1</property>
+	      <property name="right_attach">2</property>
+	      <property name="top_attach">0</property>
+	      <property name="bottom_attach">1</property>
+	      <property name="y_options"></property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkEntry" id="description">
+	      <property name="visible">True</property>
+	      <property name="can_focus">True</property>
+	      <property name="editable">True</property>
+	      <property name="visibility">True</property>
+	      <property name="max_length">0</property>
+	      <property name="text" translatable="yes"></property>
+	      <property name="has_frame">True</property>
+	      <property name="invisible_char">*</property>
+	      <property name="activates_default">False</property>
+	    </widget>
+	    <packing>
+	      <property name="left_attach">1</property>
+	      <property name="right_attach">2</property>
+	      <property name="top_attach">1</property>
+	      <property name="bottom_attach">2</property>
+	      <property name="y_options"></property>
+	    </packing>
+	  </child>
+	</widget>
+	<packing>
+	  <property name="padding">0</property>
+	  <property name="expand">True</property>
+	  <property name="fill">True</property>
+	</packing>
+      </child>
+    </widget>
+  </child>
+</widget>
+
 </glade-interface>

Modified: haypo/hachoir/hachoir_class.py
===================================================================
--- haypo/hachoir/hachoir_class.py	2005-10-31 06:28:38 UTC (rev 240)
+++ haypo/hachoir/hachoir_class.py	2005-10-31 16:40:26 UTC (rev 241)
@@ -20,18 +20,25 @@
     def onRowClick(self, chunk_id):
         if chunk_id == None: return
         chunk = self.filter.getChunk(chunk_id)
+        print "Click: %s" % chunk
         if issubclass(chunk.__class__, FilterChunk):
             self.filter = chunk.getFilter()
             self.filter.display()
 
     def loadUser(self, filename):
-        stream = self.main_filter.getStream()
+        old_filter = self.filter
+        user = UserFilterDescriptor(xml_file=filename)
+        stream = self.filter.getStream()
         stream.seek(0)
-        user = UserFilterDescriptor(xml_file=filename)
-        self.filter = UserFilter(user, stream)
-        self.main_filter = self.filter
+        parent = self.filter.getParent()
+        self.filter = UserFilter(user, stream, parent)
+        if parent == None:
+            self.main_filter = self.filter
+        else:
+            chunk = old_filter.filter_chunk
+            chunk.setFilter(self.filter)
         self.filter.display()
-        self.ui.updateToolbar()
+        self.ui.window.updateToolbar()
     
     def saveUser(self, filename):
         my = UserFilterDescriptor(filter=self.main_filter)
@@ -61,7 +68,7 @@
         if self.display:
             print "=== File %s data ===" % filename
             display_func(self.filter)
-        self.ui.updateToolbar()
+        self.ui.window.updateToolbar()
 
     def run(self, filename):
         if filename != None:

Modified: haypo/hachoir/plugins/png.py
===================================================================
--- haypo/hachoir/plugins/png.py	2005-10-31 06:28:38 UTC (rev 240)
+++ haypo/hachoir/plugins/png.py	2005-10-31 16:40:26 UTC (rev 241)
@@ -96,7 +96,7 @@
     """
 
     def __init__(self, stream):
-        Filter.__init__(self, "png_file", "PNG file", stream)
+        Filter.__init__(self, "png_file", "PNG file", stream, None)
         self.read("header", "!8s", "File header")
         assert self.header == "\x89\x50\x4E\x47\x0D\x0A\x1A\x0A"
         self.readArray("chunks", PngChunk, "Png chunks", self.checkEndOfChunks)

Modified: haypo/hachoir/ui.py
===================================================================
--- haypo/hachoir/ui.py	2005-10-31 06:28:38 UTC (rev 240)
+++ haypo/hachoir/ui.py	2005-10-31 16:40:26 UTC (rev 241)
@@ -4,11 +4,15 @@
 import gtk
 import gtk.glade
 from ui_popup import TablePopup
+from ui_window import MainWindow
+from ui_property import PropertyDialog
 
 def loadInterface(hachoir):
     global ui 
+    global window
     glade = os.path.join(os.path.dirname(__file__), 'hachoir.glade')
     ui = GladeInterface(glade, hachoir)
+    window = ui.window
     hachoir.ui = ui 
     hachoir.ui.on_row_click = hachoir.onRowClick
     hachoir.ui.on_go_parent = hachoir.onGoParent
@@ -19,163 +23,29 @@
         self.glade_xml = filename
         self.on_row_click = None # event(chunk_id)
         self.on_go_parent = None # event(chunk_id)
-        self.about_dialog = None
         self.build_ui()
-
-    def getTableChunk(self, col):
-        chunk_id = self.table_store[col][3]
-        if chunk_id == None: return None
-        return self.hachoir.filter.getChunk(chunk_id)
-
-    def on_treeview_button_press_event(self, treeview, event):
-        if event.button == 3:
-            x = int(event.x)
-            y = int(event.y)
-            time = event.time
-            pthinfo = treeview.get_path_at_pos(x, y)
-            if pthinfo != None:
-                path, col, cellx, celly = pthinfo
-                treeview.grab_focus()
-                treeview.set_cursor( path, col, 0)
-                self.table_popup.show(pthinfo, event)
-            return 1
         
-    def updateToolbar(self):
-        self.toolbutton_open.set_sensitive(self.hachoir.main_filter != None)
-        self.toolbutton_save.set_sensitive(self.hachoir.main_filter != None)
-        if self.hachoir.main_filter == None:
-            self.toolbutton_parent.set_sensitive(False)
-
     def run(self):
-        self.updateToolbar()
+        self.window.updateToolbar()
         try:
             gtk.main()
         except KeyboardInterrupt:
             print "Interrupted (CTRL+C)."
 
-    def updateStatusBar(self, text):
-        self.statusbar.push(self.statusbar_state, text)
+    def loadAbout(self):
+        xml = gtk.glade.XML(self.glade_xml, "about_dialog")
+        self.about_dialog = xml.get_widget('about_dialog')
+        self.about_dialog.hide()
         
-    def enableParentButton(self, enable):
-        self.toolbutton_parent.set_sensitive(enable)
-
-    def clear_table(self):
-        self.table_store.clear()
-
-    def set_table_value(self, iter, column, value):
-        row = self.table_store[iter]
-        row[column] = value
-       
-    def add_table_child(self, parent, addr, size, format, id, description):
-        return self.table_store.append(parent, (addr, format, size, None, id, description, None,))
-       
-    def add_table(self, parent, addr, size, format, id, description, value):
-        self.table_store.append(parent, (addr, format, size, id, value, description, ))
-       
-    def load_window (self):
-        xml = gtk.glade.XML(self.glade_xml, "main_window")
-        self.window = xml.get_widget('main_window')
-        self.statusbar = xml.get_widget('statusbar')
-        self.toolbar = xml.get_widget('toolbar')
-        self.toolbutton_parent = xml.get_widget('toolbutton_parent')
-        self.toolbutton_new = xml.get_widget('toolbutton_new')
-        self.toolbutton_open = xml.get_widget('toolbutton_open')
-        self.toolbutton_save = xml.get_widget('toolbutton_save')
-        self.statusbar_state = self.statusbar.get_context_id("State")
-        self.table = xml.get_widget('table')
-        self.table_store = None
-        xml.signal_autoconnect(self)
-        
     def build_ui(self):
-        self.load_window()
+        self.window = MainWindow(self)
+        self.loadAbout()
         self.table_popup = TablePopup(self, self.glade_xml)
-        self.window.connect("key-press-event", self.onKeyUp)
-        self.table.connect("button_press_event", self.on_treeview_button_press_event)
-        self.window.set_size_request(760,300)
-        self.build_table()
-
-    def onKeyUp(self, widget, key, data=None):
-        if key.keyval == gtk.keysyms.Escape:
-            self.on_go_parent()
+        self.property_dialog = PropertyDialog(self)
         
-    def onTableClicked(self, widget, iter, data=None):
-        row = self.table_store[iter]
-        self.on_row_click(row[3])
-
-    def build_table(self):
-        self.table_store = gtk.TreeStore(str, str, int, str, str, str)
-        self.table.set_model(self.table_store)
-        self.table.connect("row-activated", self.onTableClicked)
-        self.treeview_add_column(self.table, "Address", 0)
-        self.treeview_add_column(self.table, "Format", 1)
-        self.treeview_add_column(self.table, "Size", 2)
-        self.treeview_add_column(self.table, "Name", 3)
-        self.treeview_add_column(self.table, "Value", 4)
-        self.treeview_add_column(self.table, "Description", 5)
-        self.table.set_reorderable(True)
-        self.treeselection = self.table.get_selection()
-
-    def treeview_add_column(self, treeview, name, num):
-        col = gtk.TreeViewColumn(name)
-        treeview.append_column(col)
-        cell = gtk.CellRendererText()
-        col.pack_start(cell, True)
-        col.add_attribute(cell, 'text', num)
-        treeview.set_search_column(num)
-        col.set_sort_column_id(num)
- 
-    def on_toolbutton_parent(self, widget, data=None):
-        self.on_go_parent()
-
-    def on_toolbutton_new(self, widget):
-        self.on_open_activate(widget)
-        
-    def on_open_activate(self, widget):
-        chooser = gtk.FileChooserDialog( \
-            title="Choose file to split",
-            action=gtk.FILE_CHOOSER_ACTION_OPEN,
-            buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_OPEN,gtk.RESPONSE_OK))
-        if chooser.run() == gtk.RESPONSE_OK:
-            filename = chooser.get_filename() 
-            self.hachoir.load(filename)
-        chooser.destroy()
-
-    def on_toolbutton_open(self, widget):
-        chooser = gtk.FileChooserDialog( \
-            title="Choose filter",
-            action=gtk.FILE_CHOOSER_ACTION_OPEN,
-            buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_OPEN,gtk.RESPONSE_OK))
-        if chooser.run() == gtk.RESPONSE_OK:
-            filename = chooser.get_filename() 
-            print "TODO: Load %s" % filename
-            self.hachoir.loadUser(filename)
-        chooser.destroy()
-
-    def on_toolbutton_save(self, widget):
-        print "Save"
-        chooser = gtk.FileChooserDialog( \
-            title="Save filter into ...",
-            action=gtk.FILE_CHOOSER_ACTION_SAVE,
-            buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK))
-        if chooser.run() == gtk.RESPONSE_OK:
-            filename = chooser.get_filename() 
-            self.hachoir.saveUser(filename)
-        chooser.destroy()
-
-    def on_about_activate(self, widget):
-        if self.about_dialog == None:
-            self.about_xml = gtk.glade.XML(self.glade_xml, "about_dialog")
-            self.about_dialog = self.about_xml.get_widget('about_dialog')
-        self.about_dialog.show()
-
-    def on_quit_activate(self, widget):
-        self.quit()
-
-    def on_window_destroy(self, widget, data=None):
-        self.quit()
-
     def quit(self):
         print "Quit."
         gtk.main_quit()
 
 ui = None
+window = None

Modified: haypo/hachoir/ui_new_chunk.py
===================================================================
--- haypo/hachoir/ui_new_chunk.py	2005-10-31 06:28:38 UTC (rev 240)
+++ haypo/hachoir/ui_new_chunk.py	2005-10-31 16:40:26 UTC (rev 241)
@@ -16,7 +16,6 @@
         self.format_widget = xml.get_widget("format")
         self.id_widget = xml.get_widget("identifier")
         self.desc_widget = xml.get_widget("description")
-        self.response = gtk.RESPONSE_CANCEL
 
     def getId(self):
         return self.id_widget.get_text()

Modified: haypo/hachoir/ui_popup.py
===================================================================
--- haypo/hachoir/ui_popup.py	2005-10-31 06:28:38 UTC (rev 240)
+++ haypo/hachoir/ui_popup.py	2005-10-31 16:40:26 UTC (rev 241)
@@ -4,6 +4,7 @@
 import gtk.glade
 from chunk import FormatChunk
 from ui_new_chunk import NewChunkDialog
+from format import splitFormat # TODO: remove this line
 
 class TablePopup:
     def __init__(self, ui, filename):
@@ -16,7 +17,7 @@
 
     def show(self, path_info, event):
         col = path_info[0][0]
-        self.chunk = self.ui.getTableChunk(col)
+        self.chunk = self.ui.window.getTableChunk(col)
         if self.chunk == None:
             print "Can't get chunk"
             return
@@ -30,6 +31,16 @@
         desc = self.new_chunk.getDescription()
         self.chunk.setFormat(format, "split", id, desc)
 
+    def onNewFilter(self, event):
+        if self.new_chunk.runNewChunk() == gtk.RESPONSE_CANCEL: return
+        assert issubclass(self.chunk.__class__, FormatChunk) and self.chunk.isString()
+        format = self.new_chunk.getFormat()
+        split_format = splitFormat(format)
+        size = int(split_format[1])
+        id = self.new_chunk.getId()
+        desc = self.new_chunk.getDescription()
+        self.chunk.getParent().addNewFilter(self.chunk, id, size, desc)
+
     def onSetFormat(self, event):
         if issubclass(self.chunk.__class__, FormatChunk):
             if self.new_chunk.runSetFormat(self.chunk) == gtk.RESPONSE_CANCEL: return

Added: haypo/hachoir/ui_property.py
===================================================================
--- haypo/hachoir/ui_property.py	2005-10-31 06:28:38 UTC (rev 240)
+++ haypo/hachoir/ui_property.py	2005-10-31 16:40:26 UTC (rev 241)
@@ -0,0 +1,28 @@
+import pygtk
+pygtk.require ('2.0')
+import gtk
+import gtk.glade
+from format import splitFormat
+
+class PropertyDialog:
+    def __init__(self, ui):
+        self.ui = ui
+        xml = gtk.glade.XML(self.ui.glade_xml, "filter_property")
+        self.window = xml.get_widget("filter_property")
+        self.window.hide()
+        xml.signal_autoconnect(self)
+        self.id_widget = xml.get_widget("id")
+        self.desc_widget = xml.get_widget("description")
+
+    def getId(self):
+        return self.id_widget.get_text()
+
+    def getDescription(self):
+        return self.desc_widget.get_text()
+
+    def run(self, filter):
+        self.id_widget.set_text(filter.id)
+        self.desc_widget.set_text(filter.description)
+        r = self.window.run()
+        self.window.hide()
+        return r

Added: haypo/hachoir/ui_window.py
===================================================================
--- haypo/hachoir/ui_window.py	2005-10-31 06:28:38 UTC (rev 240)
+++ haypo/hachoir/ui_window.py	2005-10-31 16:40:26 UTC (rev 241)
@@ -0,0 +1,156 @@
+import os
+import pygtk
+pygtk.require ('2.0')
+import gtk
+import gtk.glade
+
+class MainWindow:
+    def __init__(self, ui):
+        self.ui = ui
+        xml = gtk.glade.XML(self.ui.glade_xml, "main_window")
+        self.window = xml.get_widget('main_window')
+        self.statusbar = xml.get_widget('statusbar')
+        self.toolbar = xml.get_widget('toolbar')
+        self.toolbutton_parent = xml.get_widget('toolbutton_parent')
+        self.toolbutton_new = xml.get_widget('toolbutton_new')
+        self.toolbutton_open = xml.get_widget('toolbutton_open')
+        self.toolbutton_save = xml.get_widget('toolbutton_save')
+        self.toolbutton_property = xml.get_widget('toolbutton_property')
+        self.statusbar_state = self.statusbar.get_context_id("State")
+        self.table = xml.get_widget('table')
+        self.table_store = None
+        xml.signal_autoconnect(self)
+        self.window.connect("key-press-event", self.onKeyUp)
+        self.table.connect("button_press_event", self.on_treeview_button_press_event)
+        self.window.set_size_request(760,300)
+        self.build_table()
+        
+    def updateToolbar(self):
+        file_present = (self.ui.hachoir.main_filter != None)
+        self.toolbutton_open.set_sensitive(file_present)
+        self.toolbutton_save.set_sensitive(file_present)
+        if not file_present:
+            self.toolbutton_parent.set_sensitive(False)
+        self.toolbutton_property.set_sensitive(file_present)
+
+    def getTableChunk(self, col):
+        chunk_id = self.table_store[col][3]
+        if chunk_id == None: return None
+        return self.ui.hachoir.filter.getChunk(chunk_id)
+
+    def on_treeview_button_press_event(self, treeview, event):
+        if event.button == 3:
+            x = int(event.x)
+            y = int(event.y)
+            time = event.time
+            pthinfo = treeview.get_path_at_pos(x, y)
+            if pthinfo != None:
+                path, col, cellx, celly = pthinfo
+                treeview.grab_focus()
+                treeview.set_cursor( path, col, 0)
+                self.ui.table_popup.show(pthinfo, event)
+            return 1
+
+    def updateStatusBar(self, text):
+        self.statusbar.push(self.statusbar_state, text)
+        
+    def enableParentButton(self, enable):
+        self.toolbutton_parent.set_sensitive(enable)
+
+    def clear_table(self):
+        self.table_store.clear()
+
+    def set_table_value(self, iter, column, value):
+        row = self.table_store[iter]
+        row[column] = value
+       
+    def add_table_child(self, parent, addr, size, format, id, description):
+        return self.table_store.append(parent, (addr, format, size, None, id, description, None,))
+       
+    def add_table(self, parent, addr, size, format, id, description, value):
+        self.table_store.append(parent, (addr, format, size, id, value, description, ))
+
+    def onKeyUp(self, widget, key, data=None):
+        if key.keyval == gtk.keysyms.Escape:
+            self.on_go_parent()
+        
+    def onTableClicked(self, widget, iter, data=None):
+        row = self.table_store[iter]
+        self.ui.on_row_click(row[3])
+
+    def build_table(self):
+        self.table_store = gtk.TreeStore(str, str, int, str, str, str)
+        self.table.set_model(self.table_store)
+        self.table.connect("row-activated", self.onTableClicked)
+        self.treeview_add_column(self.table, "Address", 0)
+        self.treeview_add_column(self.table, "Format", 1)
+        self.treeview_add_column(self.table, "Size", 2)
+        self.treeview_add_column(self.table, "Name", 3)
+        self.treeview_add_column(self.table, "Value", 4)
+        self.treeview_add_column(self.table, "Description", 5)
+        self.table.set_reorderable(True)
+        self.treeselection = self.table.get_selection()
+
+    def treeview_add_column(self, treeview, name, num):
+        col = gtk.TreeViewColumn(name)
+        treeview.append_column(col)
+        cell = gtk.CellRendererText()
+        col.pack_start(cell, True)
+        col.add_attribute(cell, 'text', num)
+        treeview.set_search_column(num)
+        col.set_sort_column_id(num)
+ 
+    def on_toolbutton_parent(self, widget, data=None):
+        self.ui.on_go_parent()
+
+    def on_toolbutton_new(self, widget):
+        self.on_open_activate(widget)
+
+    def on_toolbutton_property(self, widget):
+        print "Property"
+        filter = self.ui.hachoir.filter
+        dlg = self.ui.property_dialog
+        if dlg.run(filter) == gtk.RESPONSE_CANCEL: return
+        filter.id = dlg.getId() 
+        filter.description = dlg.getDescription()
+        filter.updateStatusBar()
+        
+    def on_open_activate(self, widget):
+        chooser = gtk.FileChooserDialog( \
+            title="Choose file to split",
+            action=gtk.FILE_CHOOSER_ACTION_OPEN,
+            buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_OPEN,gtk.RESPONSE_OK))
+        if chooser.run() == gtk.RESPONSE_OK:
+            filename = chooser.get_filename() 
+            self.ui.hachoir.load(filename)
+        chooser.destroy()
+
+    def on_toolbutton_open(self, widget):
+        chooser = gtk.FileChooserDialog( \
+            title="Choose filter",
+            action=gtk.FILE_CHOOSER_ACTION_OPEN,
+            buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_OPEN,gtk.RESPONSE_OK))
+        if chooser.run() == gtk.RESPONSE_OK:
+            filename = chooser.get_filename() 
+            self.ui.hachoir.loadUser(filename)
+        chooser.destroy()
+
+    def on_toolbutton_save(self, widget):
+        print "Save"
+        chooser = gtk.FileChooserDialog( \
+            title="Save filter into ...",
+            action=gtk.FILE_CHOOSER_ACTION_SAVE,
+            buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_SAVE,gtk.RESPONSE_OK))
+        if chooser.run() == gtk.RESPONSE_OK:
+            filename = chooser.get_filename() 
+            self.ui.hachoir.saveUser(filename)
+        chooser.destroy()
+
+    def on_about_activate(self, widget):
+        self.about_dialog.show()
+
+    def on_quit_activate(self, widget):
+        self.ui.quit()
+
+    def on_window_destroy(self, widget, data=None):
+        self.ui.quit()

Modified: haypo/hachoir/user_filter.py
===================================================================
--- haypo/hachoir/user_filter.py	2005-10-31 06:28:38 UTC (rev 240)
+++ haypo/hachoir/user_filter.py	2005-10-31 16:40:26 UTC (rev 241)
@@ -21,9 +21,9 @@
         self.sub_format = sub_format
 
 class UserFilter(Filter):
-    def __init__(self, descriptor, stream):
-        Filter.__init__(self, "user_filter", "User filter", stream)
-        for chunk in descriptor.chunks:
+    def __init__(self, desc, stream, parent):
+        Filter.__init__(self, desc.id, desc.description, stream, parent)
+        for chunk in desc.chunks:
             if chunk.format == "sub":
                 modules = chunk.sub_format.split('.')
                 chunk_class = modules[-1]
@@ -41,6 +41,9 @@
             self.createFromFilter(filter)
         elif xml_file != None:
             self.createFromXML(xml_file)
+        else:
+            self.id = None 
+            self.description = None 
             
     def writeIntoXML(self, filename):
         file = open(filename, "w")
@@ -50,7 +53,10 @@
     def createFromXML(self, filename):
         xml = parse(filename)
         self.chunks = []
-        self.__loadXML(xml.documentElement)
+        root = xml.documentElement
+        self.id = root.getAttribute("id")
+        self.description = root.getAttribute("description")
+        self.__loadXML(root)
         
     def __loadXML(self, node):
         for chunk in node.childNodes:
@@ -73,6 +79,8 @@
         doc = impl.createDocument(None, "user_filter", None)
         root = doc.documentElement
         root.setAttribute("hachoir_version", VERSION)
+        root.setAttribute("id", self.id)
+        root.setAttribute("description", self.id)
         self.__toXML(doc, root)
         return doc
 
@@ -85,9 +93,11 @@
             node.appendChild(item)
             if issubclass(chunk.__class__, UserSubChunk):
                 item.setAttribute("sub_format", chunk.sub_format)
-                chunk.sub.__toXML(doc, item)
+#                chunk.sub.__toXML(doc, item)
 
     def createFromFilter(self, filter):
+        self.id = filter.id 
+        self.description = filter.description
         self.chunks = []
         self.__createFromChunks(filter.getChunks())
 
@@ -98,7 +108,8 @@
             else:
                 if issubclass(chunk.__class__, FilterChunk):
                     format = str(chunk.getFilter().__class__)
-                    sub = UserFilterDescriptor(filter=chunk.getFilter())
+                    #sub = UserFilterDescriptor(filter=chunk.getFilter())
+                    sub = None
                     user = UserSubChunk(chunk.id, sub, format, chunk.description)
                 else:
                     user = UserChunk(chunk.id, chunk.getFormat(), chunk.description)



