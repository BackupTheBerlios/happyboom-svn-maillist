From haypo at mail.berlios.de  Tue Aug 21 19:07:54 2007
From: haypo at mail.berlios.de (haypo at mail.berlios.de)
Date: Tue, 21 Aug 2007 19:07:54 +0200
Subject: [Happyboom-svn] r469 - haypo
Message-ID: <200708211707.l7LH7sFW021516@sheep.berlios.de>

Author: haypo
Date: 2007-08-21 19:07:47 +0200 (Tue, 21 Aug 2007)
New Revision: 469

Removed:
   haypo/hachoir/
   haypo/lamer/
Log:
Remove lamer and hachoir projects




From haypo at mail.berlios.de  Tue Aug 21 19:12:21 2007
From: haypo at mail.berlios.de (haypo at mail.berlios.de)
Date: Tue, 21 Aug 2007 19:12:21 +0200
Subject: [Happyboom-svn] r470 - haypo
Message-ID: <200708211712.l7LHCLcC028596@sheep.berlios.de>

Author: haypo
Date: 2007-08-21 19:12:19 +0200 (Tue, 21 Aug 2007)
New Revision: 470

Removed:
   haypo/greycstoration_gimp/
Log:
Remove greycstoration_gimp




From haypo at mail.berlios.de  Tue Aug 21 22:58:56 2007
From: haypo at mail.berlios.de (haypo at mail.berlios.de)
Date: Tue, 21 Aug 2007 22:58:56 +0200
Subject: [Happyboom-svn] r471 - haypo
Message-ID: <200708212058.l7LKwujA005395@sheep.berlios.de>

Author: haypo
Date: 2007-08-21 22:58:53 +0200 (Tue, 21 Aug 2007)
New Revision: 471

Removed:
   haypo/apache_log.py
   haypo/evolution_set_smtp.py
   haypo/mediawiki/
   haypo/poilu/
   haypo/trouphp/
   haypo/turing/
Log:
Remove old projects


Deleted: haypo/apache_log.py
===================================================================
--- haypo/apache_log.py	2007-08-21 17:12:19 UTC (rev 470)
+++ haypo/apache_log.py	2007-08-21 20:58:53 UTC (rev 471)
@@ -1,242 +0,0 @@
-#!/usr/bin/python
-# -*- coding: iso-8859-1 -*-
-#
-# Python script to parse Apache log file
-# Creation: 21 septembre 2005
-# Author: Victor Stinner
-
-import re, time, sys, traceback
-
-class ApacheLogParser:
-    def __init__(self):
-        # String like "abc" or "a\"bc" or just ""
-        match_string = r"\"((?:[^\"]|\\\")*)\""
-
-        # Regex matching one line
-        regex  = r"^([^ ]+) " # Origin
-        regex += r"([^ ]+) " # Host
-        regex += r"([a-z]+|-) " # User
-        regex += r"\[([^]]+)\] " # Date
-        regex += r"\"(POST|GET|HEAD) ([^ ]+) HTTP/1\.[01]\" " # Method, Url 
-        regex += r"([0-9]{3}) ([0-9]+|-) " # Code, Size
-        regex += match_string+" " # Referrer
-        
-        match_string = r"\"([^\"]*)\""
-        regex += match_string+"$" # Browser string
-        
-        self._regex = re.compile(regex)
-        self.handler = self.processLine
-
-    def processLine(self, filename, line_number, line, info):
-        print "Line %u: %s %s" % (line_number, info["method"], info["url"])
-
-    def parseLine(self, filename, line_number, line):
-        try:
-            m = self._regex.search(line)
-            if m == None:
-                print "Can't parse %s:%u:\n%s" % (filename, line_number, line)
-                return
-            origin, host, user, date, method, url, code, size, referrer, browser = m.groups()
-            kw = { \
-                "origin": origin,
-                "host": host,
-                "user": user,
-                "date": date,
-                "method": method,
-                "url": url,
-                "code": int(code),
-                "size": size,
-                "referrer": referrer,
-                "browser": browser}
-            self.handler(filename, line_number, line, kw)
-        except KeyboardInterrupt:
-            print "Interrupt line: %s" % line
-            raise
-
-    def parseFile(self, filename):
-        f = open(filename, "r")
-
-        data = f.read()
-        data = data.split("\n")
-        if data[-1]=="": del data[-1]
-        
-        line_number = 1
-        print "Load file %s ..." % filename
-        try:
-            nb_lines = len(data)
-#            t = time.time()
-            for line in data:
-#                if 1.0 < time.time() - t:
-#                    t = time.time()
-#                    progress = int( (line_number-1)*100/nb_lines )
-#                    print "Progress: %s%%" % (progress)
-                self.parseLine(filename, line_number, line)
-                line_number += 1
-            print "File loaded."
-        except KeyboardInterrupt:
-            print "Load interrupted (CTRL+C)."
-            traceback.print_exc()
-            sys.exit(1)
-
-    def result(self):
-        return self.origin
-
-class ApacheLogParser_Stat(ApacheLogParser):
-    def __init__(self, host):
-        ApacheLogParser.__init__(self)
-        self.host = host
-        self.regex_host = re.compile("^"+host+"(.*)$")
-        self.stat_page = {}
-        self.stat_referrer = {}
-        self.ignore_handler = None
-        
-    def hit(self, attr, key):
-        if key in attr:
-            attr[key] = attr[key] + 1
-        else:
-            attr[key] = 1
-
-    def processLine(self, filename, line_number, line, info):
-        url = info["url"]
-        code = info["code"]
-        referrer = info["referrer"]
-
-        # Clean url (remove hostname)
-        m = self.regex_host.match(url)
-        if m != None:
-            url = "/"+m.group(1)
-
-        # Ignore this hit?
-        if self.ignore_handler:
-            if self.ignore_handler(info)==True: return
-
-        # Page hit stat
-        if code not in [302, 404]:
-            self.hit(self.stat_page, url)
-            if referrer != "-":
-                self.hit(self.stat_referrer, referrer)
-
-    def _sort_value(self, val1, val2):
-        if val1 > val2:
-            return -1
-        elif val1 == val2:
-            return 0
-        else:
-            return 1
-
-    def _sort_stat_referrer(self, key1, key2):
-        return self._sort_value(self.stat_referrer[key1],  self.stat_referrer[key2])
-
-    def _sort_stat_page(self, key1, key2):
-        return self._sort_value(self.stat_page[key1],  self.stat_page[key2])
-
-    def getTopReferrer(self, max=30, ignores=[]):
-        return self.getTop(self.stat_referrer, self._sort_stat_referrer, max, ignores)
-        
-    def getTopPage(self, max=30, ignores=[]):
-        return self.getTop(self.stat_page, self._sort_stat_page, max, ignores)
-        
-    def getTop(self, attr, sort_func, max=30, ignores=[]):
-        keys = attr.keys()
-        keys.sort(sort_func)
-        top = []
-        cpt = 1
-        for key in keys:
-            ok = True
-            for ignore in ignores:
-                m = ignore.search(key)
-                if m != None:
-                    ok = False
-                    break
-            if ok:
-                top.append( (attr[key], key,) )
-                cpt += 1
-                if max < cpt: break
-        return top
-
-def printTopPage(r, max):
-    # Top pages
-    print "=== Top page ==="
-    pages = r.getTopPage(max)
-    for page in pages:
-        print "%u hit(s): %s" % (page[0], page[1])
-
-# Regex google hosts
-def googleHosts():        
-    return ["216\.239\.59\.104", \
-        "66\.249\.93\.104", "66.102.9.104", \
-        "216.109.124.98", "(images|www)\.google\.[a-z]{2,3}"]
-
-def msnHosts():
-    return ["search.msn.[a-z]{2,3}"]
-
-def yahooHosts():
-    return ["[a-z]+.search.yahoo.com"]
-
-def altavistaHosts():
-    return ["www.altavista.com"]
-
-def faiSearchHosts():
-    return ["search[0-9]-[0-9].free.fr", "search.ke.voila.fr"]
-
-def searchEngineHosts():        
-    return googleHosts() + yahooHosts() + msnHosts() + altavistaHosts() + faiSearchHosts()
-
-def printTopReferrer(r, max):
-    print "=== Top referrer ==="
-    pages = r.getTopReferrer(max)
-    for page in pages:
-        print "%u hit(s): %s" % (page[0], page[1])
-
-class HaypoCALC:
-    def __init__(self):
-        # Ignore referrer regex
-        hosts = ["(www\.)?haypocalc\.com"] # Ignore Haypocalc
-        hosts.append ("exoscin\.free\.fr") # Ignore exoscin.free.fr
-        hosts += searchEngineHosts()       # Ignore search engines
-        self.ignore_referrer = [ re.compile(r"^http://("+"|".join(hosts)+")")  ]
-
-        # Ignore url regex
-        self.ignore_url = []
-        ignore_ext = ["css", "jpg", "JPG", "png", "js", "gif", "swf"]
-        ignore_ext = "|".join(ignore_ext)
-        self.ignore_url.append( re.compile(r"\.("+ignore_ext+r")(\?.*)?$") )
-        self.ignore_url.append( re.compile(r"^/wiki/index.php\?.*&action=raw") )
-        self.ignore_url.append( re.compile(r"^/robots\.txt$") )
-
-    def ignoreHandler(self, info):
-        url = info["url"]
-        for regex in self.ignore_url:
-            if regex.search(url) != None: return True
-            
-        referrer = info["referrer"]
-        for regex in self.ignore_referrer:
-            if regex.search(referrer) != None: return True
-            
-        return False
-
-def usage():
-    print "Usage: %s filename" % (sys.argv[0])
-
-def main():
-    try:
-        if len(sys.argv)<2:
-            usage()
-            sys.exit(1)
-        h=HaypoCALC()
-        filename = sys.argv[1]
-        r=ApacheLogParser_Stat("haypocalc.com")
-        r.ignore_handler = h.ignoreHandler
-
-        r.parseFile(filename)
-#        for month in range(1,31):
-#            filename = "/mnt/media/log-haypocalc/logs-08-2005/haypocalc.com-%02u-08-2005.log" % month
-#            r.parseFile(filename)
-        
-        printTopPage(r, 20)
-        printTopReferrer(r, 20)
-    except KeyboardInterrupt:
-        print "Program interrupted (CTRL+C)."
-        
-
-if __name__=="__main__": main()    

Deleted: haypo/evolution_set_smtp.py
===================================================================
--- haypo/evolution_set_smtp.py	2007-08-21 17:12:19 UTC (rev 470)
+++ haypo/evolution_set_smtp.py	2007-08-21 20:58:53 UTC (rev 471)
@@ -1,102 +0,0 @@
-#
-# Set SMTP server in Evolution configuration using gconftool-2 tool
-# and parser XML files (from gconf).
-# Author: Victor Stinner
-# 15 august 2005
-#
-
-import os, sys, re
-
-def getAccounts():
-	out = os.popen("gconftool-2 --get /apps/evolution/mail/accounts")
-	raw = out.read()
-	
-	data = raw[1:-3]
-	data = data.split("\n")
-
-	accounts = []
-	for i in range(0,len(data)-1,2):
-		if 0 < i:
-			accounts.append( data[i][1:] + data[i+1] )
-		else:
-			accounts.append( data[i] + data[i+1] )
-	
-	return (raw, accounts,)
-	
-def changeSmtp(content, new_smtp_url):
-	import xml.dom.minidom
-	doc = xml.dom.minidom.parseString(content)
-	transports = doc.getElementsByTagName("transport")
-	urls = transports[0].getElementsByTagName("url")
-	urls[0].childNodes[0].data = new_smtp_url
-	return doc.toxml("UTF-8")
-
-def extractXmlHeader(content):
-	r = re.compile(r'^(<\?xml version="1\.0" encoding="UTF-8"\?>)\n(.*)$')
-	m = r.match(content)
-	if m == None:
-		print "Erreur XML pour %s" % (content)
-		sys.exit(1)
-	return (m.group(1), m.group(2), )
-
-def escape(text):
-	import re
-	text = re.sub(r"([\"'\\])", r"\\\1", text)
-#	text = text.replace("\n", "\\\\n")
-#	text = text.replace("\r", "\\\\r")
-	return text 
-	
-def saveAccounts(accounts):
-	key = "/apps/evolution/mail/accounts"
-	cmd  = "/usr/bin/gconftool-2 "
-	cmd += "--type=list "
-	cmd += "--list-type=string "
-	cmd += "--set /apps/evolution/mail/accounts "
-	cmd += '"'+escape(accounts)+'"'
-	stdin, stdout, stderr = os.popen3(cmd)
-	err = stderr.read()
-	if err != "":
-		print "Erreur :\n%s" % (err)
-		sys.exit(1)
-
-def convertAccounts(accounts):
-	old_accounts = accounts
-	accounts = []
-	for account in old_accounts:
-		accounts.append( extractXmlHeader(account) )
-		
-	out = "["+accounts[0][0]+"\n"+accounts[0][1]
-	del accounts[0]
-	for account in accounts:
-		out = out + "\n,"+account[0]+"\n"+account[1]
-	out = out + "\n]"
-	return out
-
-def backupAccounts(raw):
-	f = open("/home/haypo/1backup/evolution_old_accounts.yyy", "w")
-	f.write(raw)
-	f.close()
-
-def main():
-	if len(sys.argv)<2:
-		print "Usage: %s SERVER" % sys.argv[0]
-		sys.exit(1)
-	smtp = sys.argv[1]
-    email = "victor.stinner%40utbm.fr"
-
-	try:
-		print "Set Evolution STMP to %s." % (smtp)
-		
-		url = "smtp://"+email+"@"+smtp+"/;use_ssl=never"	
-		raw, accounts = getAccounts()
-#		backupAccounts(raw)
-		for i in range(len(accounts)):
-			accounts[i] = changeSmtp(accounts[i], url)
-		raw2 = convertAccounts(accounts)
-		saveAccounts(raw2)
-		print "Done."
-		
-	except Exception, err:
-		print "Exception", err
-
-if __name__=="__main__": main()



From haypo at mail.berlios.de  Tue Aug 21 23:00:36 2007
From: haypo at mail.berlios.de (haypo at mail.berlios.de)
Date: Tue, 21 Aug 2007 23:00:36 +0200
Subject: [Happyboom-svn] r472 - /
Message-ID: <200708212100.l7LL0aRg005598@sheep.berlios.de>

Author: haypo
Date: 2007-08-21 23:00:33 +0200 (Tue, 21 Aug 2007)
New Revision: 472

Removed:
   haypo/
Log:
Remove personal directory, moved to my own repository




